

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri May 01 21:48:45 2020

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 12 "C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 12 "C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\Main.c"
    45  2007  FF72               	dw 0xFFFE & 0xFFFB & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFF7F & 0xFFFF & 0xFFFF & 0xFFFF ;#
    46                           	FNCALL	_main,_InitADC
    47                           	FNCALL	_main,_InitLCD
    48                           	FNCALL	_main,_GetADCValue
    49                           	FNCALL	_main,___lwtoft
    50                           	FNCALL	_main,_map
    51                           	FNCALL	_main,___fttol
    52                           	FNCALL	_main,___lwdiv
    53                           	FNCALL	_main,___wmul
    54                           	FNCALL	_main,_ClearLCDScreen
    55                           	FNCALL	_main,_WriteDataToLCD
    56                           	FNCALL	_ClearLCDScreen,_WriteCommandToLCD
    57                           	FNCALL	_InitLCD,_ToggleEpinOfLCD
    58                           	FNCALL	_InitLCD,_WriteCommandToLCD
    59                           	FNCALL	_WriteCommandToLCD,_ToggleEpinOfLCD
    60                           	FNCALL	_WriteDataToLCD,_ToggleEpinOfLCD
    61                           	FNCALL	_map,___ftneg
    62                           	FNCALL	_map,___ftadd
    63                           	FNCALL	_map,___ftdiv
    64                           	FNCALL	_map,___ftmul
    65                           	FNCALL	___lwtoft,___ftpack
    66                           	FNCALL	___ftmul,___ftpack
    67                           	FNCALL	___ftdiv,___ftpack
    68                           	FNCALL	___ftadd,___ftpack
    69                           	FNROOT	_main
    70                           	global	_ADCON0
    71                           psect	text421,local,class=CODE,delta=2
    72                           global __ptext421
    73  0000                     __ptext421:
    74  001F                     _ADCON0	set	31
    75                           	global	_ADRESH
    76  001E                     _ADRESH	set	30
    77                           	global	_PORTB
    78  0006                     _PORTB	set	6
    79                           	global	_CARRY
    80  0018                     _CARRY	set	24
    81                           	global	_GIE
    82  005F                     _GIE	set	95
    83                           	global	_GO_nDONE
    84  00FA                     _GO_nDONE	set	250
    85                           	global	_RB0
    86  0030                     _RB0	set	48
    87                           	global	_RB1
    88  0031                     _RB1	set	49
    89                           	global	_RB4
    90  0034                     _RB4	set	52
    91                           	global	_RB5
    92  0035                     _RB5	set	53
    93                           	global	_RB6
    94  0036                     _RB6	set	54
    95                           	global	_RB7
    96  0037                     _RB7	set	55
    97                           	global	_ADCON1
    98  009F                     _ADCON1	set	159
    99                           	global	_ADRESL
   100  009E                     _ADRESL	set	158
   101                           	global	_TRISA
   102  0085                     _TRISA	set	133
   103                           	global	_TRISE
   104  0089                     _TRISE	set	137
   105                           	global	_TRISB0
   106  0430                     _TRISB0	set	1072
   107                           	global	_TRISB1
   108  0431                     _TRISB1	set	1073
   109                           	global	_TRISB4
   110  0434                     _TRISB4	set	1076
   111                           	global	_TRISB5
   112  0435                     _TRISB5	set	1077
   113                           	global	_TRISB6
   114  0436                     _TRISB6	set	1078
   115                           	global	_TRISB7
   116  0437                     _TRISB7	set	1079
   117                           	global	_EEADR
   118  010D                     _EEADR	set	269
   119                           	global	_EEDATA
   120  010C                     _EEDATA	set	268
   121                           	global	_EECON1
   122  018C                     _EECON1	set	396
   123                           	global	_EECON2
   124  018D                     _EECON2	set	397
   125                           	global	_RD
   126  0C60                     _RD	set	3168
   127                           	global	_WR
   128  0C61                     _WR	set	3169
   129                           	global	_WREN
   130  0C62                     _WREN	set	3170
   131                           	file	"ADC.as"
   132                           	line	#
   133                           psect cinit,class=CODE,delta=2
   134                           global start_initialization
   135  0CDA                     start_initialization:
   136                           
   137                           psect cinit,class=CODE,delta=2
   138                           global end_of_initialization
   139                           
   140                           ;End of C runtime variable initialization code
   141                           
   142  0CDA                     end_of_initialization:
   143  0CDA  0183               clrf status
   144  0CDB  120A  118A  2B9C   ljmp _main	;jump to C main() function
   145                           psect	cstackBANK1,class=BANK1,space=1
   146                           global __pcstackBANK1
   147  00A0                     __pcstackBANK1:
   148                           	global	??_main
   149  00A0                     ??_main:	; 0 bytes @ 0x0
   150  00A0                     	ds	12
   151                           	global	main@digit4
   152  00AC                     main@digit4:	; 2 bytes @ 0xC
   153  00AC                     	ds	2
   154                           	global	main@digit3
   155  00AE                     main@digit3:	; 2 bytes @ 0xE
   156  00AE                     	ds	2
   157                           	global	main@ADC_value1
   158  00B0                     main@ADC_value1:	; 2 bytes @ 0x10
   159  00B0                     	ds	2
   160                           	global	main@ADC_value2
   161  00B2                     main@ADC_value2:	; 2 bytes @ 0x12
   162  00B2                     	ds	2
   163                           	global	main@ADC_value3
   164  00B4                     main@ADC_value3:	; 2 bytes @ 0x14
   165  00B4                     	ds	2
   166                           	global	main@ADC_value4
   167  00B6                     main@ADC_value4:	; 2 bytes @ 0x16
   168  00B6                     	ds	2
   169                           	global	main@ADC_value5
   170  00B8                     main@ADC_value5:	; 2 bytes @ 0x18
   171  00B8                     	ds	2
   172                           	global	main@ADC_value6
   173  00BA                     main@ADC_value6:	; 2 bytes @ 0x1A
   174  00BA                     	ds	2
   175                           	global	main@ADC_value7
   176  00BC                     main@ADC_value7:	; 2 bytes @ 0x1C
   177  00BC                     	ds	2
   178                           	global	main@ADC_value8
   179  00BE                     main@ADC_value8:	; 2 bytes @ 0x1E
   180  00BE                     	ds	2
   181                           	global	main@digit2
   182  00C0                     main@digit2:	; 2 bytes @ 0x20
   183  00C0                     	ds	2
   184                           	global	main@digit1
   185  00C2                     main@digit1:	; 2 bytes @ 0x22
   186  00C2                     	ds	2
   187                           	global	main@ADC_value
   188  00C4                     main@ADC_value:	; 2 bytes @ 0x24
   189  00C4                     	ds	2
   190                           psect	cstackCOMMON,class=COMMON,space=1
   191                           global __pcstackCOMMON
   192  0070                     __pcstackCOMMON:
   193                           	global	?_InitADC
   194  0070                     ?_InitADC:	; 0 bytes @ 0x0
   195                           	global	??_InitADC
   196  0070                     ??_InitADC:	; 0 bytes @ 0x0
   197                           	global	?_InitLCD
   198  0070                     ?_InitLCD:	; 0 bytes @ 0x0
   199                           	global	?_ClearLCDScreen
   200  0070                     ?_ClearLCDScreen:	; 0 bytes @ 0x0
   201                           	global	?_WriteDataToLCD
   202  0070                     ?_WriteDataToLCD:	; 0 bytes @ 0x0
   203                           	global	?_main
   204  0070                     ?_main:	; 0 bytes @ 0x0
   205                           	global	?_ToggleEpinOfLCD
   206  0070                     ?_ToggleEpinOfLCD:	; 0 bytes @ 0x0
   207                           	global	??_ToggleEpinOfLCD
   208  0070                     ??_ToggleEpinOfLCD:	; 0 bytes @ 0x0
   209                           	global	?_WriteCommandToLCD
   210  0070                     ?_WriteCommandToLCD:	; 0 bytes @ 0x0
   211                           	global	?_GetADCValue
   212  0070                     ?_GetADCValue:	; 2 bytes @ 0x0
   213                           	global	?___wmul
   214  0070                     ?___wmul:	; 2 bytes @ 0x0
   215                           	global	?___ftpack
   216  0070                     ?___ftpack:	; 3 bytes @ 0x0
   217                           	global	?___ftneg
   218  0070                     ?___ftneg:	; 3 bytes @ 0x0
   219                           	global	___wmul@multiplier
   220  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   221                           	global	___ftneg@f1
   222  0070                     ___ftneg@f1:	; 3 bytes @ 0x0
   223                           	global	___ftpack@arg
   224  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   225  0070                     	ds	2
   226                           	global	??_GetADCValue
   227  0072                     ??_GetADCValue:	; 0 bytes @ 0x2
   228                           	global	??_WriteDataToLCD
   229  0072                     ??_WriteDataToLCD:	; 0 bytes @ 0x2
   230                           	global	??_WriteCommandToLCD
   231  0072                     ??_WriteCommandToLCD:	; 0 bytes @ 0x2
   232                           	global	___wmul@multiplicand
   233  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   234  0072                     	ds	1
   235                           	global	??___ftneg
   236  0073                     ??___ftneg:	; 0 bytes @ 0x3
   237                           	global	___ftpack@exp
   238  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   239  0073                     	ds	1
   240                           	global	??___wmul
   241  0074                     ??___wmul:	; 0 bytes @ 0x4
   242                           	global	GetADCValue@Channel
   243  0074                     GetADCValue@Channel:	; 1 bytes @ 0x4
   244                           	global	WriteCommandToLCD@Command
   245  0074                     WriteCommandToLCD@Command:	; 1 bytes @ 0x4
   246                           	global	WriteDataToLCD@LCDChar
   247  0074                     WriteDataToLCD@LCDChar:	; 1 bytes @ 0x4
   248                           	global	___ftpack@sign
   249  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   250                           	global	___wmul@product
   251  0074                     ___wmul@product:	; 2 bytes @ 0x4
   252  0074                     	ds	1
   253                           	global	??_InitLCD
   254  0075                     ??_InitLCD:	; 0 bytes @ 0x5
   255                           	global	??_ClearLCDScreen
   256  0075                     ??_ClearLCDScreen:	; 0 bytes @ 0x5
   257                           	global	??___ftpack
   258  0075                     ??___ftpack:	; 0 bytes @ 0x5
   259  0075                     	ds	1
   260                           	global	?___lwdiv
   261  0076                     ?___lwdiv:	; 2 bytes @ 0x6
   262                           	global	___lwdiv@divisor
   263  0076                     ___lwdiv@divisor:	; 2 bytes @ 0x6
   264  0076                     	ds	2
   265                           	global	?___fttol
   266  0078                     ?___fttol:	; 4 bytes @ 0x8
   267                           	global	___lwdiv@dividend
   268  0078                     ___lwdiv@dividend:	; 2 bytes @ 0x8
   269                           	global	___fttol@f1
   270  0078                     ___fttol@f1:	; 3 bytes @ 0x8
   271  0078                     	ds	2
   272                           	global	??___lwdiv
   273  007A                     ??___lwdiv:	; 0 bytes @ 0xA
   274  007A                     	ds	1
   275                           	global	___lwdiv@quotient
   276  007B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
   277  007B                     	ds	1
   278                           	global	??___lwtoft
   279  007C                     ??___lwtoft:	; 0 bytes @ 0xC
   280  007C                     	ds	1
   281                           	global	??_map
   282  007D                     ??_map:	; 0 bytes @ 0xD
   283                           	global	___lwdiv@counter
   284  007D                     ___lwdiv@counter:	; 1 bytes @ 0xD
   285  007D                     	ds	1
   286                           psect	cstackBANK0,class=BANK0,space=1
   287                           global __pcstackBANK0
   288  0020                     __pcstackBANK0:
   289                           	global	??___fttol
   290  0020                     ??___fttol:	; 0 bytes @ 0x0
   291  0020                     	ds	4
   292                           	global	___fttol@sign1
   293  0024                     ___fttol@sign1:	; 1 bytes @ 0x4
   294  0024                     	ds	1
   295                           	global	___fttol@lval
   296  0025                     ___fttol@lval:	; 4 bytes @ 0x5
   297  0025                     	ds	4
   298                           	global	___fttol@exp1
   299  0029                     ___fttol@exp1:	; 1 bytes @ 0x9
   300  0029                     	ds	1
   301                           	global	?___ftadd
   302  002A                     ?___ftadd:	; 3 bytes @ 0xA
   303                           	global	?___lwtoft
   304  002A                     ?___lwtoft:	; 3 bytes @ 0xA
   305                           	global	___lwtoft@c
   306  002A                     ___lwtoft@c:	; 2 bytes @ 0xA
   307                           	global	___ftadd@f1
   308  002A                     ___ftadd@f1:	; 3 bytes @ 0xA
   309  002A                     	ds	3
   310                           	global	___ftadd@f2
   311  002D                     ___ftadd@f2:	; 3 bytes @ 0xD
   312  002D                     	ds	3
   313                           	global	??___ftadd
   314  0030                     ??___ftadd:	; 0 bytes @ 0x10
   315  0030                     	ds	4
   316                           	global	___ftadd@sign
   317  0034                     ___ftadd@sign:	; 1 bytes @ 0x14
   318  0034                     	ds	1
   319                           	global	___ftadd@exp2
   320  0035                     ___ftadd@exp2:	; 1 bytes @ 0x15
   321  0035                     	ds	1
   322                           	global	___ftadd@exp1
   323  0036                     ___ftadd@exp1:	; 1 bytes @ 0x16
   324  0036                     	ds	1
   325                           	global	?___ftdiv
   326  0037                     ?___ftdiv:	; 3 bytes @ 0x17
   327                           	global	___ftdiv@f2
   328  0037                     ___ftdiv@f2:	; 3 bytes @ 0x17
   329  0037                     	ds	3
   330                           	global	___ftdiv@f1
   331  003A                     ___ftdiv@f1:	; 3 bytes @ 0x1A
   332  003A                     	ds	3
   333                           	global	??___ftdiv
   334  003D                     ??___ftdiv:	; 0 bytes @ 0x1D
   335  003D                     	ds	4
   336                           	global	___ftdiv@cntr
   337  0041                     ___ftdiv@cntr:	; 1 bytes @ 0x21
   338  0041                     	ds	1
   339                           	global	___ftdiv@f3
   340  0042                     ___ftdiv@f3:	; 3 bytes @ 0x22
   341  0042                     	ds	3
   342                           	global	___ftdiv@exp
   343  0045                     ___ftdiv@exp:	; 1 bytes @ 0x25
   344  0045                     	ds	1
   345                           	global	___ftdiv@sign
   346  0046                     ___ftdiv@sign:	; 1 bytes @ 0x26
   347  0046                     	ds	1
   348                           	global	?___ftmul
   349  0047                     ?___ftmul:	; 3 bytes @ 0x27
   350                           	global	___ftmul@f1
   351  0047                     ___ftmul@f1:	; 3 bytes @ 0x27
   352  0047                     	ds	3
   353                           	global	___ftmul@f2
   354  004A                     ___ftmul@f2:	; 3 bytes @ 0x2A
   355  004A                     	ds	3
   356                           	global	??___ftmul
   357  004D                     ??___ftmul:	; 0 bytes @ 0x2D
   358  004D                     	ds	4
   359                           	global	___ftmul@exp
   360  0051                     ___ftmul@exp:	; 1 bytes @ 0x31
   361  0051                     	ds	1
   362                           	global	___ftmul@f3_as_product
   363  0052                     ___ftmul@f3_as_product:	; 3 bytes @ 0x32
   364  0052                     	ds	3
   365                           	global	___ftmul@cntr
   366  0055                     ___ftmul@cntr:	; 1 bytes @ 0x35
   367  0055                     	ds	1
   368                           	global	___ftmul@sign
   369  0056                     ___ftmul@sign:	; 1 bytes @ 0x36
   370  0056                     	ds	1
   371                           	global	?_map
   372  0057                     ?_map:	; 3 bytes @ 0x37
   373                           	global	map@value
   374  0057                     map@value:	; 3 bytes @ 0x37
   375  0057                     	ds	3
   376                           	global	map@x_min
   377  005A                     map@x_min:	; 3 bytes @ 0x3A
   378  005A                     	ds	3
   379                           	global	map@x_max
   380  005D                     map@x_max:	; 3 bytes @ 0x3D
   381  005D                     	ds	3
   382                           	global	map@y_min
   383  0060                     map@y_min:	; 3 bytes @ 0x40
   384  0060                     	ds	3
   385                           	global	map@y_max
   386  0063                     map@y_max:	; 3 bytes @ 0x43
   387  0063                     	ds	3
   388                           	global	_map$3459
   389  0066                     _map$3459:	; 3 bytes @ 0x46
   390  0066                     	ds	3
   391 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
   392 ;;Auto spaces:   Size  Autos    Used
   393 ;; COMMON          14     14      14
   394 ;; BANK0           80     73      73
   395 ;; BANK1           80     38      38
   396 ;; BANK3           96      0       0
   397 ;; BANK2           96      0       0
   398                           
   399 ;;
   400 ;; Pointer list with targets:
   401                           
   402 ;; ?___ftpack	float  size(1) Largest target is 0
   403 ;;
   404 ;; ?_GetADCValue	unsigned int  size(1) Largest target is 0
   405 ;;
   406 ;; ?___ftdiv	float  size(1) Largest target is 0
   407 ;;
   408 ;; ?___ftneg	float  size(1) Largest target is 0
   409 ;;
   410 ;; ?___ftmul	float  size(1) Largest target is 0
   411 ;;
   412 ;; ?___ftadd	float  size(1) Largest target is 0
   413 ;;
   414 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   415 ;;
   416 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   417 ;;
   418 ;; ?___fttol	long  size(1) Largest target is 0
   419 ;;
   420 ;; ?___lwtoft	float  size(1) Largest target is 0
   421 ;;
   422 ;; ?_map	float  size(1) Largest target is 0
   423 ;;
   424                           
   425                           
   426 ;;
   427 ;; Critical Paths under _main in COMMON
   428 ;;
   429 ;;   _main->___lwdiv
   430 ;;   _ClearLCDScreen->_WriteCommandToLCD
   431 ;;   _InitLCD->_WriteCommandToLCD
   432 ;;   _WriteCommandToLCD->_ToggleEpinOfLCD
   433 ;;   _WriteDataToLCD->_ToggleEpinOfLCD
   434 ;;   _map->___lwtoft
   435 ;;   ___lwtoft->___fttol
   436 ;;   ___ftmul->___fttol
   437 ;;   ___ftdiv->___fttol
   438 ;;   ___ftadd->___fttol
   439 ;;   ___fttol->___ftpack
   440 ;;   ___lwdiv->___wmul
   441 ;;
   442 ;; Critical Paths under _main in BANK0
   443 ;;
   444 ;;   _main->_map
   445 ;;   _map->___ftmul
   446 ;;   ___lwtoft->___fttol
   447 ;;   ___ftmul->___ftdiv
   448 ;;   ___ftdiv->___ftadd
   449 ;;   ___ftadd->___fttol
   450 ;;
   451 ;; Critical Paths under _main in BANK1
   452 ;;
   453 ;;   None.
   454 ;;
   455 ;; Critical Paths under _main in BANK3
   456 ;;
   457 ;;   None.
   458 ;;
   459 ;; Critical Paths under _main in BANK2
   460 ;;
   461 ;;   None.
   462                           
   463 ;;
   464 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   465 ;;
   466                           
   467 ;;
   468 ;;Call Graph Tables:
   469 ;;
   470 ;; ---------------------------------------------------------------------------------
   471 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   472 ;; ---------------------------------------------------------------------------------
   473 ;; (0) _main                                                38    38      0    3876
   474 ;;                                              0 BANK1     38    38      0
   475 ;;                            _InitADC
   476 ;;                            _InitLCD
   477 ;;                        _GetADCValue
   478 ;;                           ___lwtoft
   479 ;;                                _map
   480 ;;                            ___fttol
   481 ;;                            ___lwdiv
   482 ;;                             ___wmul
   483 ;;                     _ClearLCDScreen
   484 ;;                     _WriteDataToLCD
   485 ;; ---------------------------------------------------------------------------------
   486 ;; (1) _ClearLCDScreen                                       2     2      0      44
   487 ;;                                              5 COMMON     2     2      0
   488 ;;                  _WriteCommandToLCD
   489 ;; ---------------------------------------------------------------------------------
   490 ;; (1) _InitLCD                                              3     3      0      44
   491 ;;                                              5 COMMON     3     3      0
   492 ;;                    _ToggleEpinOfLCD
   493 ;;                  _WriteCommandToLCD
   494 ;; ---------------------------------------------------------------------------------
   495 ;; (2) _WriteCommandToLCD                                    3     3      0      44
   496 ;;                                              2 COMMON     3     3      0
   497 ;;                    _ToggleEpinOfLCD
   498 ;; ---------------------------------------------------------------------------------
   499 ;; (1) _WriteDataToLCD                                       3     3      0      44
   500 ;;                                              2 COMMON     3     3      0
   501 ;;                    _ToggleEpinOfLCD
   502 ;; ---------------------------------------------------------------------------------
   503 ;; (1) _map                                                 18     3     15    2295
   504 ;;                                             55 BANK0     18     3     15
   505 ;;                            ___ftneg
   506 ;;                            ___ftadd
   507 ;;                            ___ftdiv
   508 ;;                            ___ftmul
   509 ;;                           ___lwtoft (ARG)
   510 ;;                            ___fttol (ARG)
   511 ;; ---------------------------------------------------------------------------------
   512 ;; (1) ___lwtoft                                             4     1      3     231
   513 ;;                                             12 COMMON     1     1      0
   514 ;;                                             10 BANK0      3     0      3
   515 ;;                           ___ftpack
   516 ;;                            ___fttol (ARG)
   517 ;; ---------------------------------------------------------------------------------
   518 ;; (2) ___ftmul                                             16    10      6     535
   519 ;;                                             39 BANK0     16    10      6
   520 ;;                           ___ftpack
   521 ;;                            ___fttol (ARG)
   522 ;;                            ___ftdiv (ARG)
   523 ;;                            ___ftadd (ARG)
   524 ;;                            ___ftneg (ARG)
   525 ;; ---------------------------------------------------------------------------------
   526 ;; (2) ___ftdiv                                             16    10      6     489
   527 ;;                                             23 BANK0     16    10      6
   528 ;;                           ___ftpack
   529 ;;                            ___fttol (ARG)
   530 ;;                            ___ftadd (ARG)
   531 ;;                            ___ftneg (ARG)
   532 ;; ---------------------------------------------------------------------------------
   533 ;; (2) ___ftadd                                             13     7      6    1049
   534 ;;                                             10 BANK0     13     7      6
   535 ;;                           ___ftpack
   536 ;;                            ___fttol (ARG)
   537 ;;                            ___ftneg (ARG)
   538 ;; ---------------------------------------------------------------------------------
   539 ;; (2) _ToggleEpinOfLCD                                      2     2      0       0
   540 ;;                                              0 COMMON     2     2      0
   541 ;; ---------------------------------------------------------------------------------
   542 ;; (1) _GetADCValue                                          5     3      2      22
   543 ;;                                              0 COMMON     5     3      2
   544 ;; ---------------------------------------------------------------------------------
   545 ;; (2) ___ftneg                                              3     0      3      45
   546 ;;                                              0 COMMON     3     0      3
   547 ;; ---------------------------------------------------------------------------------
   548 ;; (1) ___fttol                                             14    10      4     252
   549 ;;                                              8 COMMON     4     0      4
   550 ;;                                              0 BANK0     10    10      0
   551 ;;                            ___ftneg (ARG)
   552 ;;                           ___ftpack (ARG)
   553 ;; ---------------------------------------------------------------------------------
   554 ;; (3) ___ftpack                                             8     3      5     209
   555 ;;                                              0 COMMON     8     3      5
   556 ;; ---------------------------------------------------------------------------------
   557 ;; (1) ___lwdiv                                              8     4      4     162
   558 ;;                                              6 COMMON     8     4      4
   559 ;;                             ___wmul (ARG)
   560 ;; ---------------------------------------------------------------------------------
   561 ;; (1) ___wmul                                               6     2      4      92
   562 ;;                                              0 COMMON     6     2      4
   563 ;; ---------------------------------------------------------------------------------
   564 ;; (1) _InitADC                                              0     0      0       0
   565 ;; ---------------------------------------------------------------------------------
   566 ;; Estimated maximum stack depth 3
   567 ;; ---------------------------------------------------------------------------------
   568                           
   569 ;; Call Graph Graphs:
   570                           
   571 ;; _main (ROOT)
   572 ;;   _InitADC
   573 ;;   _InitLCD
   574 ;;     _ToggleEpinOfLCD
   575 ;;     _WriteCommandToLCD
   576 ;;       _ToggleEpinOfLCD
   577 ;;   _GetADCValue
   578 ;;   ___lwtoft
   579 ;;     ___ftpack
   580 ;;     ___fttol (ARG)
   581 ;;       ___ftneg (ARG)
   582 ;;       ___ftpack (ARG)
   583 ;;   _map
   584 ;;     ___ftneg
   585 ;;     ___ftadd
   586 ;;       ___ftpack
   587 ;;       ___fttol (ARG)
   588 ;;         ___ftneg (ARG)
   589 ;;         ___ftpack (ARG)
   590 ;;       ___ftneg (ARG)
   591 ;;     ___ftdiv
   592 ;;       ___ftpack
   593 ;;       ___fttol (ARG)
   594 ;;         ___ftneg (ARG)
   595 ;;         ___ftpack (ARG)
   596 ;;       ___ftadd (ARG)
   597 ;;         ___ftpack
   598 ;;         ___fttol (ARG)
   599 ;;           ___ftneg (ARG)
   600 ;;           ___ftpack (ARG)
   601 ;;         ___ftneg (ARG)
   602 ;;       ___ftneg (ARG)
   603 ;;     ___ftmul
   604 ;;       ___ftpack
   605 ;;       ___fttol (ARG)
   606 ;;         ___ftneg (ARG)
   607 ;;         ___ftpack (ARG)
   608 ;;       ___ftdiv (ARG)
   609 ;;         ___ftpack
   610 ;;         ___fttol (ARG)
   611 ;;           ___ftneg (ARG)
   612 ;;           ___ftpack (ARG)
   613 ;;         ___ftadd (ARG)
   614 ;;           ___ftpack
   615 ;;           ___fttol (ARG)
   616 ;;             ___ftneg (ARG)
   617 ;;             ___ftpack (ARG)
   618 ;;           ___ftneg (ARG)
   619 ;;         ___ftneg (ARG)
   620 ;;       ___ftadd (ARG)
   621 ;;         ___ftpack
   622 ;;         ___fttol (ARG)
   623 ;;           ___ftneg (ARG)
   624 ;;           ___ftpack (ARG)
   625 ;;         ___ftneg (ARG)
   626 ;;       ___ftneg (ARG)
   627 ;;     ___lwtoft (ARG)
   628 ;;       ___ftpack
   629 ;;       ___fttol (ARG)
   630 ;;         ___ftneg (ARG)
   631 ;;         ___ftpack (ARG)
   632 ;;     ___fttol (ARG)
   633 ;;       ___ftneg (ARG)
   634 ;;       ___ftpack (ARG)
   635 ;;   ___fttol
   636 ;;     ___ftneg (ARG)
   637 ;;     ___ftpack (ARG)
   638 ;;   ___lwdiv
   639 ;;     ___wmul (ARG)
   640 ;;   ___wmul
   641 ;;   _ClearLCDScreen
   642 ;;     _WriteCommandToLCD
   643 ;;       _ToggleEpinOfLCD
   644 ;;   _WriteDataToLCD
   645 ;;     _ToggleEpinOfLCD
   646 ;;
   647                           
   648 ;; Address spaces:
   649                           
   650 ;;Name               Size   Autos  Total    Cost      Usage
   651 ;;BITCOMMON            E      0       0       0        0.0%
   652 ;;EEDATA             100      0       0       0        0.0%
   653 ;;NULL                 0      0       0       0        0.0%
   654 ;;CODE                 0      0       0       0        0.0%
   655 ;;COMMON               E      E       E       1      100.0%
   656 ;;BITSFR0              0      0       0       1        0.0%
   657 ;;SFR0                 0      0       0       1        0.0%
   658 ;;BITSFR1              0      0       0       2        0.0%
   659 ;;SFR1                 0      0       0       2        0.0%
   660 ;;STACK                0      0       3       2        0.0%
   661 ;;ABS                  0      0       0       3        0.0%
   662 ;;BITBANK0            50      0       0       4        0.0%
   663 ;;BITSFR3              0      0       0       4        0.0%
   664 ;;SFR3                 0      0       0       4        0.0%
   665 ;;BANK0               50     49      49       5       91.3%
   666 ;;BITSFR2              0      0       0       5        0.0%
   667 ;;SFR2                 0      0       0       5        0.0%
   668 ;;BITBANK1            50      0       0       6        0.0%
   669 ;;BANK1               50     26      26       7       47.5%
   670 ;;BITBANK3            60      0       0       8        0.0%
   671 ;;BANK3               60      0       0       9        0.0%
   672 ;;BITBANK2            60      0       0      10        0.0%
   673 ;;BANK2               60      0       0      11        0.0%
   674 ;;DATA                 0      0       0      12        0.0%
   675                           
   676                           	global	_main
   677                           psect	maintext,global,class=CODE,delta=2
   678                           global __pmaintext
   679  039C                     __pmaintext:
   680                           
   681 ;; *************** function _main *****************
   682 ;; Defined at:
   683 ;;		line 17 in file "C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\Main.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  ADC_value       2   36[BANK1 ] unsigned int 
   688 ;;  digit1          2   34[BANK1 ] unsigned int 
   689 ;;  digit2          2   32[BANK1 ] unsigned int 
   690 ;;  ADC_value8      2   30[BANK1 ] unsigned int 
   691 ;;  ADC_value7      2   28[BANK1 ] unsigned int 
   692 ;;  ADC_value6      2   26[BANK1 ] unsigned int 
   693 ;;  ADC_value5      2   24[BANK1 ] unsigned int 
   694 ;;  ADC_value4      2   22[BANK1 ] unsigned int 
   695 ;;  ADC_value3      2   20[BANK1 ] unsigned int 
   696 ;;  ADC_value2      2   18[BANK1 ] unsigned int 
   697 ;;  ADC_value1      2   16[BANK1 ] unsigned int 
   698 ;;  digit3          2   14[BANK1 ] unsigned int 
   699 ;;  digit4          2   12[BANK1 ] unsigned int 
   700 ;; Return value:  Size  Location     Type
   701 ;;		None               void
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 17F/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   709 ;;      Params:         0       0       0       0       0
   710 ;;      Locals:         0       0      26       0       0
   711 ;;      Temps:          0       0      12       0       0
   712 ;;      Totals:         0       0      38       0       0
   713 ;;Total ram usage:       38 bytes
   714 ;; Hardware stack levels required when called:    3
   715 ;; This function calls:
   716 ;;		_InitADC
   717 ;;		_InitLCD
   718 ;;		_GetADCValue
   719 ;;		___lwtoft
   720 ;;		_map
   721 ;;		___fttol
   722 ;;		___lwdiv
   723 ;;		___wmul
   724 ;;		_ClearLCDScreen
   725 ;;		_WriteDataToLCD
   726 ;; This function is called by:
   727 ;;		Startup code after reset
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           psect	maintext
   731                           	file	"C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\Main.c"
   732                           	line	17
   733                           	global	__size_of_main
   734  0464                     	__size_of_main	equ	__end_of_main-_main
   735                           	
   736  039C                     _main:	
   737                           	opt	stack 5
   738                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   739                           	line	18
   740                           	
   741  039C                     l5018:	
   742                           ;Main.c: 18: unsigned int ADC_value = 0;
   743  039C  1683               	bsf	status, 5	;RP0=1, select bank1
   744  039D  1303               	bcf	status, 6	;RP1=0, select bank1
   745  039E  01C4               	clrf	(main@ADC_value)^080h
   746  039F  01C5               	clrf	(main@ADC_value+1)^080h
   747                           	line	19
   748                           ;Main.c: 19: unsigned int ADC_value1 = 0;
   749  03A0  01B0               	clrf	(main@ADC_value1)^080h
   750  03A1  01B1               	clrf	(main@ADC_value1+1)^080h
   751                           	line	20
   752                           ;Main.c: 20: unsigned int ADC_value2 = 0;
   753  03A2  01B2               	clrf	(main@ADC_value2)^080h
   754  03A3  01B3               	clrf	(main@ADC_value2+1)^080h
   755                           	line	21
   756                           ;Main.c: 21: unsigned int ADC_value3 = 0;
   757  03A4  01B4               	clrf	(main@ADC_value3)^080h
   758  03A5  01B5               	clrf	(main@ADC_value3+1)^080h
   759                           	line	22
   760                           ;Main.c: 22: unsigned int ADC_value4 = 0;
   761  03A6  01B6               	clrf	(main@ADC_value4)^080h
   762  03A7  01B7               	clrf	(main@ADC_value4+1)^080h
   763                           	line	23
   764                           ;Main.c: 23: unsigned int ADC_value5 = 0;
   765  03A8  01B8               	clrf	(main@ADC_value5)^080h
   766  03A9  01B9               	clrf	(main@ADC_value5+1)^080h
   767                           	line	24
   768                           ;Main.c: 24: unsigned int ADC_value6 = 0;
   769  03AA  01BA               	clrf	(main@ADC_value6)^080h
   770  03AB  01BB               	clrf	(main@ADC_value6+1)^080h
   771                           	line	25
   772                           ;Main.c: 25: unsigned int ADC_value7 = 0;
   773  03AC  01BC               	clrf	(main@ADC_value7)^080h
   774  03AD  01BD               	clrf	(main@ADC_value7+1)^080h
   775                           	line	26
   776                           ;Main.c: 26: unsigned int ADC_value8 = 0;
   777  03AE  01BE               	clrf	(main@ADC_value8)^080h
   778  03AF  01BF               	clrf	(main@ADC_value8+1)^080h
   779                           	line	28
   780                           	
   781  03B0                     l5020:	
   782                           ;Main.c: 27: unsigned int digit1, digit2, digit3, digit4;
   783                           ;Main.c: 28: InitADC();
   784  03B0  120A  118A  2003   	fcall	_InitADC
              120A  118A         
   785                           	line	29
   786                           	
   787  03B5                     l5022:	
   788                           ;Main.c: 29: InitLCD();
   789  03B5  120A  118A  2010   	fcall	_InitLCD
              120A  118A         
   790  03BA  2BBB               	goto	l5024
   791                           	line	31
   792                           ;Main.c: 31: while(1)
   793                           	
   794  03BB                     l655:	
   795                           	line	34
   796                           	
   797  03BB                     l5024:	
   798                           ;Main.c: 32: {
   799                           ;Main.c: 34: ADC_value1 = GetADCValue(1);
   800  03BB  3001               	movlw	(01h)
   801  03BC  120A  158A  25B0   	fcall	_GetADCValue
              120A  118A         
   802  03C1  0871               	movf	(1+(?_GetADCValue)),w
   803  03C2  1683               	bsf	status, 5	;RP0=1, select bank1
   804  03C3  1303               	bcf	status, 6	;RP1=0, select bank1
   805  03C4  01B1               	clrf	(main@ADC_value1+1)^080h
   806  03C5  07B1               	addwf	(main@ADC_value1+1)^080h
   807  03C6  0870               	movf	(0+(?_GetADCValue)),w
   808  03C7  01B0               	clrf	(main@ADC_value1)^080h
   809  03C8  07B0               	addwf	(main@ADC_value1)^080h
   810                           
   811                           	line	35
   812                           	
   813  03C9                     l5026:	
   814                           ;Main.c: 35: ADC_value1=map(ADC_value1, 0, 1023, 0, 125);
   815  03C9  3000               	movlw	0x0
   816  03CA  1283               	bcf	status, 5	;RP0=0, select bank0
   817  03CB  1303               	bcf	status, 6	;RP1=0, select bank0
   818  03CC  00E3               	movwf	0+(?_map)+0Ch
   819  03CD  30FA               	movlw	0xfa
   820  03CE  00E4               	movwf	1+(?_map)+0Ch
   821  03CF  3042               	movlw	0x42
   822  03D0  00E5               	movwf	2+(?_map)+0Ch
   823  03D1  3000               	movlw	0x0
   824  03D2  00E0               	movwf	0+(?_map)+09h
   825  03D3  3000               	movlw	0x0
   826  03D4  00E1               	movwf	1+(?_map)+09h
   827  03D5  3000               	movlw	0x0
   828  03D6  00E2               	movwf	2+(?_map)+09h
   829  03D7  30C0               	movlw	0xc0
   830  03D8  00DD               	movwf	0+(?_map)+06h
   831  03D9  307F               	movlw	0x7f
   832  03DA  00DE               	movwf	1+(?_map)+06h
   833  03DB  3044               	movlw	0x44
   834  03DC  00DF               	movwf	2+(?_map)+06h
   835  03DD  3000               	movlw	0x0
   836  03DE  00DA               	movwf	0+(?_map)+03h
   837  03DF  3000               	movlw	0x0
   838  03E0  00DB               	movwf	1+(?_map)+03h
   839  03E1  3000               	movlw	0x0
   840  03E2  00DC               	movwf	2+(?_map)+03h
   841  03E3  1683               	bsf	status, 5	;RP0=1, select bank1
   842  03E4  1303               	bcf	status, 6	;RP1=0, select bank1
   843  03E5  0831               	movf	(main@ADC_value1+1)^080h,w
   844  03E6  1283               	bcf	status, 5	;RP0=0, select bank0
   845  03E7  1303               	bcf	status, 6	;RP1=0, select bank0
   846  03E8  01AB               	clrf	(?___lwtoft+1)
   847  03E9  07AB               	addwf	(?___lwtoft+1)
   848  03EA  1683               	bsf	status, 5	;RP0=1, select bank1
   849  03EB  1303               	bcf	status, 6	;RP1=0, select bank1
   850  03EC  0830               	movf	(main@ADC_value1)^080h,w
   851  03ED  1283               	bcf	status, 5	;RP0=0, select bank0
   852  03EE  1303               	bcf	status, 6	;RP1=0, select bank0
   853  03EF  01AA               	clrf	(?___lwtoft)
   854  03F0  07AA               	addwf	(?___lwtoft)
   855                           
   856  03F1  120A  158A  2513   	fcall	___lwtoft
              120A  118A         
   857  03F6  1283               	bcf	status, 5	;RP0=0, select bank0
   858  03F7  1303               	bcf	status, 6	;RP1=0, select bank0
   859  03F8  082A               	movf	(0+(?___lwtoft)),w
   860  03F9  00D7               	movwf	(?_map)
   861  03FA  082B               	movf	(1+(?___lwtoft)),w
   862  03FB  00D8               	movwf	(?_map+1)
   863  03FC  082C               	movf	(2+(?___lwtoft)),w
   864  03FD  00D9               	movwf	(?_map+2)
   865  03FE  120A  158A  2757   	fcall	_map
              120A  118A         
   866  0403  1283               	bcf	status, 5	;RP0=0, select bank0
   867  0404  1303               	bcf	status, 6	;RP1=0, select bank0
   868  0405  0857               	movf	(0+(?_map)),w
   869  0406  00F8               	movwf	(?___fttol)
   870  0407  0858               	movf	(1+(?_map)),w
   871  0408  00F9               	movwf	(?___fttol+1)
   872  0409  0859               	movf	(2+(?_map)),w
   873  040A  00FA               	movwf	(?___fttol+2)
   874  040B  120A  158A  26B1   	fcall	___fttol
              120A  118A         
   875  0410  0879               	movf	1+(((0+(?___fttol)))),w
   876  0411  1683               	bsf	status, 5	;RP0=1, select bank1
   877  0412  1303               	bcf	status, 6	;RP1=0, select bank1
   878  0413  01B1               	clrf	(main@ADC_value1+1)^080h
   879  0414  07B1               	addwf	(main@ADC_value1+1)^080h
   880  0415  0878               	movf	0+(((0+(?___fttol)))),w
   881  0416  01B0               	clrf	(main@ADC_value1)^080h
   882  0417  07B0               	addwf	(main@ADC_value1)^080h
   883                           
   884                           	line	36
   885                           	
   886  0418                     l5028:	
   887                           ;Main.c: 36: ADC_value2 = GetADCValue(2);
   888  0418  3002               	movlw	(02h)
   889  0419  120A  158A  25B0   	fcall	_GetADCValue
              120A  118A         
   890  041E  0871               	movf	(1+(?_GetADCValue)),w
   891  041F  1683               	bsf	status, 5	;RP0=1, select bank1
   892  0420  1303               	bcf	status, 6	;RP1=0, select bank1
   893  0421  01B3               	clrf	(main@ADC_value2+1)^080h
   894  0422  07B3               	addwf	(main@ADC_value2+1)^080h
   895  0423  0870               	movf	(0+(?_GetADCValue)),w
   896  0424  01B2               	clrf	(main@ADC_value2)^080h
   897  0425  07B2               	addwf	(main@ADC_value2)^080h
   898                           
   899                           	line	37
   900                           	
   901  0426                     l5030:	
   902                           ;Main.c: 37: ADC_value2=map(ADC_value2, 0, 1023, 0, 125);
   903  0426  3000               	movlw	0x0
   904  0427  1283               	bcf	status, 5	;RP0=0, select bank0
   905  0428  1303               	bcf	status, 6	;RP1=0, select bank0
   906  0429  00E3               	movwf	0+(?_map)+0Ch
   907  042A  30FA               	movlw	0xfa
   908  042B  00E4               	movwf	1+(?_map)+0Ch
   909  042C  3042               	movlw	0x42
   910  042D  00E5               	movwf	2+(?_map)+0Ch
   911  042E  3000               	movlw	0x0
   912  042F  00E0               	movwf	0+(?_map)+09h
   913  0430  3000               	movlw	0x0
   914  0431  00E1               	movwf	1+(?_map)+09h
   915  0432  3000               	movlw	0x0
   916  0433  00E2               	movwf	2+(?_map)+09h
   917  0434  30C0               	movlw	0xc0
   918  0435  00DD               	movwf	0+(?_map)+06h
   919  0436  307F               	movlw	0x7f
   920  0437  00DE               	movwf	1+(?_map)+06h
   921  0438  3044               	movlw	0x44
   922  0439  00DF               	movwf	2+(?_map)+06h
   923  043A  3000               	movlw	0x0
   924  043B  00DA               	movwf	0+(?_map)+03h
   925  043C  3000               	movlw	0x0
   926  043D  00DB               	movwf	1+(?_map)+03h
   927  043E  3000               	movlw	0x0
   928  043F  00DC               	movwf	2+(?_map)+03h
   929  0440  1683               	bsf	status, 5	;RP0=1, select bank1
   930  0441  1303               	bcf	status, 6	;RP1=0, select bank1
   931  0442  0833               	movf	(main@ADC_value2+1)^080h,w
   932  0443  1283               	bcf	status, 5	;RP0=0, select bank0
   933  0444  1303               	bcf	status, 6	;RP1=0, select bank0
   934  0445  01AB               	clrf	(?___lwtoft+1)
   935  0446  07AB               	addwf	(?___lwtoft+1)
   936  0447  1683               	bsf	status, 5	;RP0=1, select bank1
   937  0448  1303               	bcf	status, 6	;RP1=0, select bank1
   938  0449  0832               	movf	(main@ADC_value2)^080h,w
   939  044A  1283               	bcf	status, 5	;RP0=0, select bank0
   940  044B  1303               	bcf	status, 6	;RP1=0, select bank0
   941  044C  01AA               	clrf	(?___lwtoft)
   942  044D  07AA               	addwf	(?___lwtoft)
   943                           
   944  044E  120A  158A  2513   	fcall	___lwtoft
              120A  118A         
   945  0453  1283               	bcf	status, 5	;RP0=0, select bank0
   946  0454  1303               	bcf	status, 6	;RP1=0, select bank0
   947  0455  082A               	movf	(0+(?___lwtoft)),w
   948  0456  00D7               	movwf	(?_map)
   949  0457  082B               	movf	(1+(?___lwtoft)),w
   950  0458  00D8               	movwf	(?_map+1)
   951  0459  082C               	movf	(2+(?___lwtoft)),w
   952  045A  00D9               	movwf	(?_map+2)
   953  045B  120A  158A  2757   	fcall	_map
              120A  118A         
   954  0460  1283               	bcf	status, 5	;RP0=0, select bank0
   955  0461  1303               	bcf	status, 6	;RP1=0, select bank0
   956  0462  0857               	movf	(0+(?_map)),w
   957  0463  00F8               	movwf	(?___fttol)
   958  0464  0858               	movf	(1+(?_map)),w
   959  0465  00F9               	movwf	(?___fttol+1)
   960  0466  0859               	movf	(2+(?_map)),w
   961  0467  00FA               	movwf	(?___fttol+2)
   962  0468  120A  158A  26B1   	fcall	___fttol
              120A  118A         
   963  046D  0879               	movf	1+(((0+(?___fttol)))),w
   964  046E  1683               	bsf	status, 5	;RP0=1, select bank1
   965  046F  1303               	bcf	status, 6	;RP1=0, select bank1
   966  0470  01B3               	clrf	(main@ADC_value2+1)^080h
   967  0471  07B3               	addwf	(main@ADC_value2+1)^080h
   968  0472  0878               	movf	0+(((0+(?___fttol)))),w
   969  0473  01B2               	clrf	(main@ADC_value2)^080h
   970  0474  07B2               	addwf	(main@ADC_value2)^080h
   971                           
   972                           	line	38
   973                           	
   974  0475                     l5032:	
   975                           ;Main.c: 38: ADC_value3 = GetADCValue(3);
   976  0475  3003               	movlw	(03h)
   977  0476  120A  158A  25B0   	fcall	_GetADCValue
              120A  118A         
   978  047B  0871               	movf	(1+(?_GetADCValue)),w
   979  047C  1683               	bsf	status, 5	;RP0=1, select bank1
   980  047D  1303               	bcf	status, 6	;RP1=0, select bank1
   981  047E  01B5               	clrf	(main@ADC_value3+1)^080h
   982  047F  07B5               	addwf	(main@ADC_value3+1)^080h
   983  0480  0870               	movf	(0+(?_GetADCValue)),w
   984  0481  01B4               	clrf	(main@ADC_value3)^080h
   985  0482  07B4               	addwf	(main@ADC_value3)^080h
   986                           
   987                           	line	39
   988                           	
   989  0483                     l5034:	
   990                           ;Main.c: 39: ADC_value3=map(ADC_value3, 0, 1023, 0, 125);
   991  0483  3000               	movlw	0x0
   992  0484  1283               	bcf	status, 5	;RP0=0, select bank0
   993  0485  1303               	bcf	status, 6	;RP1=0, select bank0
   994  0486  00E3               	movwf	0+(?_map)+0Ch
   995  0487  30FA               	movlw	0xfa
   996  0488  00E4               	movwf	1+(?_map)+0Ch
   997  0489  3042               	movlw	0x42
   998  048A  00E5               	movwf	2+(?_map)+0Ch
   999  048B  3000               	movlw	0x0
  1000  048C  00E0               	movwf	0+(?_map)+09h
  1001  048D  3000               	movlw	0x0
  1002  048E  00E1               	movwf	1+(?_map)+09h
  1003  048F  3000               	movlw	0x0
  1004  0490  00E2               	movwf	2+(?_map)+09h
  1005  0491  30C0               	movlw	0xc0
  1006  0492  00DD               	movwf	0+(?_map)+06h
  1007  0493  307F               	movlw	0x7f
  1008  0494  00DE               	movwf	1+(?_map)+06h
  1009  0495  3044               	movlw	0x44
  1010  0496  00DF               	movwf	2+(?_map)+06h
  1011  0497  3000               	movlw	0x0
  1012  0498  00DA               	movwf	0+(?_map)+03h
  1013  0499  3000               	movlw	0x0
  1014  049A  00DB               	movwf	1+(?_map)+03h
  1015  049B  3000               	movlw	0x0
  1016  049C  00DC               	movwf	2+(?_map)+03h
  1017  049D  1683               	bsf	status, 5	;RP0=1, select bank1
  1018  049E  1303               	bcf	status, 6	;RP1=0, select bank1
  1019  049F  0835               	movf	(main@ADC_value3+1)^080h,w
  1020  04A0  1283               	bcf	status, 5	;RP0=0, select bank0
  1021  04A1  1303               	bcf	status, 6	;RP1=0, select bank0
  1022  04A2  01AB               	clrf	(?___lwtoft+1)
  1023  04A3  07AB               	addwf	(?___lwtoft+1)
  1024  04A4  1683               	bsf	status, 5	;RP0=1, select bank1
  1025  04A5  1303               	bcf	status, 6	;RP1=0, select bank1
  1026  04A6  0834               	movf	(main@ADC_value3)^080h,w
  1027  04A7  1283               	bcf	status, 5	;RP0=0, select bank0
  1028  04A8  1303               	bcf	status, 6	;RP1=0, select bank0
  1029  04A9  01AA               	clrf	(?___lwtoft)
  1030  04AA  07AA               	addwf	(?___lwtoft)
  1031                           
  1032  04AB  120A  158A  2513   	fcall	___lwtoft
              120A  118A         
  1033  04B0  1283               	bcf	status, 5	;RP0=0, select bank0
  1034  04B1  1303               	bcf	status, 6	;RP1=0, select bank0
  1035  04B2  082A               	movf	(0+(?___lwtoft)),w
  1036  04B3  00D7               	movwf	(?_map)
  1037  04B4  082B               	movf	(1+(?___lwtoft)),w
  1038  04B5  00D8               	movwf	(?_map+1)
  1039  04B6  082C               	movf	(2+(?___lwtoft)),w
  1040  04B7  00D9               	movwf	(?_map+2)
  1041  04B8  120A  158A  2757   	fcall	_map
              120A  118A         
  1042  04BD  1283               	bcf	status, 5	;RP0=0, select bank0
  1043  04BE  1303               	bcf	status, 6	;RP1=0, select bank0
  1044  04BF  0857               	movf	(0+(?_map)),w
  1045  04C0  00F8               	movwf	(?___fttol)
  1046  04C1  0858               	movf	(1+(?_map)),w
  1047  04C2  00F9               	movwf	(?___fttol+1)
  1048  04C3  0859               	movf	(2+(?_map)),w
  1049  04C4  00FA               	movwf	(?___fttol+2)
  1050  04C5  120A  158A  26B1   	fcall	___fttol
              120A  118A         
  1051  04CA  0879               	movf	1+(((0+(?___fttol)))),w
  1052  04CB  1683               	bsf	status, 5	;RP0=1, select bank1
  1053  04CC  1303               	bcf	status, 6	;RP1=0, select bank1
  1054  04CD  01B5               	clrf	(main@ADC_value3+1)^080h
  1055  04CE  07B5               	addwf	(main@ADC_value3+1)^080h
  1056  04CF  0878               	movf	0+(((0+(?___fttol)))),w
  1057  04D0  01B4               	clrf	(main@ADC_value3)^080h
  1058  04D1  07B4               	addwf	(main@ADC_value3)^080h
  1059                           
  1060                           	line	40
  1061                           	
  1062  04D2                     l5036:	
  1063                           ;Main.c: 40: ADC_value4 = GetADCValue(4);
  1064  04D2  3004               	movlw	(04h)
  1065  04D3  120A  158A  25B0   	fcall	_GetADCValue
              120A  118A         
  1066  04D8  0871               	movf	(1+(?_GetADCValue)),w
  1067  04D9  1683               	bsf	status, 5	;RP0=1, select bank1
  1068  04DA  1303               	bcf	status, 6	;RP1=0, select bank1
  1069  04DB  01B7               	clrf	(main@ADC_value4+1)^080h
  1070  04DC  07B7               	addwf	(main@ADC_value4+1)^080h
  1071  04DD  0870               	movf	(0+(?_GetADCValue)),w
  1072  04DE  01B6               	clrf	(main@ADC_value4)^080h
  1073  04DF  07B6               	addwf	(main@ADC_value4)^080h
  1074                           
  1075                           	line	41
  1076                           	
  1077  04E0                     l5038:	
  1078                           ;Main.c: 41: ADC_value4=map(ADC_value4, 0, 1023, 0, 125);
  1079  04E0  3000               	movlw	0x0
  1080  04E1  1283               	bcf	status, 5	;RP0=0, select bank0
  1081  04E2  1303               	bcf	status, 6	;RP1=0, select bank0
  1082  04E3  00E3               	movwf	0+(?_map)+0Ch
  1083  04E4  30FA               	movlw	0xfa
  1084  04E5  00E4               	movwf	1+(?_map)+0Ch
  1085  04E6  3042               	movlw	0x42
  1086  04E7  00E5               	movwf	2+(?_map)+0Ch
  1087  04E8  3000               	movlw	0x0
  1088  04E9  00E0               	movwf	0+(?_map)+09h
  1089  04EA  3000               	movlw	0x0
  1090  04EB  00E1               	movwf	1+(?_map)+09h
  1091  04EC  3000               	movlw	0x0
  1092  04ED  00E2               	movwf	2+(?_map)+09h
  1093  04EE  30C0               	movlw	0xc0
  1094  04EF  00DD               	movwf	0+(?_map)+06h
  1095  04F0  307F               	movlw	0x7f
  1096  04F1  00DE               	movwf	1+(?_map)+06h
  1097  04F2  3044               	movlw	0x44
  1098  04F3  00DF               	movwf	2+(?_map)+06h
  1099  04F4  3000               	movlw	0x0
  1100  04F5  00DA               	movwf	0+(?_map)+03h
  1101  04F6  3000               	movlw	0x0
  1102  04F7  00DB               	movwf	1+(?_map)+03h
  1103  04F8  3000               	movlw	0x0
  1104  04F9  00DC               	movwf	2+(?_map)+03h
  1105  04FA  1683               	bsf	status, 5	;RP0=1, select bank1
  1106  04FB  1303               	bcf	status, 6	;RP1=0, select bank1
  1107  04FC  0837               	movf	(main@ADC_value4+1)^080h,w
  1108  04FD  1283               	bcf	status, 5	;RP0=0, select bank0
  1109  04FE  1303               	bcf	status, 6	;RP1=0, select bank0
  1110  04FF  01AB               	clrf	(?___lwtoft+1)
  1111  0500  07AB               	addwf	(?___lwtoft+1)
  1112  0501  1683               	bsf	status, 5	;RP0=1, select bank1
  1113  0502  1303               	bcf	status, 6	;RP1=0, select bank1
  1114  0503  0836               	movf	(main@ADC_value4)^080h,w
  1115  0504  1283               	bcf	status, 5	;RP0=0, select bank0
  1116  0505  1303               	bcf	status, 6	;RP1=0, select bank0
  1117  0506  01AA               	clrf	(?___lwtoft)
  1118  0507  07AA               	addwf	(?___lwtoft)
  1119                           
  1120  0508  120A  158A  2513   	fcall	___lwtoft
              120A  118A         
  1121  050D  1283               	bcf	status, 5	;RP0=0, select bank0
  1122  050E  1303               	bcf	status, 6	;RP1=0, select bank0
  1123  050F  082A               	movf	(0+(?___lwtoft)),w
  1124  0510  00D7               	movwf	(?_map)
  1125  0511  082B               	movf	(1+(?___lwtoft)),w
  1126  0512  00D8               	movwf	(?_map+1)
  1127  0513  082C               	movf	(2+(?___lwtoft)),w
  1128  0514  00D9               	movwf	(?_map+2)
  1129  0515  120A  158A  2757   	fcall	_map
              120A  118A         
  1130  051A  1283               	bcf	status, 5	;RP0=0, select bank0
  1131  051B  1303               	bcf	status, 6	;RP1=0, select bank0
  1132  051C  0857               	movf	(0+(?_map)),w
  1133  051D  00F8               	movwf	(?___fttol)
  1134  051E  0858               	movf	(1+(?_map)),w
  1135  051F  00F9               	movwf	(?___fttol+1)
  1136  0520  0859               	movf	(2+(?_map)),w
  1137  0521  00FA               	movwf	(?___fttol+2)
  1138  0522  120A  158A  26B1   	fcall	___fttol
              120A  118A         
  1139  0527  0879               	movf	1+(((0+(?___fttol)))),w
  1140  0528  1683               	bsf	status, 5	;RP0=1, select bank1
  1141  0529  1303               	bcf	status, 6	;RP1=0, select bank1
  1142  052A  01B7               	clrf	(main@ADC_value4+1)^080h
  1143  052B  07B7               	addwf	(main@ADC_value4+1)^080h
  1144  052C  0878               	movf	0+(((0+(?___fttol)))),w
  1145  052D  01B6               	clrf	(main@ADC_value4)^080h
  1146  052E  07B6               	addwf	(main@ADC_value4)^080h
  1147                           
  1148                           	line	42
  1149                           	
  1150  052F                     l5040:	
  1151                           ;Main.c: 42: ADC_value5 = GetADCValue(5);
  1152  052F  3005               	movlw	(05h)
  1153  0530  120A  158A  25B0   	fcall	_GetADCValue
              120A  118A         
  1154  0535  0871               	movf	(1+(?_GetADCValue)),w
  1155  0536  1683               	bsf	status, 5	;RP0=1, select bank1
  1156  0537  1303               	bcf	status, 6	;RP1=0, select bank1
  1157  0538  01B9               	clrf	(main@ADC_value5+1)^080h
  1158  0539  07B9               	addwf	(main@ADC_value5+1)^080h
  1159  053A  0870               	movf	(0+(?_GetADCValue)),w
  1160  053B  01B8               	clrf	(main@ADC_value5)^080h
  1161  053C  07B8               	addwf	(main@ADC_value5)^080h
  1162                           
  1163                           	line	43
  1164                           	
  1165  053D                     l5042:	
  1166                           ;Main.c: 43: ADC_value5=map(ADC_value5, 0, 1023, 0, 125);
  1167  053D  3000               	movlw	0x0
  1168  053E  1283               	bcf	status, 5	;RP0=0, select bank0
  1169  053F  1303               	bcf	status, 6	;RP1=0, select bank0
  1170  0540  00E3               	movwf	0+(?_map)+0Ch
  1171  0541  30FA               	movlw	0xfa
  1172  0542  00E4               	movwf	1+(?_map)+0Ch
  1173  0543  3042               	movlw	0x42
  1174  0544  00E5               	movwf	2+(?_map)+0Ch
  1175  0545  3000               	movlw	0x0
  1176  0546  00E0               	movwf	0+(?_map)+09h
  1177  0547  3000               	movlw	0x0
  1178  0548  00E1               	movwf	1+(?_map)+09h
  1179  0549  3000               	movlw	0x0
  1180  054A  00E2               	movwf	2+(?_map)+09h
  1181  054B  30C0               	movlw	0xc0
  1182  054C  00DD               	movwf	0+(?_map)+06h
  1183  054D  307F               	movlw	0x7f
  1184  054E  00DE               	movwf	1+(?_map)+06h
  1185  054F  3044               	movlw	0x44
  1186  0550  00DF               	movwf	2+(?_map)+06h
  1187  0551  3000               	movlw	0x0
  1188  0552  00DA               	movwf	0+(?_map)+03h
  1189  0553  3000               	movlw	0x0
  1190  0554  00DB               	movwf	1+(?_map)+03h
  1191  0555  3000               	movlw	0x0
  1192  0556  00DC               	movwf	2+(?_map)+03h
  1193  0557  1683               	bsf	status, 5	;RP0=1, select bank1
  1194  0558  1303               	bcf	status, 6	;RP1=0, select bank1
  1195  0559  0839               	movf	(main@ADC_value5+1)^080h,w
  1196  055A  1283               	bcf	status, 5	;RP0=0, select bank0
  1197  055B  1303               	bcf	status, 6	;RP1=0, select bank0
  1198  055C  01AB               	clrf	(?___lwtoft+1)
  1199  055D  07AB               	addwf	(?___lwtoft+1)
  1200  055E  1683               	bsf	status, 5	;RP0=1, select bank1
  1201  055F  1303               	bcf	status, 6	;RP1=0, select bank1
  1202  0560  0838               	movf	(main@ADC_value5)^080h,w
  1203  0561  1283               	bcf	status, 5	;RP0=0, select bank0
  1204  0562  1303               	bcf	status, 6	;RP1=0, select bank0
  1205  0563  01AA               	clrf	(?___lwtoft)
  1206  0564  07AA               	addwf	(?___lwtoft)
  1207                           
  1208  0565  120A  158A  2513   	fcall	___lwtoft
              120A  118A         
  1209  056A  1283               	bcf	status, 5	;RP0=0, select bank0
  1210  056B  1303               	bcf	status, 6	;RP1=0, select bank0
  1211  056C  082A               	movf	(0+(?___lwtoft)),w
  1212  056D  00D7               	movwf	(?_map)
  1213  056E  082B               	movf	(1+(?___lwtoft)),w
  1214  056F  00D8               	movwf	(?_map+1)
  1215  0570  082C               	movf	(2+(?___lwtoft)),w
  1216  0571  00D9               	movwf	(?_map+2)
  1217  0572  120A  158A  2757   	fcall	_map
              120A  118A         
  1218  0577  1283               	bcf	status, 5	;RP0=0, select bank0
  1219  0578  1303               	bcf	status, 6	;RP1=0, select bank0
  1220  0579  0857               	movf	(0+(?_map)),w
  1221  057A  00F8               	movwf	(?___fttol)
  1222  057B  0858               	movf	(1+(?_map)),w
  1223  057C  00F9               	movwf	(?___fttol+1)
  1224  057D  0859               	movf	(2+(?_map)),w
  1225  057E  00FA               	movwf	(?___fttol+2)
  1226  057F  120A  158A  26B1   	fcall	___fttol
              120A  118A         
  1227  0584  0879               	movf	1+(((0+(?___fttol)))),w
  1228  0585  1683               	bsf	status, 5	;RP0=1, select bank1
  1229  0586  1303               	bcf	status, 6	;RP1=0, select bank1
  1230  0587  01B9               	clrf	(main@ADC_value5+1)^080h
  1231  0588  07B9               	addwf	(main@ADC_value5+1)^080h
  1232  0589  0878               	movf	0+(((0+(?___fttol)))),w
  1233  058A  01B8               	clrf	(main@ADC_value5)^080h
  1234  058B  07B8               	addwf	(main@ADC_value5)^080h
  1235                           
  1236                           	line	44
  1237                           	
  1238  058C                     l5044:	
  1239                           ;Main.c: 44: ADC_value6 = GetADCValue(6);
  1240  058C  3006               	movlw	(06h)
  1241  058D  120A  158A  25B0   	fcall	_GetADCValue
              120A  118A         
  1242  0592  0871               	movf	(1+(?_GetADCValue)),w
  1243  0593  1683               	bsf	status, 5	;RP0=1, select bank1
  1244  0594  1303               	bcf	status, 6	;RP1=0, select bank1
  1245  0595  01BB               	clrf	(main@ADC_value6+1)^080h
  1246  0596  07BB               	addwf	(main@ADC_value6+1)^080h
  1247  0597  0870               	movf	(0+(?_GetADCValue)),w
  1248  0598  01BA               	clrf	(main@ADC_value6)^080h
  1249  0599  07BA               	addwf	(main@ADC_value6)^080h
  1250                           
  1251                           	line	45
  1252                           	
  1253  059A                     l5046:	
  1254                           ;Main.c: 45: ADC_value6=map(ADC_value6, 0, 1023, 0, 125);
  1255  059A  3000               	movlw	0x0
  1256  059B  1283               	bcf	status, 5	;RP0=0, select bank0
  1257  059C  1303               	bcf	status, 6	;RP1=0, select bank0
  1258  059D  00E3               	movwf	0+(?_map)+0Ch
  1259  059E  30FA               	movlw	0xfa
  1260  059F  00E4               	movwf	1+(?_map)+0Ch
  1261  05A0  3042               	movlw	0x42
  1262  05A1  00E5               	movwf	2+(?_map)+0Ch
  1263  05A2  3000               	movlw	0x0
  1264  05A3  00E0               	movwf	0+(?_map)+09h
  1265  05A4  3000               	movlw	0x0
  1266  05A5  00E1               	movwf	1+(?_map)+09h
  1267  05A6  3000               	movlw	0x0
  1268  05A7  00E2               	movwf	2+(?_map)+09h
  1269  05A8  30C0               	movlw	0xc0
  1270  05A9  00DD               	movwf	0+(?_map)+06h
  1271  05AA  307F               	movlw	0x7f
  1272  05AB  00DE               	movwf	1+(?_map)+06h
  1273  05AC  3044               	movlw	0x44
  1274  05AD  00DF               	movwf	2+(?_map)+06h
  1275  05AE  3000               	movlw	0x0
  1276  05AF  00DA               	movwf	0+(?_map)+03h
  1277  05B0  3000               	movlw	0x0
  1278  05B1  00DB               	movwf	1+(?_map)+03h
  1279  05B2  3000               	movlw	0x0
  1280  05B3  00DC               	movwf	2+(?_map)+03h
  1281  05B4  1683               	bsf	status, 5	;RP0=1, select bank1
  1282  05B5  1303               	bcf	status, 6	;RP1=0, select bank1
  1283  05B6  083B               	movf	(main@ADC_value6+1)^080h,w
  1284  05B7  1283               	bcf	status, 5	;RP0=0, select bank0
  1285  05B8  1303               	bcf	status, 6	;RP1=0, select bank0
  1286  05B9  01AB               	clrf	(?___lwtoft+1)
  1287  05BA  07AB               	addwf	(?___lwtoft+1)
  1288  05BB  1683               	bsf	status, 5	;RP0=1, select bank1
  1289  05BC  1303               	bcf	status, 6	;RP1=0, select bank1
  1290  05BD  083A               	movf	(main@ADC_value6)^080h,w
  1291  05BE  1283               	bcf	status, 5	;RP0=0, select bank0
  1292  05BF  1303               	bcf	status, 6	;RP1=0, select bank0
  1293  05C0  01AA               	clrf	(?___lwtoft)
  1294  05C1  07AA               	addwf	(?___lwtoft)
  1295                           
  1296  05C2  120A  158A  2513   	fcall	___lwtoft
              120A  118A         
  1297  05C7  1283               	bcf	status, 5	;RP0=0, select bank0
  1298  05C8  1303               	bcf	status, 6	;RP1=0, select bank0
  1299  05C9  082A               	movf	(0+(?___lwtoft)),w
  1300  05CA  00D7               	movwf	(?_map)
  1301  05CB  082B               	movf	(1+(?___lwtoft)),w
  1302  05CC  00D8               	movwf	(?_map+1)
  1303  05CD  082C               	movf	(2+(?___lwtoft)),w
  1304  05CE  00D9               	movwf	(?_map+2)
  1305  05CF  120A  158A  2757   	fcall	_map
              120A  118A         
  1306  05D4  1283               	bcf	status, 5	;RP0=0, select bank0
  1307  05D5  1303               	bcf	status, 6	;RP1=0, select bank0
  1308  05D6  0857               	movf	(0+(?_map)),w
  1309  05D7  00F8               	movwf	(?___fttol)
  1310  05D8  0858               	movf	(1+(?_map)),w
  1311  05D9  00F9               	movwf	(?___fttol+1)
  1312  05DA  0859               	movf	(2+(?_map)),w
  1313  05DB  00FA               	movwf	(?___fttol+2)
  1314  05DC  120A  158A  26B1   	fcall	___fttol
              120A  118A         
  1315  05E1  0879               	movf	1+(((0+(?___fttol)))),w
  1316  05E2  1683               	bsf	status, 5	;RP0=1, select bank1
  1317  05E3  1303               	bcf	status, 6	;RP1=0, select bank1
  1318  05E4  01BB               	clrf	(main@ADC_value6+1)^080h
  1319  05E5  07BB               	addwf	(main@ADC_value6+1)^080h
  1320  05E6  0878               	movf	0+(((0+(?___fttol)))),w
  1321  05E7  01BA               	clrf	(main@ADC_value6)^080h
  1322  05E8  07BA               	addwf	(main@ADC_value6)^080h
  1323                           
  1324                           	line	46
  1325                           	
  1326  05E9                     l5048:	
  1327                           ;Main.c: 46: ADC_value7 = GetADCValue(7);
  1328  05E9  3007               	movlw	(07h)
  1329  05EA  120A  158A  25B0   	fcall	_GetADCValue
              120A  118A         
  1330  05EF  0871               	movf	(1+(?_GetADCValue)),w
  1331  05F0  1683               	bsf	status, 5	;RP0=1, select bank1
  1332  05F1  1303               	bcf	status, 6	;RP1=0, select bank1
  1333  05F2  01BD               	clrf	(main@ADC_value7+1)^080h
  1334  05F3  07BD               	addwf	(main@ADC_value7+1)^080h
  1335  05F4  0870               	movf	(0+(?_GetADCValue)),w
  1336  05F5  01BC               	clrf	(main@ADC_value7)^080h
  1337  05F6  07BC               	addwf	(main@ADC_value7)^080h
  1338                           
  1339                           	line	47
  1340                           	
  1341  05F7                     l5050:	
  1342                           ;Main.c: 47: ADC_value7=map(ADC_value7, 0, 1023, 0, 125);
  1343  05F7  3000               	movlw	0x0
  1344  05F8  1283               	bcf	status, 5	;RP0=0, select bank0
  1345  05F9  1303               	bcf	status, 6	;RP1=0, select bank0
  1346  05FA  00E3               	movwf	0+(?_map)+0Ch
  1347  05FB  30FA               	movlw	0xfa
  1348  05FC  00E4               	movwf	1+(?_map)+0Ch
  1349  05FD  3042               	movlw	0x42
  1350  05FE  00E5               	movwf	2+(?_map)+0Ch
  1351  05FF  3000               	movlw	0x0
  1352  0600  00E0               	movwf	0+(?_map)+09h
  1353  0601  3000               	movlw	0x0
  1354  0602  00E1               	movwf	1+(?_map)+09h
  1355  0603  3000               	movlw	0x0
  1356  0604  00E2               	movwf	2+(?_map)+09h
  1357  0605  30C0               	movlw	0xc0
  1358  0606  00DD               	movwf	0+(?_map)+06h
  1359  0607  307F               	movlw	0x7f
  1360  0608  00DE               	movwf	1+(?_map)+06h
  1361  0609  3044               	movlw	0x44
  1362  060A  00DF               	movwf	2+(?_map)+06h
  1363  060B  3000               	movlw	0x0
  1364  060C  00DA               	movwf	0+(?_map)+03h
  1365  060D  3000               	movlw	0x0
  1366  060E  00DB               	movwf	1+(?_map)+03h
  1367  060F  3000               	movlw	0x0
  1368  0610  00DC               	movwf	2+(?_map)+03h
  1369  0611  1683               	bsf	status, 5	;RP0=1, select bank1
  1370  0612  1303               	bcf	status, 6	;RP1=0, select bank1
  1371  0613  083D               	movf	(main@ADC_value7+1)^080h,w
  1372  0614  1283               	bcf	status, 5	;RP0=0, select bank0
  1373  0615  1303               	bcf	status, 6	;RP1=0, select bank0
  1374  0616  01AB               	clrf	(?___lwtoft+1)
  1375  0617  07AB               	addwf	(?___lwtoft+1)
  1376  0618  1683               	bsf	status, 5	;RP0=1, select bank1
  1377  0619  1303               	bcf	status, 6	;RP1=0, select bank1
  1378  061A  083C               	movf	(main@ADC_value7)^080h,w
  1379  061B  1283               	bcf	status, 5	;RP0=0, select bank0
  1380  061C  1303               	bcf	status, 6	;RP1=0, select bank0
  1381  061D  01AA               	clrf	(?___lwtoft)
  1382  061E  07AA               	addwf	(?___lwtoft)
  1383                           
  1384  061F  120A  158A  2513   	fcall	___lwtoft
              120A  118A         
  1385  0624  1283               	bcf	status, 5	;RP0=0, select bank0
  1386  0625  1303               	bcf	status, 6	;RP1=0, select bank0
  1387  0626  082A               	movf	(0+(?___lwtoft)),w
  1388  0627  00D7               	movwf	(?_map)
  1389  0628  082B               	movf	(1+(?___lwtoft)),w
  1390  0629  00D8               	movwf	(?_map+1)
  1391  062A  082C               	movf	(2+(?___lwtoft)),w
  1392  062B  00D9               	movwf	(?_map+2)
  1393  062C  120A  158A  2757   	fcall	_map
              120A  118A         
  1394  0631  1283               	bcf	status, 5	;RP0=0, select bank0
  1395  0632  1303               	bcf	status, 6	;RP1=0, select bank0
  1396  0633  0857               	movf	(0+(?_map)),w
  1397  0634  00F8               	movwf	(?___fttol)
  1398  0635  0858               	movf	(1+(?_map)),w
  1399  0636  00F9               	movwf	(?___fttol+1)
  1400  0637  0859               	movf	(2+(?_map)),w
  1401  0638  00FA               	movwf	(?___fttol+2)
  1402  0639  120A  158A  26B1   	fcall	___fttol
              120A  118A         
  1403  063E  0879               	movf	1+(((0+(?___fttol)))),w
  1404  063F  1683               	bsf	status, 5	;RP0=1, select bank1
  1405  0640  1303               	bcf	status, 6	;RP1=0, select bank1
  1406  0641  01BD               	clrf	(main@ADC_value7+1)^080h
  1407  0642  07BD               	addwf	(main@ADC_value7+1)^080h
  1408  0643  0878               	movf	0+(((0+(?___fttol)))),w
  1409  0644  01BC               	clrf	(main@ADC_value7)^080h
  1410  0645  07BC               	addwf	(main@ADC_value7)^080h
  1411                           
  1412                           	line	48
  1413                           	
  1414  0646                     l5052:	
  1415                           ;Main.c: 48: ADC_value8 = GetADCValue(0);
  1416  0646  3000               	movlw	(0)
  1417  0647  120A  158A  25B0   	fcall	_GetADCValue
              120A  118A         
  1418  064C  0871               	movf	(1+(?_GetADCValue)),w
  1419  064D  1683               	bsf	status, 5	;RP0=1, select bank1
  1420  064E  1303               	bcf	status, 6	;RP1=0, select bank1
  1421  064F  01BF               	clrf	(main@ADC_value8+1)^080h
  1422  0650  07BF               	addwf	(main@ADC_value8+1)^080h
  1423  0651  0870               	movf	(0+(?_GetADCValue)),w
  1424  0652  01BE               	clrf	(main@ADC_value8)^080h
  1425  0653  07BE               	addwf	(main@ADC_value8)^080h
  1426                           
  1427                           	line	49
  1428                           	
  1429  0654                     l5054:	
  1430                           ;Main.c: 49: ADC_value8=map(ADC_value8, 0, 1023, 0, 125);
  1431  0654  3000               	movlw	0x0
  1432  0655  1283               	bcf	status, 5	;RP0=0, select bank0
  1433  0656  1303               	bcf	status, 6	;RP1=0, select bank0
  1434  0657  00E3               	movwf	0+(?_map)+0Ch
  1435  0658  30FA               	movlw	0xfa
  1436  0659  00E4               	movwf	1+(?_map)+0Ch
  1437  065A  3042               	movlw	0x42
  1438  065B  00E5               	movwf	2+(?_map)+0Ch
  1439  065C  3000               	movlw	0x0
  1440  065D  00E0               	movwf	0+(?_map)+09h
  1441  065E  3000               	movlw	0x0
  1442  065F  00E1               	movwf	1+(?_map)+09h
  1443  0660  3000               	movlw	0x0
  1444  0661  00E2               	movwf	2+(?_map)+09h
  1445  0662  30C0               	movlw	0xc0
  1446  0663  00DD               	movwf	0+(?_map)+06h
  1447  0664  307F               	movlw	0x7f
  1448  0665  00DE               	movwf	1+(?_map)+06h
  1449  0666  3044               	movlw	0x44
  1450  0667  00DF               	movwf	2+(?_map)+06h
  1451  0668  3000               	movlw	0x0
  1452  0669  00DA               	movwf	0+(?_map)+03h
  1453  066A  3000               	movlw	0x0
  1454  066B  00DB               	movwf	1+(?_map)+03h
  1455  066C  3000               	movlw	0x0
  1456  066D  00DC               	movwf	2+(?_map)+03h
  1457  066E  1683               	bsf	status, 5	;RP0=1, select bank1
  1458  066F  1303               	bcf	status, 6	;RP1=0, select bank1
  1459  0670  083F               	movf	(main@ADC_value8+1)^080h,w
  1460  0671  1283               	bcf	status, 5	;RP0=0, select bank0
  1461  0672  1303               	bcf	status, 6	;RP1=0, select bank0
  1462  0673  01AB               	clrf	(?___lwtoft+1)
  1463  0674  07AB               	addwf	(?___lwtoft+1)
  1464  0675  1683               	bsf	status, 5	;RP0=1, select bank1
  1465  0676  1303               	bcf	status, 6	;RP1=0, select bank1
  1466  0677  083E               	movf	(main@ADC_value8)^080h,w
  1467  0678  1283               	bcf	status, 5	;RP0=0, select bank0
  1468  0679  1303               	bcf	status, 6	;RP1=0, select bank0
  1469  067A  01AA               	clrf	(?___lwtoft)
  1470  067B  07AA               	addwf	(?___lwtoft)
  1471                           
  1472  067C  120A  158A  2513   	fcall	___lwtoft
              120A  118A         
  1473  0681  1283               	bcf	status, 5	;RP0=0, select bank0
  1474  0682  1303               	bcf	status, 6	;RP1=0, select bank0
  1475  0683  082A               	movf	(0+(?___lwtoft)),w
  1476  0684  00D7               	movwf	(?_map)
  1477  0685  082B               	movf	(1+(?___lwtoft)),w
  1478  0686  00D8               	movwf	(?_map+1)
  1479  0687  082C               	movf	(2+(?___lwtoft)),w
  1480  0688  00D9               	movwf	(?_map+2)
  1481  0689  120A  158A  2757   	fcall	_map
              120A  118A         
  1482  068E  1283               	bcf	status, 5	;RP0=0, select bank0
  1483  068F  1303               	bcf	status, 6	;RP1=0, select bank0
  1484  0690  0857               	movf	(0+(?_map)),w
  1485  0691  00F8               	movwf	(?___fttol)
  1486  0692  0858               	movf	(1+(?_map)),w
  1487  0693  00F9               	movwf	(?___fttol+1)
  1488  0694  0859               	movf	(2+(?_map)),w
  1489  0695  00FA               	movwf	(?___fttol+2)
  1490  0696  120A  158A  26B1   	fcall	___fttol
              120A  118A         
  1491  069B  0879               	movf	1+(((0+(?___fttol)))),w
  1492  069C  1683               	bsf	status, 5	;RP0=1, select bank1
  1493  069D  1303               	bcf	status, 6	;RP1=0, select bank1
  1494  069E  01BF               	clrf	(main@ADC_value8+1)^080h
  1495  069F  07BF               	addwf	(main@ADC_value8+1)^080h
  1496  06A0  0878               	movf	0+(((0+(?___fttol)))),w
  1497  06A1  01BE               	clrf	(main@ADC_value8)^080h
  1498  06A2  07BE               	addwf	(main@ADC_value8)^080h
  1499                           
  1500                           	line	50
  1501                           	
  1502  06A3                     l5056:	
  1503                           ;Main.c: 50: ADC_value=ADC_value1+ADC_value2+ADC_value3+ADC_value4+ADC_value5+ADC_value6
                                 +ADC_value7+ADC_value8;
  1504  06A3  0832               	movf	(main@ADC_value2)^080h,w
  1505  06A4  0730               	addwf	(main@ADC_value1)^080h,w
  1506  06A5  00A0               	movwf	(??_main+0)^080h+0
  1507  06A6  0833               	movf	(main@ADC_value2+1)^080h,w
  1508  06A7  1803               	skipnc
  1509  06A8  0A33               	incf	(main@ADC_value2+1)^080h,w
  1510  06A9  0731               	addwf	(main@ADC_value1+1)^080h,w
  1511  06AA  00A1               	movwf	1+(??_main+0)^080h+0
  1512  06AB  0834               	movf	(main@ADC_value3)^080h,w
  1513  06AC  0720               	addwf	0+(??_main+0)^080h+0,w
  1514  06AD  00A2               	movwf	(??_main+2)^080h+0
  1515  06AE  0835               	movf	(main@ADC_value3+1)^080h,w
  1516  06AF  1803               	skipnc
  1517  06B0  0A35               	incf	(main@ADC_value3+1)^080h,w
  1518  06B1  0721               	addwf	1+(??_main+0)^080h+0,w
  1519  06B2  00A3               	movwf	1+(??_main+2)^080h+0
  1520  06B3  0836               	movf	(main@ADC_value4)^080h,w
  1521  06B4  0722               	addwf	0+(??_main+2)^080h+0,w
  1522  06B5  00A4               	movwf	(??_main+4)^080h+0
  1523  06B6  0837               	movf	(main@ADC_value4+1)^080h,w
  1524  06B7  1803               	skipnc
  1525  06B8  0A37               	incf	(main@ADC_value4+1)^080h,w
  1526  06B9  0723               	addwf	1+(??_main+2)^080h+0,w
  1527  06BA  00A5               	movwf	1+(??_main+4)^080h+0
  1528  06BB  0838               	movf	(main@ADC_value5)^080h,w
  1529  06BC  0724               	addwf	0+(??_main+4)^080h+0,w
  1530  06BD  00A6               	movwf	(??_main+6)^080h+0
  1531  06BE  0839               	movf	(main@ADC_value5+1)^080h,w
  1532  06BF  1803               	skipnc
  1533  06C0  0A39               	incf	(main@ADC_value5+1)^080h,w
  1534  06C1  0725               	addwf	1+(??_main+4)^080h+0,w
  1535  06C2  00A7               	movwf	1+(??_main+6)^080h+0
  1536  06C3  083A               	movf	(main@ADC_value6)^080h,w
  1537  06C4  0726               	addwf	0+(??_main+6)^080h+0,w
  1538  06C5  00A8               	movwf	(??_main+8)^080h+0
  1539  06C6  083B               	movf	(main@ADC_value6+1)^080h,w
  1540  06C7  1803               	skipnc
  1541  06C8  0A3B               	incf	(main@ADC_value6+1)^080h,w
  1542  06C9  0727               	addwf	1+(??_main+6)^080h+0,w
  1543  06CA  00A9               	movwf	1+(??_main+8)^080h+0
  1544  06CB  083C               	movf	(main@ADC_value7)^080h,w
  1545  06CC  0728               	addwf	0+(??_main+8)^080h+0,w
  1546  06CD  00AA               	movwf	(??_main+10)^080h+0
  1547  06CE  083D               	movf	(main@ADC_value7+1)^080h,w
  1548  06CF  1803               	skipnc
  1549  06D0  0A3D               	incf	(main@ADC_value7+1)^080h,w
  1550  06D1  0729               	addwf	1+(??_main+8)^080h+0,w
  1551  06D2  00AB               	movwf	1+(??_main+10)^080h+0
  1552  06D3  083E               	movf	(main@ADC_value8)^080h,w
  1553  06D4  072A               	addwf	0+(??_main+10)^080h+0,w
  1554  06D5  00C4               	movwf	(main@ADC_value)^080h
  1555  06D6  083F               	movf	(main@ADC_value8+1)^080h,w
  1556  06D7  1803               	skipnc
  1557  06D8  0A3F               	incf	(main@ADC_value8+1)^080h,w
  1558  06D9  072B               	addwf	1+(??_main+10)^080h+0,w
  1559  06DA  00C5               	movwf	1+(main@ADC_value)^080h
  1560                           	line	51
  1561                           	
  1562  06DB                     l5058:	
  1563                           ;Main.c: 51: digit1 = (unsigned int)(ADC_value/1000);
  1564  06DB  30E8               	movlw	low(03E8h)
  1565  06DC  00F6               	movwf	(?___lwdiv)
  1566  06DD  3003               	movlw	high(03E8h)
  1567  06DE  00F7               	movwf	((?___lwdiv))+1
  1568  06DF  0845               	movf	(main@ADC_value+1)^080h,w
  1569  06E0  01F9               	clrf	1+(?___lwdiv)+02h
  1570  06E1  07F9               	addwf	1+(?___lwdiv)+02h
  1571  06E2  0844               	movf	(main@ADC_value)^080h,w
  1572  06E3  01F8               	clrf	0+(?___lwdiv)+02h
  1573  06E4  07F8               	addwf	0+(?___lwdiv)+02h
  1574                           
  1575  06E5  120A  158A  25E8   	fcall	___lwdiv
              120A  118A         
  1576  06EA  0877               	movf	(1+(?___lwdiv)),w
  1577  06EB  1683               	bsf	status, 5	;RP0=1, select bank1
  1578  06EC  1303               	bcf	status, 6	;RP1=0, select bank1
  1579  06ED  01C3               	clrf	(main@digit1+1)^080h
  1580  06EE  07C3               	addwf	(main@digit1+1)^080h
  1581  06EF  0876               	movf	(0+(?___lwdiv)),w
  1582  06F0  01C2               	clrf	(main@digit1)^080h
  1583  06F1  07C2               	addwf	(main@digit1)^080h
  1584                           
  1585                           	line	52
  1586                           	
  1587  06F2                     l5060:	
  1588                           ;Main.c: 52: digit2 = (unsigned int)((ADC_value - digit1*1000)/100);
  1589  06F2  3064               	movlw	low(064h)
  1590  06F3  00F6               	movwf	(?___lwdiv)
  1591  06F4  3000               	movlw	high(064h)
  1592  06F5  00F7               	movwf	((?___lwdiv))+1
  1593  06F6  0843               	movf	(main@digit1+1)^080h,w
  1594  06F7  01F1               	clrf	(?___wmul+1)
  1595  06F8  07F1               	addwf	(?___wmul+1)
  1596  06F9  0842               	movf	(main@digit1)^080h,w
  1597  06FA  01F0               	clrf	(?___wmul)
  1598  06FB  07F0               	addwf	(?___wmul)
  1599                           
  1600  06FC  30E8               	movlw	low(03E8h)
  1601  06FD  00F2               	movwf	0+(?___wmul)+02h
  1602  06FE  3003               	movlw	high(03E8h)
  1603  06FF  00F3               	movwf	(0+(?___wmul)+02h)+1
  1604  0700  120A  158A  252E   	fcall	___wmul
              120A  118A         
  1605  0705  0970               	comf	(0+(?___wmul)),w
  1606  0706  1683               	bsf	status, 5	;RP0=1, select bank1
  1607  0707  1303               	bcf	status, 6	;RP1=0, select bank1
  1608  0708  00A0               	movwf	(??_main+0)^080h+0
  1609  0709  0971               	comf	(1+(?___wmul)),w
  1610  070A  00A1               	movwf	((??_main+0)^080h+0+1)
  1611  070B  0AA0               	incf	(??_main+0)^080h+0,f
  1612  070C  1903               	skipnz
  1613  070D  0AA1               	incf	((??_main+0)^080h+0+1),f
  1614  070E  0844               	movf	(main@ADC_value)^080h,w
  1615  070F  0720               	addwf	0+(??_main+0)^080h+0,w
  1616  0710  00F8               	movwf	0+(?___lwdiv)+02h
  1617  0711  0845               	movf	(main@ADC_value+1)^080h,w
  1618  0712  1803               	skipnc
  1619  0713  0A45               	incf	(main@ADC_value+1)^080h,w
  1620  0714  0721               	addwf	1+(??_main+0)^080h+0,w
  1621  0715  00F9               	movwf	1+0+(?___lwdiv)+02h
  1622  0716  120A  158A  25E8   	fcall	___lwdiv
              120A  118A         
  1623  071B  0877               	movf	(1+(?___lwdiv)),w
  1624  071C  1683               	bsf	status, 5	;RP0=1, select bank1
  1625  071D  1303               	bcf	status, 6	;RP1=0, select bank1
  1626  071E  01C1               	clrf	(main@digit2+1)^080h
  1627  071F  07C1               	addwf	(main@digit2+1)^080h
  1628  0720  0876               	movf	(0+(?___lwdiv)),w
  1629  0721  01C0               	clrf	(main@digit2)^080h
  1630  0722  07C0               	addwf	(main@digit2)^080h
  1631                           
  1632                           	line	53
  1633                           	
  1634  0723                     l5062:	
  1635                           ;Main.c: 53: digit3 = (unsigned int)((ADC_value - (digit1*1000+digit2*100))/10);
  1636  0723  300A               	movlw	low(0Ah)
  1637  0724  00F6               	movwf	(?___lwdiv)
  1638  0725  3000               	movlw	high(0Ah)
  1639  0726  00F7               	movwf	((?___lwdiv))+1
  1640  0727  0843               	movf	(main@digit1+1)^080h,w
  1641  0728  01F1               	clrf	(?___wmul+1)
  1642  0729  07F1               	addwf	(?___wmul+1)
  1643  072A  0842               	movf	(main@digit1)^080h,w
  1644  072B  01F0               	clrf	(?___wmul)
  1645  072C  07F0               	addwf	(?___wmul)
  1646                           
  1647  072D  30E8               	movlw	low(03E8h)
  1648  072E  00F2               	movwf	0+(?___wmul)+02h
  1649  072F  3003               	movlw	high(03E8h)
  1650  0730  00F3               	movwf	(0+(?___wmul)+02h)+1
  1651  0731  120A  158A  252E   	fcall	___wmul
              120A  118A         
  1652  0736  0870               	movf	(0+?___wmul),w
  1653  0737  1683               	bsf	status, 5	;RP0=1, select bank1
  1654  0738  1303               	bcf	status, 6	;RP1=0, select bank1
  1655  0739  00A0               	movwf	(??_main+0)^080h+0
  1656  073A  0871               	movf	(1+?___wmul),w
  1657  073B  00A1               	movwf	((??_main+0)^080h+0+1)
  1658  073C  0841               	movf	(main@digit2+1)^080h,w
  1659  073D  01F1               	clrf	(?___wmul+1)
  1660  073E  07F1               	addwf	(?___wmul+1)
  1661  073F  0840               	movf	(main@digit2)^080h,w
  1662  0740  01F0               	clrf	(?___wmul)
  1663  0741  07F0               	addwf	(?___wmul)
  1664                           
  1665  0742  3064               	movlw	low(064h)
  1666  0743  00F2               	movwf	0+(?___wmul)+02h
  1667  0744  3000               	movlw	high(064h)
  1668  0745  00F3               	movwf	(0+(?___wmul)+02h)+1
  1669  0746  120A  158A  252E   	fcall	___wmul
              120A  118A         
  1670  074B  0870               	movf	(0+(?___wmul)),w
  1671  074C  1683               	bsf	status, 5	;RP0=1, select bank1
  1672  074D  1303               	bcf	status, 6	;RP1=0, select bank1
  1673  074E  0720               	addwf	0+(??_main+0)^080h+0,w
  1674  074F  00A2               	movwf	(??_main+2)^080h+0
  1675  0750  0871               	movf	(1+(?___wmul)),w
  1676  0751  1803               	skipnc
  1677  0752  0A71               	incf	(1+(?___wmul)),w
  1678  0753  0721               	addwf	1+(??_main+0)^080h+0,w
  1679  0754  00A3               	movwf	1+(??_main+2)^080h+0
  1680  0755  09A2               	comf	(??_main+2)^080h+0,f
  1681  0756  09A3               	comf	(??_main+2)^080h+1,f
  1682  0757  0AA2               	incf	(??_main+2)^080h+0,f
  1683  0758  1903               	skipnz
  1684  0759  0AA3               	incf	(??_main+2)^080h+1,f
  1685  075A  0844               	movf	(main@ADC_value)^080h,w
  1686  075B  0722               	addwf	0+(??_main+2)^080h+0,w
  1687  075C  00F8               	movwf	0+(?___lwdiv)+02h
  1688  075D  0845               	movf	(main@ADC_value+1)^080h,w
  1689  075E  1803               	skipnc
  1690  075F  0A45               	incf	(main@ADC_value+1)^080h,w
  1691  0760  0723               	addwf	1+(??_main+2)^080h+0,w
  1692  0761  00F9               	movwf	1+0+(?___lwdiv)+02h
  1693  0762  120A  158A  25E8   	fcall	___lwdiv
              120A  118A         
  1694  0767  0877               	movf	(1+(?___lwdiv)),w
  1695  0768  1683               	bsf	status, 5	;RP0=1, select bank1
  1696  0769  1303               	bcf	status, 6	;RP1=0, select bank1
  1697  076A  01AF               	clrf	(main@digit3+1)^080h
  1698  076B  07AF               	addwf	(main@digit3+1)^080h
  1699  076C  0876               	movf	(0+(?___lwdiv)),w
  1700  076D  01AE               	clrf	(main@digit3)^080h
  1701  076E  07AE               	addwf	(main@digit3)^080h
  1702                           
  1703                           	line	54
  1704                           	
  1705  076F                     l5064:	
  1706                           ;Main.c: 54: digit4 = (unsigned int)(ADC_value - (digit1*1000+digit2*100+digit3*10));
  1707  076F  0843               	movf	(main@digit1+1)^080h,w
  1708  0770  01F1               	clrf	(?___wmul+1)
  1709  0771  07F1               	addwf	(?___wmul+1)
  1710  0772  0842               	movf	(main@digit1)^080h,w
  1711  0773  01F0               	clrf	(?___wmul)
  1712  0774  07F0               	addwf	(?___wmul)
  1713                           
  1714  0775  30E8               	movlw	low(03E8h)
  1715  0776  00F2               	movwf	0+(?___wmul)+02h
  1716  0777  3003               	movlw	high(03E8h)
  1717  0778  00F3               	movwf	(0+(?___wmul)+02h)+1
  1718  0779  120A  158A  252E   	fcall	___wmul
              120A  118A         
  1719  077E  0870               	movf	(0+?___wmul),w
  1720  077F  1683               	bsf	status, 5	;RP0=1, select bank1
  1721  0780  1303               	bcf	status, 6	;RP1=0, select bank1
  1722  0781  00A0               	movwf	(??_main+0)^080h+0
  1723  0782  0871               	movf	(1+?___wmul),w
  1724  0783  00A1               	movwf	((??_main+0)^080h+0+1)
  1725  0784  0841               	movf	(main@digit2+1)^080h,w
  1726  0785  01F1               	clrf	(?___wmul+1)
  1727  0786  07F1               	addwf	(?___wmul+1)
  1728  0787  0840               	movf	(main@digit2)^080h,w
  1729  0788  01F0               	clrf	(?___wmul)
  1730  0789  07F0               	addwf	(?___wmul)
  1731                           
  1732  078A  3064               	movlw	low(064h)
  1733  078B  00F2               	movwf	0+(?___wmul)+02h
  1734  078C  3000               	movlw	high(064h)
  1735  078D  00F3               	movwf	(0+(?___wmul)+02h)+1
  1736  078E  120A  158A  252E   	fcall	___wmul
              120A  118A         
  1737  0793  0870               	movf	(0+(?___wmul)),w
  1738  0794  1683               	bsf	status, 5	;RP0=1, select bank1
  1739  0795  1303               	bcf	status, 6	;RP1=0, select bank1
  1740  0796  0720               	addwf	0+(??_main+0)^080h+0,w
  1741  0797  00A2               	movwf	(??_main+2)^080h+0
  1742  0798  0871               	movf	(1+(?___wmul)),w
  1743  0799  1803               	skipnc
  1744  079A  0A71               	incf	(1+(?___wmul)),w
  1745  079B  0721               	addwf	1+(??_main+0)^080h+0,w
  1746  079C  00A3               	movwf	1+(??_main+2)^080h+0
  1747  079D  082F               	movf	(main@digit3+1)^080h,w
  1748  079E  01F1               	clrf	(?___wmul+1)
  1749  079F  07F1               	addwf	(?___wmul+1)
  1750  07A0  082E               	movf	(main@digit3)^080h,w
  1751  07A1  01F0               	clrf	(?___wmul)
  1752  07A2  07F0               	addwf	(?___wmul)
  1753                           
  1754  07A3  300A               	movlw	low(0Ah)
  1755  07A4  00F2               	movwf	0+(?___wmul)+02h
  1756  07A5  3000               	movlw	high(0Ah)
  1757  07A6  00F3               	movwf	(0+(?___wmul)+02h)+1
  1758  07A7  120A  158A  252E   	fcall	___wmul
              120A  118A         
  1759  07AC  0870               	movf	(0+(?___wmul)),w
  1760  07AD  1683               	bsf	status, 5	;RP0=1, select bank1
  1761  07AE  1303               	bcf	status, 6	;RP1=0, select bank1
  1762  07AF  0722               	addwf	0+(??_main+2)^080h+0,w
  1763  07B0  00A4               	movwf	(??_main+4)^080h+0
  1764  07B1  0871               	movf	(1+(?___wmul)),w
  1765  07B2  1803               	skipnc
  1766  07B3  0A71               	incf	(1+(?___wmul)),w
  1767  07B4  0723               	addwf	1+(??_main+2)^080h+0,w
  1768  07B5  00A5               	movwf	1+(??_main+4)^080h+0
  1769  07B6  09A4               	comf	(??_main+4)^080h+0,f
  1770  07B7  09A5               	comf	(??_main+4)^080h+1,f
  1771  07B8  0AA4               	incf	(??_main+4)^080h+0,f
  1772  07B9  1903               	skipnz
  1773  07BA  0AA5               	incf	(??_main+4)^080h+1,f
  1774  07BB  0844               	movf	(main@ADC_value)^080h,w
  1775  07BC  0724               	addwf	0+(??_main+4)^080h+0,w
  1776  07BD  00AC               	movwf	(main@digit4)^080h
  1777  07BE  0845               	movf	(main@ADC_value+1)^080h,w
  1778  07BF  1803               	skipnc
  1779  07C0  0A45               	incf	(main@ADC_value+1)^080h,w
  1780  07C1  0725               	addwf	1+(??_main+4)^080h+0,w
  1781  07C2  00AD               	movwf	1+(main@digit4)^080h
  1782                           	line	55
  1783                           	
  1784  07C3                     l5066:	
  1785                           ;Main.c: 55: ClearLCDScreen();
  1786  07C3  120A  158A  24EA   	fcall	_ClearLCDScreen
              120A  118A         
  1787                           	line	56
  1788                           	
  1789  07C8                     l5068:	
  1790                           ;Main.c: 56: WriteDataToLCD(digit1+0x30);
  1791  07C8  1683               	bsf	status, 5	;RP0=1, select bank1
  1792  07C9  1303               	bcf	status, 6	;RP1=0, select bank1
  1793  07CA  0842               	movf	(main@digit1)^080h,w
  1794  07CB  3E30               	addlw	030h
  1795  07CC  120A  158A  2558   	fcall	_WriteDataToLCD
              120A  118A         
  1796                           	line	57
  1797                           	
  1798  07D1                     l5070:	
  1799                           ;Main.c: 57: WriteDataToLCD(digit2+0x30);
  1800  07D1  1683               	bsf	status, 5	;RP0=1, select bank1
  1801  07D2  1303               	bcf	status, 6	;RP1=0, select bank1
  1802  07D3  0840               	movf	(main@digit2)^080h,w
  1803  07D4  3E30               	addlw	030h
  1804  07D5  120A  158A  2558   	fcall	_WriteDataToLCD
              120A  118A         
  1805                           	line	58
  1806                           	
  1807  07DA                     l5072:	
  1808                           ;Main.c: 58: WriteDataToLCD(digit3+0x30);
  1809  07DA  1683               	bsf	status, 5	;RP0=1, select bank1
  1810  07DB  1303               	bcf	status, 6	;RP1=0, select bank1
  1811  07DC  082E               	movf	(main@digit3)^080h,w
  1812  07DD  3E30               	addlw	030h
  1813  07DE  120A  158A  2558   	fcall	_WriteDataToLCD
              120A  118A         
  1814                           	line	59
  1815                           	
  1816  07E3                     l5074:	
  1817                           ;Main.c: 59: WriteDataToLCD(digit4+0x30);
  1818  07E3  1683               	bsf	status, 5	;RP0=1, select bank1
  1819  07E4  1303               	bcf	status, 6	;RP1=0, select bank1
  1820  07E5  082C               	movf	(main@digit4)^080h,w
  1821  07E6  3E30               	addlw	030h
  1822  07E7  120A  158A  2558   	fcall	_WriteDataToLCD
              120A  118A         
  1823                           	line	60
  1824                           	
  1825  07EC                     l5076:	
  1826                           ;Main.c: 60: _delay((unsigned long)((500)*(20000000/4000.0)));
  1827                           	opt asmopt_off
  1828  07EC  300D               movlw  13
  1829  07ED  1683               	bsf	status, 5	;RP0=1, select bank1
  1830  07EE  1303               	bcf	status, 6	;RP1=0, select bank1
  1831  07EF  00A2               movwf	((??_main+0)^080h+0+2),f
  1832  07F0  30AF               movlw	175
  1833  07F1  00A1               movwf	((??_main+0)^080h+0+1),f
  1834  07F2  30C1               	movlw	193
  1835  07F3  00A0               movwf	((??_main+0)^080h+0),f
  1836  07F4                     u3197:
  1837  07F4  0BA0               	decfsz	((??_main+0)^080h+0),f
  1838  07F5  2FF4               	goto	u3197
  1839  07F6  0BA1               	decfsz	((??_main+0)^080h+0+1),f
  1840  07F7  2FF4               	goto	u3197
  1841  07F8  0BA2               	decfsz	((??_main+0)^080h+0+2),f
  1842  07F9  2FF4               	goto	u3197
  1843  07FA  0064               	clrwdt
  1844                           opt asmopt_on
  1845                           
  1846  07FB  2BBB               	goto	l5024
  1847                           	line	66
  1848                           	
  1849  07FC                     l656:	
  1850                           	line	31
  1851  07FC  2BBB               	goto	l5024
  1852                           	
  1853  07FD                     l657:	
  1854                           	line	67
  1855                           	
  1856  07FD                     l658:	
  1857                           	global	start
  1858  07FD  120A  118A  2800   	ljmp	start
  1859                           	opt stack 0
  1860                           GLOBAL	__end_of_main
  1861  0800                     	__end_of_main:
  1862 ;; =============== function _main ends ============
  1863                           
  1864                           	signat	_main,88
  1865                           	global	_ClearLCDScreen
  1866                           psect	text422,local,class=CODE,delta=2
  1867                           global __ptext422
  1868  0CEA                     __ptext422:
  1869                           
  1870 ;; *************** function _ClearLCDScreen *****************
  1871 ;; Defined at:
  1872 ;;		line 99 in file "C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\LCD.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;		None               void
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1886 ;;      Params:         0       0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0
  1888 ;;      Temps:          2       0       0       0       0
  1889 ;;      Totals:         2       0       0       0       0
  1890 ;;Total ram usage:        2 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    2
  1893 ;; This function calls:
  1894 ;;		_WriteCommandToLCD
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           psect	text422
  1900                           	file	"C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\LCD.c"
  1901                           	line	99
  1902                           	global	__size_of_ClearLCDScreen
  1903  0010                     	__size_of_ClearLCDScreen	equ	__end_of_ClearLCDScreen-_ClearLCDScreen
  1904                           	
  1905  0CEA                     _ClearLCDScreen:	
  1906                           	opt	stack 5
  1907                           ; Regs used in _ClearLCDScreen: [wreg+status,2+status,0+pclath+cstack]
  1908                           	line	100
  1909                           	
  1910  0CEA                     l5014:	
  1911                           ;LCD.c: 100: WriteCommandToLCD(0x01);
  1912  0CEA  3001               	movlw	(01h)
  1913  0CEB  120A  158A  2584   	fcall	_WriteCommandToLCD
              120A  158A         
  1914                           	line	101
  1915                           	
  1916  0CF0                     l5016:	
  1917                           ;LCD.c: 101: _delay((unsigned long)((2)*(20000000/4000.0)));
  1918                           	opt asmopt_off
  1919  0CF0  300D               movlw	13
  1920  0CF1  00F6               movwf	((??_ClearLCDScreen+0)+0+1),f
  1921  0CF2  30FB               	movlw	251
  1922  0CF3  00F5               movwf	((??_ClearLCDScreen+0)+0),f
  1923  0CF4                     u3207:
  1924  0CF4  0BF5               	decfsz	((??_ClearLCDScreen+0)+0),f
  1925  0CF5  2CF4               	goto	u3207
  1926  0CF6  0BF6               	decfsz	((??_ClearLCDScreen+0)+0+1),f
  1927  0CF7  2CF4               	goto	u3207
  1928  0CF8  2CF9               	nop2
  1929                           opt asmopt_on
  1930                           
  1931                           	line	102
  1932                           	
  1933  0CF9                     l1971:	
  1934  0CF9  0008               	return
  1935                           	opt stack 0
  1936                           GLOBAL	__end_of_ClearLCDScreen
  1937  0CFA                     	__end_of_ClearLCDScreen:
  1938 ;; =============== function _ClearLCDScreen ends ============
  1939                           
  1940                           	signat	_ClearLCDScreen,88
  1941                           	global	_InitLCD
  1942                           psect	text423,local,class=CODE,delta=2
  1943                           global __ptext423
  1944  0010                     __ptext423:
  1945                           
  1946 ;; *************** function _InitLCD *****************
  1947 ;; Defined at:
  1948 ;;		line 42 in file "C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\LCD.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;		None               void
  1955 ;; Registers used:
  1956 ;;		wreg, status,2, status,0, pclath, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1962 ;;      Params:         0       0       0       0       0
  1963 ;;      Locals:         0       0       0       0       0
  1964 ;;      Temps:          3       0       0       0       0
  1965 ;;      Totals:         3       0       0       0       0
  1966 ;;Total ram usage:        3 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    2
  1969 ;; This function calls:
  1970 ;;		_ToggleEpinOfLCD
  1971 ;;		_WriteCommandToLCD
  1972 ;; This function is called by:
  1973 ;;		_main
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           psect	text423
  1977                           	file	"C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\LCD.c"
  1978                           	line	42
  1979                           	global	__size_of_InitLCD
  1980  0090                     	__size_of_InitLCD	equ	__end_of_InitLCD-_InitLCD
  1981                           	
  1982  0010                     _InitLCD:	
  1983                           	opt	stack 5
  1984                           ; Regs used in _InitLCD: [wreg+status,2+status,0+pclath+cstack]
  1985                           	line	44
  1986                           	
  1987  0010                     l4974:	
  1988                           ;LCD.c: 44: RB0 = 0;
  1989  0010  1283               	bcf	status, 5	;RP0=0, select bank0
  1990  0011  1303               	bcf	status, 6	;RP1=0, select bank0
  1991  0012  1006               	bcf	(48/8),(48)&7
  1992                           	line	45
  1993                           ;LCD.c: 45: RB1 = 0;
  1994  0013  1086               	bcf	(49/8),(49)&7
  1995                           	line	46
  1996                           ;LCD.c: 46: RB4 = 0;
  1997  0014  1206               	bcf	(52/8),(52)&7
  1998                           	line	47
  1999                           ;LCD.c: 47: RB5 = 0;
  2000  0015  1286               	bcf	(53/8),(53)&7
  2001                           	line	48
  2002                           ;LCD.c: 48: RB6 = 0;
  2003  0016  1306               	bcf	(54/8),(54)&7
  2004                           	line	49
  2005                           ;LCD.c: 49: RB7 = 0;
  2006  0017  1386               	bcf	(55/8),(55)&7
  2007                           	line	50
  2008                           ;LCD.c: 50: TRISB0 = 0;
  2009  0018  1683               	bsf	status, 5	;RP0=1, select bank1
  2010  0019  1303               	bcf	status, 6	;RP1=0, select bank1
  2011  001A  1006               	bcf	(1072/8)^080h,(1072)&7
  2012                           	line	51
  2013                           ;LCD.c: 51: TRISB1 = 0;
  2014  001B  1086               	bcf	(1073/8)^080h,(1073)&7
  2015                           	line	52
  2016                           ;LCD.c: 52: TRISB4 = 0;
  2017  001C  1206               	bcf	(1076/8)^080h,(1076)&7
  2018                           	line	53
  2019                           ;LCD.c: 53: TRISB5 = 0;
  2020  001D  1286               	bcf	(1077/8)^080h,(1077)&7
  2021                           	line	54
  2022                           ;LCD.c: 54: TRISB6 = 0;
  2023  001E  1306               	bcf	(1078/8)^080h,(1078)&7
  2024                           	line	55
  2025                           ;LCD.c: 55: TRISB7 = 0;
  2026  001F  1386               	bcf	(1079/8)^080h,(1079)&7
  2027                           	line	58
  2028                           	
  2029  0020                     l4976:	
  2030                           ;LCD.c: 58: _delay((unsigned long)((40)*(20000000/4000.0)));
  2031                           	opt asmopt_off
  2032  0020  3002               movlw  2
  2033  0021  00F7               movwf	((??_InitLCD+0)+0+2),f
  2034  0022  3004               movlw	4
  2035  0023  00F6               movwf	((??_InitLCD+0)+0+1),f
  2036  0024  30BA               	movlw	186
  2037  0025  00F5               movwf	((??_InitLCD+0)+0),f
  2038  0026                     u3217:
  2039  0026  0BF5               	decfsz	((??_InitLCD+0)+0),f
  2040  0027  2826               	goto	u3217
  2041  0028  0BF6               	decfsz	((??_InitLCD+0)+0+1),f
  2042  0029  2826               	goto	u3217
  2043  002A  0BF7               	decfsz	((??_InitLCD+0)+0+2),f
  2044  002B  2826               	goto	u3217
  2045  002C  0064               	clrwdt
  2046                           opt asmopt_on
  2047                           
  2048                           	line	60
  2049                           	
  2050  002D                     l4978:	
  2051                           ;LCD.c: 60: PORTB &= 0x0F;
  2052  002D  300F               	movlw	(0Fh)
  2053  002E  00F5               	movwf	(??_InitLCD+0)+0
  2054  002F  0875               	movf	(??_InitLCD+0)+0,w
  2055  0030  1283               	bcf	status, 5	;RP0=0, select bank0
  2056  0031  1303               	bcf	status, 6	;RP1=0, select bank0
  2057  0032  0586               	andwf	(6),f	;volatile
  2058                           	line	61
  2059                           	
  2060  0033                     l4980:	
  2061                           ;LCD.c: 61: PORTB |= 0x30;
  2062  0033  3030               	movlw	(030h)
  2063  0034  00F5               	movwf	(??_InitLCD+0)+0
  2064  0035  0875               	movf	(??_InitLCD+0)+0,w
  2065  0036  0486               	iorwf	(6),f	;volatile
  2066                           	line	62
  2067                           	
  2068  0037                     l4982:	
  2069                           ;LCD.c: 62: ToggleEpinOfLCD();
  2070  0037  120A  158A  24FA   	fcall	_ToggleEpinOfLCD
              120A  118A         
  2071                           	line	64
  2072                           	
  2073  003C                     l4984:	
  2074                           ;LCD.c: 64: _delay((unsigned long)((6)*(20000000/4000.0)));
  2075                           	opt asmopt_off
  2076  003C  3027               movlw	39
  2077  003D  00F6               movwf	((??_InitLCD+0)+0+1),f
  2078  003E  30F5               	movlw	245
  2079  003F  00F5               movwf	((??_InitLCD+0)+0),f
  2080  0040                     u3227:
  2081  0040  0BF5               	decfsz	((??_InitLCD+0)+0),f
  2082  0041  2840               	goto	u3227
  2083  0042  0BF6               	decfsz	((??_InitLCD+0)+0+1),f
  2084  0043  2840               	goto	u3227
  2085                           opt asmopt_on
  2086                           
  2087                           	line	66
  2088                           	
  2089  0044                     l4986:	
  2090                           ;LCD.c: 66: PORTB &= 0x0F;
  2091  0044  300F               	movlw	(0Fh)
  2092  0045  00F5               	movwf	(??_InitLCD+0)+0
  2093  0046  0875               	movf	(??_InitLCD+0)+0,w
  2094  0047  1283               	bcf	status, 5	;RP0=0, select bank0
  2095  0048  1303               	bcf	status, 6	;RP1=0, select bank0
  2096  0049  0586               	andwf	(6),f	;volatile
  2097                           	line	67
  2098                           	
  2099  004A                     l4988:	
  2100                           ;LCD.c: 67: PORTB |= 0x30;
  2101  004A  3030               	movlw	(030h)
  2102  004B  00F5               	movwf	(??_InitLCD+0)+0
  2103  004C  0875               	movf	(??_InitLCD+0)+0,w
  2104  004D  0486               	iorwf	(6),f	;volatile
  2105                           	line	68
  2106                           ;LCD.c: 68: ToggleEpinOfLCD();
  2107  004E  120A  158A  24FA   	fcall	_ToggleEpinOfLCD
              120A  118A         
  2108                           	line	70
  2109                           	
  2110  0053                     l4990:	
  2111                           ;LCD.c: 70: _delay((unsigned long)((300)*(20000000/4000000.0)));
  2112                           	opt asmopt_off
  2113  0053  30D6               movlw	214
  2114  0054  00F5               movwf	(??_InitLCD+0)+0,f
  2115  0055                     u3237:
  2116  0055  2856               	nop2
  2117  0056  2857               	nop2
  2118  0057  0BF5               decfsz	(??_InitLCD+0)+0,f
  2119  0058  2855               	goto	u3237
  2120  0059  0064               	clrwdt
  2121                           opt asmopt_on
  2122                           
  2123                           	line	72
  2124                           	
  2125  005A                     l4992:	
  2126                           ;LCD.c: 72: PORTB &= 0x0F;
  2127  005A  300F               	movlw	(0Fh)
  2128  005B  00F5               	movwf	(??_InitLCD+0)+0
  2129  005C  0875               	movf	(??_InitLCD+0)+0,w
  2130  005D  1283               	bcf	status, 5	;RP0=0, select bank0
  2131  005E  1303               	bcf	status, 6	;RP1=0, select bank0
  2132  005F  0586               	andwf	(6),f	;volatile
  2133                           	line	73
  2134                           	
  2135  0060                     l4994:	
  2136                           ;LCD.c: 73: PORTB |= 0x30;
  2137  0060  3030               	movlw	(030h)
  2138  0061  00F5               	movwf	(??_InitLCD+0)+0
  2139  0062  0875               	movf	(??_InitLCD+0)+0,w
  2140  0063  0486               	iorwf	(6),f	;volatile
  2141                           	line	74
  2142                           	
  2143  0064                     l4996:	
  2144                           ;LCD.c: 74: ToggleEpinOfLCD();
  2145  0064  120A  158A  24FA   	fcall	_ToggleEpinOfLCD
              120A  118A         
  2146                           	line	76
  2147                           ;LCD.c: 76: _delay((unsigned long)((2)*(20000000/4000.0)));
  2148                           	opt asmopt_off
  2149  0069  300D               movlw	13
  2150  006A  00F6               movwf	((??_InitLCD+0)+0+1),f
  2151  006B  30FB               	movlw	251
  2152  006C  00F5               movwf	((??_InitLCD+0)+0),f
  2153  006D                     u3247:
  2154  006D  0BF5               	decfsz	((??_InitLCD+0)+0),f
  2155  006E  286D               	goto	u3247
  2156  006F  0BF6               	decfsz	((??_InitLCD+0)+0+1),f
  2157  0070  286D               	goto	u3247
  2158  0071  2872               	nop2
  2159                           opt asmopt_on
  2160                           
  2161                           	line	78
  2162                           	
  2163  0072                     l4998:	
  2164                           ;LCD.c: 78: PORTB &= 0x0F;
  2165  0072  300F               	movlw	(0Fh)
  2166  0073  00F5               	movwf	(??_InitLCD+0)+0
  2167  0074  0875               	movf	(??_InitLCD+0)+0,w
  2168  0075  1283               	bcf	status, 5	;RP0=0, select bank0
  2169  0076  1303               	bcf	status, 6	;RP1=0, select bank0
  2170  0077  0586               	andwf	(6),f	;volatile
  2171                           	line	79
  2172                           	
  2173  0078                     l5000:	
  2174                           ;LCD.c: 79: PORTB |= 0x20;
  2175  0078  1686               	bsf	(6)+(5/8),(5)&7	;volatile
  2176                           	line	80
  2177                           	
  2178  0079                     l5002:	
  2179                           ;LCD.c: 80: ToggleEpinOfLCD();
  2180  0079  120A  158A  24FA   	fcall	_ToggleEpinOfLCD
              120A  118A         
  2181                           	line	82
  2182                           	
  2183  007E                     l5004:	
  2184                           ;LCD.c: 82: _delay((unsigned long)((2)*(20000000/4000.0)));
  2185                           	opt asmopt_off
  2186  007E  300D               movlw	13
  2187  007F  00F6               movwf	((??_InitLCD+0)+0+1),f
  2188  0080  30FB               	movlw	251
  2189  0081  00F5               movwf	((??_InitLCD+0)+0),f
  2190  0082                     u3257:
  2191  0082  0BF5               	decfsz	((??_InitLCD+0)+0),f
  2192  0083  2882               	goto	u3257
  2193  0084  0BF6               	decfsz	((??_InitLCD+0)+0+1),f
  2194  0085  2882               	goto	u3257
  2195  0086  2887               	nop2
  2196                           opt asmopt_on
  2197                           
  2198                           	line	84
  2199                           	
  2200  0087                     l5006:	
  2201                           ;LCD.c: 84: WriteCommandToLCD(0x28);
  2202  0087  3028               	movlw	(028h)
  2203  0088  120A  158A  2584   	fcall	_WriteCommandToLCD
              120A  118A         
  2204                           	line	85
  2205                           	
  2206  008D                     l5008:	
  2207                           ;LCD.c: 85: WriteCommandToLCD(0x0c);
  2208  008D  300C               	movlw	(0Ch)
  2209  008E  120A  158A  2584   	fcall	_WriteCommandToLCD
              120A  118A         
  2210                           	line	86
  2211                           	
  2212  0093                     l5010:	
  2213                           ;LCD.c: 86: WriteCommandToLCD(0x01);
  2214  0093  3001               	movlw	(01h)
  2215  0094  120A  158A  2584   	fcall	_WriteCommandToLCD
              120A  118A         
  2216                           	line	87
  2217                           	
  2218  0099                     l5012:	
  2219                           ;LCD.c: 87: WriteCommandToLCD(0x06);
  2220  0099  3006               	movlw	(06h)
  2221  009A  120A  158A  2584   	fcall	_WriteCommandToLCD
              120A  118A         
  2222                           	line	88
  2223                           	
  2224  009F                     l1962:	
  2225  009F  0008               	return
  2226                           	opt stack 0
  2227                           GLOBAL	__end_of_InitLCD
  2228  00A0                     	__end_of_InitLCD:
  2229 ;; =============== function _InitLCD ends ============
  2230                           
  2231                           	signat	_InitLCD,88
  2232                           	global	_WriteCommandToLCD
  2233                           psect	text424,local,class=CODE,delta=2
  2234                           global __ptext424
  2235  0D84                     __ptext424:
  2236                           
  2237 ;; *************** function _WriteCommandToLCD *****************
  2238 ;; Defined at:
  2239 ;;		line 14 in file "C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\LCD.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  Command         1    wreg     unsigned char 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  Command         1    4[COMMON] unsigned char 
  2244 ;; Return value:  Size  Location     Type
  2245 ;;		None               void
  2246 ;; Registers used:
  2247 ;;		wreg, status,2, status,0, pclath, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2253 ;;      Params:         0       0       0       0       0
  2254 ;;      Locals:         1       0       0       0       0
  2255 ;;      Temps:          2       0       0       0       0
  2256 ;;      Totals:         3       0       0       0       0
  2257 ;;Total ram usage:        3 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:    1
  2260 ;; This function calls:
  2261 ;;		_ToggleEpinOfLCD
  2262 ;; This function is called by:
  2263 ;;		_InitLCD
  2264 ;;		_ClearLCDScreen
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           psect	text424
  2268                           	file	"C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\LCD.c"
  2269                           	line	14
  2270                           	global	__size_of_WriteCommandToLCD
  2271  002C                     	__size_of_WriteCommandToLCD	equ	__end_of_WriteCommandToLCD-_WriteCommandToLCD
  2272                           	
  2273  0D84                     _WriteCommandToLCD:	
  2274                           	opt	stack 5
  2275                           ; Regs used in _WriteCommandToLCD: [wreg+status,2+status,0+pclath+cstack]
  2276                           ;WriteCommandToLCD@Command stored from wreg
  2277  0D84  00F4               	movwf	(WriteCommandToLCD@Command)
  2278                           	line	15
  2279                           	
  2280  0D85                     l4962:	
  2281                           ;LCD.c: 15: RB1 = 0;
  2282  0D85  1283               	bcf	status, 5	;RP0=0, select bank0
  2283  0D86  1303               	bcf	status, 6	;RP1=0, select bank0
  2284  0D87  1086               	bcf	(49/8),(49)&7
  2285                           	line	17
  2286                           	
  2287  0D88                     l4964:	
  2288                           ;LCD.c: 17: PORTB &= 0x0F;
  2289  0D88  300F               	movlw	(0Fh)
  2290  0D89  00F2               	movwf	(??_WriteCommandToLCD+0)+0
  2291  0D8A  0872               	movf	(??_WriteCommandToLCD+0)+0,w
  2292  0D8B  0586               	andwf	(6),f	;volatile
  2293                           	line	18
  2294                           ;LCD.c: 18: PORTB |= (Command&0xF0);
  2295  0D8C  0874               	movf	(WriteCommandToLCD@Command),w
  2296  0D8D  39F0               	andlw	0F0h
  2297  0D8E  00F2               	movwf	(??_WriteCommandToLCD+0)+0
  2298  0D8F  0872               	movf	(??_WriteCommandToLCD+0)+0,w
  2299  0D90  0486               	iorwf	(6),f	;volatile
  2300                           	line	19
  2301                           	
  2302  0D91                     l4966:	
  2303                           ;LCD.c: 19: ToggleEpinOfLCD();
  2304  0D91  120A  158A  24FA   	fcall	_ToggleEpinOfLCD
              120A  158A         
  2305                           	line	21
  2306                           	
  2307  0D96                     l4968:	
  2308                           ;LCD.c: 21: PORTB &= 0x0F;
  2309  0D96  300F               	movlw	(0Fh)
  2310  0D97  00F2               	movwf	(??_WriteCommandToLCD+0)+0
  2311  0D98  0872               	movf	(??_WriteCommandToLCD+0)+0,w
  2312  0D99  1283               	bcf	status, 5	;RP0=0, select bank0
  2313  0D9A  1303               	bcf	status, 6	;RP1=0, select bank0
  2314  0D9B  0586               	andwf	(6),f	;volatile
  2315                           	line	22
  2316                           	
  2317  0D9C                     l4970:	
  2318                           ;LCD.c: 22: PORTB |= ((Command<<4)&0xF0);
  2319  0D9C  0874               	movf	(WriteCommandToLCD@Command),w
  2320  0D9D  00F2               	movwf	(??_WriteCommandToLCD+0)+0
  2321  0D9E  3003               	movlw	(04h)-1
  2322  0D9F                     u3185:
  2323  0D9F  1003               	clrc
  2324  0DA0  0DF2               	rlf	(??_WriteCommandToLCD+0)+0,f
  2325  0DA1  3EFF               	addlw	-1
  2326  0DA2  1D03               	skipz
  2327  0DA3  2D9F               	goto	u3185
  2328  0DA4  1003               	clrc
  2329  0DA5  0D72               	rlf	(??_WriteCommandToLCD+0)+0,w
  2330  0DA6  39F0               	andlw	0F0h
  2331  0DA7  00F3               	movwf	(??_WriteCommandToLCD+1)+0
  2332  0DA8  0873               	movf	(??_WriteCommandToLCD+1)+0,w
  2333  0DA9  0486               	iorwf	(6),f	;volatile
  2334                           	line	23
  2335                           	
  2336  0DAA                     l4972:	
  2337                           ;LCD.c: 23: ToggleEpinOfLCD();
  2338  0DAA  120A  158A  24FA   	fcall	_ToggleEpinOfLCD
              120A  158A         
  2339                           	line	24
  2340                           	
  2341  0DAF                     l1956:	
  2342  0DAF  0008               	return
  2343                           	opt stack 0
  2344                           GLOBAL	__end_of_WriteCommandToLCD
  2345  0DB0                     	__end_of_WriteCommandToLCD:
  2346 ;; =============== function _WriteCommandToLCD ends ============
  2347                           
  2348                           	signat	_WriteCommandToLCD,4216
  2349                           	global	_WriteDataToLCD
  2350                           psect	text425,local,class=CODE,delta=2
  2351                           global __ptext425
  2352  0D58                     __ptext425:
  2353                           
  2354 ;; *************** function _WriteDataToLCD *****************
  2355 ;; Defined at:
  2356 ;;		line 28 in file "C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\LCD.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  LCDChar         1    wreg     unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  LCDChar         1    4[COMMON] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;		None               void
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0, pclath, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2370 ;;      Params:         0       0       0       0       0
  2371 ;;      Locals:         1       0       0       0       0
  2372 ;;      Temps:          2       0       0       0       0
  2373 ;;      Totals:         3       0       0       0       0
  2374 ;;Total ram usage:        3 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    1
  2377 ;; This function calls:
  2378 ;;		_ToggleEpinOfLCD
  2379 ;; This function is called by:
  2380 ;;		_main
  2381 ;;		_WriteStringToLCD
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           psect	text425
  2385                           	file	"C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\LCD.c"
  2386                           	line	28
  2387                           	global	__size_of_WriteDataToLCD
  2388  002C                     	__size_of_WriteDataToLCD	equ	__end_of_WriteDataToLCD-_WriteDataToLCD
  2389                           	
  2390  0D58                     _WriteDataToLCD:	
  2391                           	opt	stack 6
  2392                           ; Regs used in _WriteDataToLCD: [wreg+status,2+status,0+pclath+cstack]
  2393                           ;WriteDataToLCD@LCDChar stored from wreg
  2394  0D58  00F4               	movwf	(WriteDataToLCD@LCDChar)
  2395                           	line	29
  2396                           	
  2397  0D59                     l4950:	
  2398                           ;LCD.c: 29: RB1 = 1;
  2399  0D59  1283               	bcf	status, 5	;RP0=0, select bank0
  2400  0D5A  1303               	bcf	status, 6	;RP1=0, select bank0
  2401  0D5B  1486               	bsf	(49/8),(49)&7
  2402                           	line	31
  2403                           	
  2404  0D5C                     l4952:	
  2405                           ;LCD.c: 31: PORTB &= 0x0F;
  2406  0D5C  300F               	movlw	(0Fh)
  2407  0D5D  00F2               	movwf	(??_WriteDataToLCD+0)+0
  2408  0D5E  0872               	movf	(??_WriteDataToLCD+0)+0,w
  2409  0D5F  0586               	andwf	(6),f	;volatile
  2410                           	line	32
  2411                           ;LCD.c: 32: PORTB |= (LCDChar&0xF0);
  2412  0D60  0874               	movf	(WriteDataToLCD@LCDChar),w
  2413  0D61  39F0               	andlw	0F0h
  2414  0D62  00F2               	movwf	(??_WriteDataToLCD+0)+0
  2415  0D63  0872               	movf	(??_WriteDataToLCD+0)+0,w
  2416  0D64  0486               	iorwf	(6),f	;volatile
  2417                           	line	33
  2418                           	
  2419  0D65                     l4954:	
  2420                           ;LCD.c: 33: ToggleEpinOfLCD();
  2421  0D65  120A  158A  24FA   	fcall	_ToggleEpinOfLCD
              120A  158A         
  2422                           	line	35
  2423                           	
  2424  0D6A                     l4956:	
  2425                           ;LCD.c: 35: PORTB &= 0x0F;
  2426  0D6A  300F               	movlw	(0Fh)
  2427  0D6B  00F2               	movwf	(??_WriteDataToLCD+0)+0
  2428  0D6C  0872               	movf	(??_WriteDataToLCD+0)+0,w
  2429  0D6D  1283               	bcf	status, 5	;RP0=0, select bank0
  2430  0D6E  1303               	bcf	status, 6	;RP1=0, select bank0
  2431  0D6F  0586               	andwf	(6),f	;volatile
  2432                           	line	36
  2433                           	
  2434  0D70                     l4958:	
  2435                           ;LCD.c: 36: PORTB |= ((LCDChar<<4)&0xF0);
  2436  0D70  0874               	movf	(WriteDataToLCD@LCDChar),w
  2437  0D71  00F2               	movwf	(??_WriteDataToLCD+0)+0
  2438  0D72  3003               	movlw	(04h)-1
  2439  0D73                     u3175:
  2440  0D73  1003               	clrc
  2441  0D74  0DF2               	rlf	(??_WriteDataToLCD+0)+0,f
  2442  0D75  3EFF               	addlw	-1
  2443  0D76  1D03               	skipz
  2444  0D77  2D73               	goto	u3175
  2445  0D78  1003               	clrc
  2446  0D79  0D72               	rlf	(??_WriteDataToLCD+0)+0,w
  2447  0D7A  39F0               	andlw	0F0h
  2448  0D7B  00F3               	movwf	(??_WriteDataToLCD+1)+0
  2449  0D7C  0873               	movf	(??_WriteDataToLCD+1)+0,w
  2450  0D7D  0486               	iorwf	(6),f	;volatile
  2451                           	line	37
  2452                           	
  2453  0D7E                     l4960:	
  2454                           ;LCD.c: 37: ToggleEpinOfLCD();
  2455  0D7E  120A  158A  24FA   	fcall	_ToggleEpinOfLCD
              120A  158A         
  2456                           	line	38
  2457                           	
  2458  0D83                     l1959:	
  2459  0D83  0008               	return
  2460                           	opt stack 0
  2461                           GLOBAL	__end_of_WriteDataToLCD
  2462  0D84                     	__end_of_WriteDataToLCD:
  2463 ;; =============== function _WriteDataToLCD ends ============
  2464                           
  2465                           	signat	_WriteDataToLCD,4216
  2466                           	global	_map
  2467                           psect	text426,local,class=CODE,delta=2
  2468                           global __ptext426
  2469  0F57                     __ptext426:
  2470                           
  2471 ;; *************** function _map *****************
  2472 ;; Defined at:
  2473 ;;		line 69 in file "C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\Main.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  value           3   55[BANK0 ] unsigned char 
  2476 ;;  x_min           3   58[BANK0 ] float 
  2477 ;;  x_max           3   61[BANK0 ] float 
  2478 ;;  y_min           3   64[BANK0 ] float 
  2479 ;;  y_max           3   67[BANK0 ] float 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  3   55[BANK0 ] float 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2491 ;;      Params:         0      15       0       0       0
  2492 ;;      Locals:         0       3       0       0       0
  2493 ;;      Temps:          0       0       0       0       0
  2494 ;;      Totals:         0      18       0       0       0
  2495 ;;Total ram usage:       18 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    2
  2498 ;; This function calls:
  2499 ;;		___ftneg
  2500 ;;		___ftadd
  2501 ;;		___ftdiv
  2502 ;;		___ftmul
  2503 ;; This function is called by:
  2504 ;;		_main
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           psect	text426
  2508                           	file	"C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\Main.c"
  2509                           	line	69
  2510                           	global	__size_of_map
  2511  00A9                     	__size_of_map	equ	__end_of_map-_map
  2512                           	
  2513  0F57                     _map:	
  2514                           	opt	stack 5
  2515                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2516                           	line	70
  2517                           	
  2518  0F57                     l4946:	
  2519                           ;Main.c: 70: return (y_min + (((y_max - y_min)/(x_max - x_min)) * (value - x_min)));
  2520  0F57  1283               	bcf	status, 5	;RP0=0, select bank0
  2521  0F58  1303               	bcf	status, 6	;RP1=0, select bank0
  2522  0F59  085D               	movf	(map@x_max),w
  2523  0F5A  00AA               	movwf	(?___ftadd)
  2524  0F5B  085E               	movf	(map@x_max+1),w
  2525  0F5C  00AB               	movwf	(?___ftadd+1)
  2526  0F5D  085F               	movf	(map@x_max+2),w
  2527  0F5E  00AC               	movwf	(?___ftadd+2)
  2528  0F5F  085A               	movf	(map@x_min),w
  2529  0F60  00F0               	movwf	(?___ftneg)
  2530  0F61  085B               	movf	(map@x_min+1),w
  2531  0F62  00F1               	movwf	(?___ftneg+1)
  2532  0F63  085C               	movf	(map@x_min+2),w
  2533  0F64  00F2               	movwf	(?___ftneg+2)
  2534  0F65  120A  158A  24DE   	fcall	___ftneg
              120A  158A         
  2535  0F6A  0870               	movf	(0+(?___ftneg)),w
  2536  0F6B  1283               	bcf	status, 5	;RP0=0, select bank0
  2537  0F6C  1303               	bcf	status, 6	;RP1=0, select bank0
  2538  0F6D  00AD               	movwf	0+(?___ftadd)+03h
  2539  0F6E  0871               	movf	(1+(?___ftneg)),w
  2540  0F6F  00AE               	movwf	1+(?___ftadd)+03h
  2541  0F70  0872               	movf	(2+(?___ftneg)),w
  2542  0F71  00AF               	movwf	2+(?___ftadd)+03h
  2543  0F72  120A  118A  2256   	fcall	___ftadd
              120A  158A         
  2544  0F77  1283               	bcf	status, 5	;RP0=0, select bank0
  2545  0F78  1303               	bcf	status, 6	;RP1=0, select bank0
  2546  0F79  082A               	movf	(0+(?___ftadd)),w
  2547  0F7A  00B7               	movwf	(?___ftdiv)
  2548  0F7B  082B               	movf	(1+(?___ftadd)),w
  2549  0F7C  00B8               	movwf	(?___ftdiv+1)
  2550  0F7D  082C               	movf	(2+(?___ftadd)),w
  2551  0F7E  00B9               	movwf	(?___ftdiv+2)
  2552  0F7F  0863               	movf	(map@y_max),w
  2553  0F80  00AA               	movwf	(?___ftadd)
  2554  0F81  0864               	movf	(map@y_max+1),w
  2555  0F82  00AB               	movwf	(?___ftadd+1)
  2556  0F83  0865               	movf	(map@y_max+2),w
  2557  0F84  00AC               	movwf	(?___ftadd+2)
  2558  0F85  0860               	movf	(map@y_min),w
  2559  0F86  00F0               	movwf	(?___ftneg)
  2560  0F87  0861               	movf	(map@y_min+1),w
  2561  0F88  00F1               	movwf	(?___ftneg+1)
  2562  0F89  0862               	movf	(map@y_min+2),w
  2563  0F8A  00F2               	movwf	(?___ftneg+2)
  2564  0F8B  120A  158A  24DE   	fcall	___ftneg
              120A  158A         
  2565  0F90  0870               	movf	(0+(?___ftneg)),w
  2566  0F91  1283               	bcf	status, 5	;RP0=0, select bank0
  2567  0F92  1303               	bcf	status, 6	;RP1=0, select bank0
  2568  0F93  00AD               	movwf	0+(?___ftadd)+03h
  2569  0F94  0871               	movf	(1+(?___ftneg)),w
  2570  0F95  00AE               	movwf	1+(?___ftadd)+03h
  2571  0F96  0872               	movf	(2+(?___ftneg)),w
  2572  0F97  00AF               	movwf	2+(?___ftadd)+03h
  2573  0F98  120A  118A  2256   	fcall	___ftadd
              120A  158A         
  2574  0F9D  1283               	bcf	status, 5	;RP0=0, select bank0
  2575  0F9E  1303               	bcf	status, 6	;RP1=0, select bank0
  2576  0F9F  082A               	movf	(0+(?___ftadd)),w
  2577  0FA0  00BA               	movwf	0+(?___ftdiv)+03h
  2578  0FA1  082B               	movf	(1+(?___ftadd)),w
  2579  0FA2  00BB               	movwf	1+(?___ftdiv)+03h
  2580  0FA3  082C               	movf	(2+(?___ftadd)),w
  2581  0FA4  00BC               	movwf	2+(?___ftdiv)+03h
  2582  0FA5  120A  118A  20A0   	fcall	___ftdiv
              120A  158A         
  2583  0FAA  1283               	bcf	status, 5	;RP0=0, select bank0
  2584  0FAB  1303               	bcf	status, 6	;RP1=0, select bank0
  2585  0FAC  0837               	movf	(0+(?___ftdiv)),w
  2586  0FAD  00C7               	movwf	(?___ftmul)
  2587  0FAE  0838               	movf	(1+(?___ftdiv)),w
  2588  0FAF  00C8               	movwf	(?___ftmul+1)
  2589  0FB0  0839               	movf	(2+(?___ftdiv)),w
  2590  0FB1  00C9               	movwf	(?___ftmul+2)
  2591  0FB2  0857               	movf	(map@value),w
  2592  0FB3  00AA               	movwf	(?___ftadd)
  2593  0FB4  0858               	movf	(map@value+1),w
  2594  0FB5  00AB               	movwf	(?___ftadd+1)
  2595  0FB6  0859               	movf	(map@value+2),w
  2596  0FB7  00AC               	movwf	(?___ftadd+2)
  2597  0FB8  085A               	movf	(map@x_min),w
  2598  0FB9  00F0               	movwf	(?___ftneg)
  2599  0FBA  085B               	movf	(map@x_min+1),w
  2600  0FBB  00F1               	movwf	(?___ftneg+1)
  2601  0FBC  085C               	movf	(map@x_min+2),w
  2602  0FBD  00F2               	movwf	(?___ftneg+2)
  2603  0FBE  120A  158A  24DE   	fcall	___ftneg
              120A  158A         
  2604  0FC3  0870               	movf	(0+(?___ftneg)),w
  2605  0FC4  1283               	bcf	status, 5	;RP0=0, select bank0
  2606  0FC5  1303               	bcf	status, 6	;RP1=0, select bank0
  2607  0FC6  00AD               	movwf	0+(?___ftadd)+03h
  2608  0FC7  0871               	movf	(1+(?___ftneg)),w
  2609  0FC8  00AE               	movwf	1+(?___ftadd)+03h
  2610  0FC9  0872               	movf	(2+(?___ftneg)),w
  2611  0FCA  00AF               	movwf	2+(?___ftadd)+03h
  2612  0FCB  120A  118A  2256   	fcall	___ftadd
              120A  158A         
  2613  0FD0  1283               	bcf	status, 5	;RP0=0, select bank0
  2614  0FD1  1303               	bcf	status, 6	;RP1=0, select bank0
  2615  0FD2  082A               	movf	(0+(?___ftadd)),w
  2616  0FD3  00CA               	movwf	0+(?___ftmul)+03h
  2617  0FD4  082B               	movf	(1+(?___ftadd)),w
  2618  0FD5  00CB               	movwf	1+(?___ftmul)+03h
  2619  0FD6  082C               	movf	(2+(?___ftadd)),w
  2620  0FD7  00CC               	movwf	2+(?___ftmul)+03h
  2621  0FD8  120A  118A  2168   	fcall	___ftmul
              120A  158A         
  2622  0FDD  1283               	bcf	status, 5	;RP0=0, select bank0
  2623  0FDE  1303               	bcf	status, 6	;RP1=0, select bank0
  2624  0FDF  0847               	movf	(0+(?___ftmul)),w
  2625  0FE0  00E6               	movwf	(_map$3459)
  2626  0FE1  0848               	movf	(1+(?___ftmul)),w
  2627  0FE2  00E7               	movwf	(_map$3459+1)
  2628  0FE3  0849               	movf	(2+(?___ftmul)),w
  2629  0FE4  00E8               	movwf	(_map$3459+2)
  2630                           ;Main.c: 70: return (y_min + (((y_max - y_min)/(x_max - x_min)) * (value - x_min)));
  2631  0FE5  0860               	movf	(map@y_min),w
  2632  0FE6  00AA               	movwf	(?___ftadd)
  2633  0FE7  0861               	movf	(map@y_min+1),w
  2634  0FE8  00AB               	movwf	(?___ftadd+1)
  2635  0FE9  0862               	movf	(map@y_min+2),w
  2636  0FEA  00AC               	movwf	(?___ftadd+2)
  2637  0FEB  0866               	movf	(_map$3459),w
  2638  0FEC  00AD               	movwf	0+(?___ftadd)+03h
  2639  0FED  0867               	movf	(_map$3459+1),w
  2640  0FEE  00AE               	movwf	1+(?___ftadd)+03h
  2641  0FEF  0868               	movf	(_map$3459+2),w
  2642  0FF0  00AF               	movwf	2+(?___ftadd)+03h
  2643  0FF1  120A  118A  2256   	fcall	___ftadd
              120A  158A         
  2644  0FF6  1283               	bcf	status, 5	;RP0=0, select bank0
  2645  0FF7  1303               	bcf	status, 6	;RP1=0, select bank0
  2646  0FF8  082A               	movf	(0+(?___ftadd)),w
  2647  0FF9  00D7               	movwf	(?_map)
  2648  0FFA  082B               	movf	(1+(?___ftadd)),w
  2649  0FFB  00D8               	movwf	(?_map+1)
  2650  0FFC  082C               	movf	(2+(?___ftadd)),w
  2651  0FFD  00D9               	movwf	(?_map+2)
  2652  0FFE  2FFF               	goto	l661
  2653                           	
  2654  0FFF                     l4948:	
  2655                           	line	71
  2656                           	
  2657  0FFF                     l661:	
  2658  0FFF  0008               	return
  2659                           	opt stack 0
  2660                           GLOBAL	__end_of_map
  2661  1000                     	__end_of_map:
  2662 ;; =============== function _map ends ============
  2663                           
  2664                           	signat	_map,20603
  2665                           	global	___lwtoft
  2666                           psect	text427,local,class=CODE,delta=2
  2667                           global __ptext427
  2668  0D13                     __ptext427:
  2669                           
  2670 ;; *************** function ___lwtoft *****************
  2671 ;; Defined at:
  2672 ;;		line 29 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwtoft.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  c               2   10[BANK0 ] unsigned int 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  3   10[BANK0 ] float 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0, pclath, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2686 ;;      Params:         0       3       0       0       0
  2687 ;;      Locals:         0       0       0       0       0
  2688 ;;      Temps:          1       0       0       0       0
  2689 ;;      Totals:         1       3       0       0       0
  2690 ;;Total ram usage:        4 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    1
  2693 ;; This function calls:
  2694 ;;		___ftpack
  2695 ;; This function is called by:
  2696 ;;		_main
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           psect	text427
  2700                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwtoft.c"
  2701                           	line	29
  2702                           	global	__size_of___lwtoft
  2703  001B                     	__size_of___lwtoft	equ	__end_of___lwtoft-___lwtoft
  2704                           	
  2705  0D13                     ___lwtoft:	
  2706                           	opt	stack 6
  2707                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2708                           	line	30
  2709                           	
  2710  0D13                     l4942:	
  2711  0D13  1283               	bcf	status, 5	;RP0=0, select bank0
  2712  0D14  1303               	bcf	status, 6	;RP1=0, select bank0
  2713  0D15  082A               	movf	(___lwtoft@c),w
  2714  0D16  00F0               	movwf	(?___ftpack)
  2715  0D17  082B               	movf	(___lwtoft@c+1),w
  2716  0D18  00F1               	movwf	(?___ftpack+1)
  2717  0D19  01F2               	clrf	(?___ftpack+2)
  2718  0D1A  308E               	movlw	(08Eh)
  2719  0D1B  00FC               	movwf	(??___lwtoft+0)+0
  2720  0D1C  087C               	movf	(??___lwtoft+0)+0,w
  2721  0D1D  00F3               	movwf	0+(?___ftpack)+03h
  2722  0D1E  01F4               	clrf	0+(?___ftpack)+04h
  2723  0D1F  120A  158A  2636   	fcall	___ftpack
              120A  158A         
  2724  0D24  0870               	movf	(0+(?___ftpack)),w
  2725  0D25  1283               	bcf	status, 5	;RP0=0, select bank0
  2726  0D26  1303               	bcf	status, 6	;RP1=0, select bank0
  2727  0D27  00AA               	movwf	(?___lwtoft)
  2728  0D28  0871               	movf	(1+(?___ftpack)),w
  2729  0D29  00AB               	movwf	(?___lwtoft+1)
  2730  0D2A  0872               	movf	(2+(?___ftpack)),w
  2731  0D2B  00AC               	movwf	(?___lwtoft+2)
  2732  0D2C  2D2D               	goto	l2837
  2733                           	
  2734  0D2D                     l4944:	
  2735                           	line	31
  2736                           	
  2737  0D2D                     l2837:	
  2738  0D2D  0008               	return
  2739                           	opt stack 0
  2740                           GLOBAL	__end_of___lwtoft
  2741  0D2E                     	__end_of___lwtoft:
  2742 ;; =============== function ___lwtoft ends ============
  2743                           
  2744                           	signat	___lwtoft,4219
  2745                           	global	___ftmul
  2746                           psect	text428,local,class=CODE,delta=2
  2747                           global __ptext428
  2748  0168                     __ptext428:
  2749                           
  2750 ;; *************** function ___ftmul *****************
  2751 ;; Defined at:
  2752 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  f1              3   39[BANK0 ] float 
  2755 ;;  f2              3   42[BANK0 ] float 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  f3_as_produc    3   50[BANK0 ] unsigned um
  2758 ;;  sign            1   54[BANK0 ] unsigned char 
  2759 ;;  cntr            1   53[BANK0 ] unsigned char 
  2760 ;;  exp             1   49[BANK0 ] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  3   39[BANK0 ] float 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, pclath, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2770 ;;      Params:         0       6       0       0       0
  2771 ;;      Locals:         0       6       0       0       0
  2772 ;;      Temps:          0       4       0       0       0
  2773 ;;      Totals:         0      16       0       0       0
  2774 ;;Total ram usage:       16 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    1
  2777 ;; This function calls:
  2778 ;;		___ftpack
  2779 ;; This function is called by:
  2780 ;;		_map
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           psect	text428
  2784                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  2785                           	line	52
  2786                           	global	__size_of___ftmul
  2787  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  2788                           	
  2789  0168                     ___ftmul:	
  2790                           	opt	stack 5
  2791                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2792                           	line	56
  2793                           	
  2794  0168                     l4892:	
  2795  0168  1283               	bcf	status, 5	;RP0=0, select bank0
  2796  0169  1303               	bcf	status, 6	;RP1=0, select bank0
  2797  016A  0847               	movf	(___ftmul@f1),w
  2798  016B  00CD               	movwf	((??___ftmul+0)+0)
  2799  016C  0848               	movf	(___ftmul@f1+1),w
  2800  016D  00CE               	movwf	((??___ftmul+0)+0+1)
  2801  016E  0849               	movf	(___ftmul@f1+2),w
  2802  016F  00CF               	movwf	((??___ftmul+0)+0+2)
  2803  0170  1003               	clrc
  2804  0171  0D4E               	rlf	(??___ftmul+0)+1,w
  2805  0172  0D4F               	rlf	(??___ftmul+0)+2,w
  2806  0173  00D0               	movwf	(??___ftmul+3)+0
  2807  0174  0850               	movf	(??___ftmul+3)+0,w
  2808  0175  00D1               	movwf	(___ftmul@exp)
  2809  0176  08D1               	movf	((___ftmul@exp)),f
  2810  0177  1D03               	skipz
  2811  0178  297A               	goto	u3031
  2812  0179  297B               	goto	u3030
  2813  017A                     u3031:
  2814  017A  2983               	goto	l4898
  2815  017B                     u3030:
  2816                           	line	57
  2817                           	
  2818  017B                     l4894:	
  2819  017B  3000               	movlw	0x0
  2820  017C  00C7               	movwf	(?___ftmul)
  2821  017D  3000               	movlw	0x0
  2822  017E  00C8               	movwf	(?___ftmul+1)
  2823  017F  3000               	movlw	0x0
  2824  0180  00C9               	movwf	(?___ftmul+2)
  2825  0181  2A55               	goto	l2713
  2826                           	
  2827  0182                     l4896:	
  2828  0182  2A55               	goto	l2713
  2829                           	
  2830  0183                     l2712:	
  2831                           	line	58
  2832                           	
  2833  0183                     l4898:	
  2834  0183  084A               	movf	(___ftmul@f2),w
  2835  0184  00CD               	movwf	((??___ftmul+0)+0)
  2836  0185  084B               	movf	(___ftmul@f2+1),w
  2837  0186  00CE               	movwf	((??___ftmul+0)+0+1)
  2838  0187  084C               	movf	(___ftmul@f2+2),w
  2839  0188  00CF               	movwf	((??___ftmul+0)+0+2)
  2840  0189  1003               	clrc
  2841  018A  0D4E               	rlf	(??___ftmul+0)+1,w
  2842  018B  0D4F               	rlf	(??___ftmul+0)+2,w
  2843  018C  00D0               	movwf	(??___ftmul+3)+0
  2844  018D  0850               	movf	(??___ftmul+3)+0,w
  2845  018E  00D6               	movwf	(___ftmul@sign)
  2846  018F  08D6               	movf	((___ftmul@sign)),f
  2847  0190  1D03               	skipz
  2848  0191  2993               	goto	u3041
  2849  0192  2994               	goto	u3040
  2850  0193                     u3041:
  2851  0193  299C               	goto	l4904
  2852  0194                     u3040:
  2853                           	line	59
  2854                           	
  2855  0194                     l4900:	
  2856  0194  3000               	movlw	0x0
  2857  0195  00C7               	movwf	(?___ftmul)
  2858  0196  3000               	movlw	0x0
  2859  0197  00C8               	movwf	(?___ftmul+1)
  2860  0198  3000               	movlw	0x0
  2861  0199  00C9               	movwf	(?___ftmul+2)
  2862  019A  2A55               	goto	l2713
  2863                           	
  2864  019B                     l4902:	
  2865  019B  2A55               	goto	l2713
  2866                           	
  2867  019C                     l2714:	
  2868                           	line	60
  2869                           	
  2870  019C                     l4904:	
  2871  019C  0856               	movf	(___ftmul@sign),w
  2872  019D  3E7B               	addlw	07Bh
  2873  019E  00CD               	movwf	(??___ftmul+0)+0
  2874  019F  084D               	movf	(??___ftmul+0)+0,w
  2875  01A0  07D1               	addwf	(___ftmul@exp),f
  2876                           	line	61
  2877  01A1  0847               	movf	(___ftmul@f1),w
  2878  01A2  00CD               	movwf	((??___ftmul+0)+0)
  2879  01A3  0848               	movf	(___ftmul@f1+1),w
  2880  01A4  00CE               	movwf	((??___ftmul+0)+0+1)
  2881  01A5  0849               	movf	(___ftmul@f1+2),w
  2882  01A6  00CF               	movwf	((??___ftmul+0)+0+2)
  2883  01A7  3010               	movlw	010h
  2884  01A8                     u3055:
  2885  01A8  1003               	clrc
  2886  01A9  0CCF               	rrf	(??___ftmul+0)+2,f
  2887  01AA  0CCE               	rrf	(??___ftmul+0)+1,f
  2888  01AB  0CCD               	rrf	(??___ftmul+0)+0,f
  2889  01AC                     u3050:
  2890  01AC  3EFF               	addlw	-1
  2891  01AD  1D03               	skipz
  2892  01AE  29A8               	goto	u3055
  2893  01AF  084D               	movf	0+(??___ftmul+0)+0,w
  2894  01B0  00D0               	movwf	(??___ftmul+3)+0
  2895  01B1  0850               	movf	(??___ftmul+3)+0,w
  2896  01B2  00D6               	movwf	(___ftmul@sign)
  2897                           	line	62
  2898  01B3  084A               	movf	(___ftmul@f2),w
  2899  01B4  00CD               	movwf	((??___ftmul+0)+0)
  2900  01B5  084B               	movf	(___ftmul@f2+1),w
  2901  01B6  00CE               	movwf	((??___ftmul+0)+0+1)
  2902  01B7  084C               	movf	(___ftmul@f2+2),w
  2903  01B8  00CF               	movwf	((??___ftmul+0)+0+2)
  2904  01B9  3010               	movlw	010h
  2905  01BA                     u3065:
  2906  01BA  1003               	clrc
  2907  01BB  0CCF               	rrf	(??___ftmul+0)+2,f
  2908  01BC  0CCE               	rrf	(??___ftmul+0)+1,f
  2909  01BD  0CCD               	rrf	(??___ftmul+0)+0,f
  2910  01BE                     u3060:
  2911  01BE  3EFF               	addlw	-1
  2912  01BF  1D03               	skipz
  2913  01C0  29BA               	goto	u3065
  2914  01C1  084D               	movf	0+(??___ftmul+0)+0,w
  2915  01C2  00D0               	movwf	(??___ftmul+3)+0
  2916  01C3  0850               	movf	(??___ftmul+3)+0,w
  2917  01C4  06D6               	xorwf	(___ftmul@sign),f
  2918                           	line	63
  2919  01C5  3080               	movlw	(080h)
  2920  01C6  00CD               	movwf	(??___ftmul+0)+0
  2921  01C7  084D               	movf	(??___ftmul+0)+0,w
  2922  01C8  05D6               	andwf	(___ftmul@sign),f
  2923                           	line	64
  2924                           	
  2925  01C9                     l4906:	
  2926  01C9  17C8               	bsf	(___ftmul@f1)+(15/8),(15)&7
  2927                           	line	66
  2928                           	
  2929  01CA                     l4908:	
  2930  01CA  17CB               	bsf	(___ftmul@f2)+(15/8),(15)&7
  2931                           	line	67
  2932                           	
  2933  01CB                     l4910:	
  2934  01CB  30FF               	movlw	0FFh
  2935  01CC  05CA               	andwf	(___ftmul@f2),f
  2936  01CD  30FF               	movlw	0FFh
  2937  01CE  05CB               	andwf	(___ftmul@f2+1),f
  2938  01CF  3000               	movlw	0
  2939  01D0  05CC               	andwf	(___ftmul@f2+2),f
  2940                           	line	68
  2941                           	
  2942  01D1                     l4912:	
  2943  01D1  3000               	movlw	0
  2944  01D2  00D2               	movwf	(___ftmul@f3_as_product)
  2945  01D3  3000               	movlw	0
  2946  01D4  00D3               	movwf	(___ftmul@f3_as_product+1)
  2947  01D5  3000               	movlw	0
  2948  01D6  00D4               	movwf	(___ftmul@f3_as_product+2)
  2949                           	line	69
  2950                           	
  2951  01D7                     l4914:	
  2952  01D7  3007               	movlw	(07h)
  2953  01D8  00CD               	movwf	(??___ftmul+0)+0
  2954  01D9  084D               	movf	(??___ftmul+0)+0,w
  2955  01DA  00D5               	movwf	(___ftmul@cntr)
  2956  01DB  29DC               	goto	l4916
  2957                           	line	70
  2958                           	
  2959  01DC                     l2715:	
  2960                           	line	71
  2961                           	
  2962  01DC                     l4916:	
  2963  01DC  1C47               	btfss	(___ftmul@f1),(0)&7
  2964  01DD  29DF               	goto	u3071
  2965  01DE  29E0               	goto	u3070
  2966  01DF                     u3071:
  2967  01DF  29F1               	goto	l4920
  2968  01E0                     u3070:
  2969                           	line	72
  2970                           	
  2971  01E0                     l4918:	
  2972  01E0  084A               	movf	(___ftmul@f2),w
  2973  01E1  07D2               	addwf	(___ftmul@f3_as_product),f
  2974  01E2  084B               	movf	(___ftmul@f2+1),w
  2975  01E3  1103               	clrz
  2976  01E4  1803               	skipnc
  2977  01E5  0A4B               	incf	(___ftmul@f2+1),w
  2978  01E6  1903               	skipnz
  2979  01E7  29E9               	goto	u3081
  2980  01E8  07D3               	addwf	(___ftmul@f3_as_product+1),f
  2981  01E9                     u3081:
  2982  01E9  084C               	movf	(___ftmul@f2+2),w
  2983  01EA  1103               	clrz
  2984  01EB  1803               	skipnc
  2985  01EC  0A4C               	incf	(___ftmul@f2+2),w
  2986  01ED  1903               	skipnz
  2987  01EE  29F0               	goto	u3082
  2988  01EF  07D4               	addwf	(___ftmul@f3_as_product+2),f
  2989  01F0                     u3082:
  2990                           
  2991  01F0  29F1               	goto	l4920
  2992                           	
  2993  01F1                     l2716:	
  2994                           	line	73
  2995                           	
  2996  01F1                     l4920:	
  2997  01F1  3001               	movlw	01h
  2998  01F2                     u3095:
  2999  01F2  1003               	clrc
  3000  01F3  0CC9               	rrf	(___ftmul@f1+2),f
  3001  01F4  0CC8               	rrf	(___ftmul@f1+1),f
  3002  01F5  0CC7               	rrf	(___ftmul@f1),f
  3003  01F6  3EFF               	addlw	-1
  3004  01F7  1D03               	skipz
  3005  01F8  29F2               	goto	u3095
  3006                           
  3007                           	line	74
  3008                           	
  3009  01F9                     l4922:	
  3010  01F9  3001               	movlw	01h
  3011  01FA                     u3105:
  3012  01FA  1003               	clrc
  3013  01FB  0DCA               	rlf	(___ftmul@f2),f
  3014  01FC  0DCB               	rlf	(___ftmul@f2+1),f
  3015  01FD  0DCC               	rlf	(___ftmul@f2+2),f
  3016  01FE  3EFF               	addlw	-1
  3017  01FF  1D03               	skipz
  3018  0200  29FA               	goto	u3105
  3019                           	line	75
  3020                           	
  3021  0201                     l4924:	
  3022  0201  3001               	movlw	low(01h)
  3023  0202  02D5               	subwf	(___ftmul@cntr),f
  3024  0203  1D03               	btfss	status,2
  3025  0204  2A06               	goto	u3111
  3026  0205  2A07               	goto	u3110
  3027  0206                     u3111:
  3028  0206  29DC               	goto	l4916
  3029  0207                     u3110:
  3030  0207  2A08               	goto	l4926
  3031                           	
  3032  0208                     l2717:	
  3033                           	line	76
  3034                           	
  3035  0208                     l4926:	
  3036  0208  3009               	movlw	(09h)
  3037  0209  00CD               	movwf	(??___ftmul+0)+0
  3038  020A  084D               	movf	(??___ftmul+0)+0,w
  3039  020B  00D5               	movwf	(___ftmul@cntr)
  3040  020C  2A0D               	goto	l4928
  3041                           	line	77
  3042                           	
  3043  020D                     l2718:	
  3044                           	line	78
  3045                           	
  3046  020D                     l4928:	
  3047  020D  1C47               	btfss	(___ftmul@f1),(0)&7
  3048  020E  2A10               	goto	u3121
  3049  020F  2A11               	goto	u3120
  3050  0210                     u3121:
  3051  0210  2A22               	goto	l4932
  3052  0211                     u3120:
  3053                           	line	79
  3054                           	
  3055  0211                     l4930:	
  3056  0211  084A               	movf	(___ftmul@f2),w
  3057  0212  07D2               	addwf	(___ftmul@f3_as_product),f
  3058  0213  084B               	movf	(___ftmul@f2+1),w
  3059  0214  1103               	clrz
  3060  0215  1803               	skipnc
  3061  0216  0A4B               	incf	(___ftmul@f2+1),w
  3062  0217  1903               	skipnz
  3063  0218  2A1A               	goto	u3131
  3064  0219  07D3               	addwf	(___ftmul@f3_as_product+1),f
  3065  021A                     u3131:
  3066  021A  084C               	movf	(___ftmul@f2+2),w
  3067  021B  1103               	clrz
  3068  021C  1803               	skipnc
  3069  021D  0A4C               	incf	(___ftmul@f2+2),w
  3070  021E  1903               	skipnz
  3071  021F  2A21               	goto	u3132
  3072  0220  07D4               	addwf	(___ftmul@f3_as_product+2),f
  3073  0221                     u3132:
  3074                           
  3075  0221  2A22               	goto	l4932
  3076                           	
  3077  0222                     l2719:	
  3078                           	line	80
  3079                           	
  3080  0222                     l4932:	
  3081  0222  3001               	movlw	01h
  3082  0223                     u3145:
  3083  0223  1003               	clrc
  3084  0224  0CC9               	rrf	(___ftmul@f1+2),f
  3085  0225  0CC8               	rrf	(___ftmul@f1+1),f
  3086  0226  0CC7               	rrf	(___ftmul@f1),f
  3087  0227  3EFF               	addlw	-1
  3088  0228  1D03               	skipz
  3089  0229  2A23               	goto	u3145
  3090                           
  3091                           	line	81
  3092                           	
  3093  022A                     l4934:	
  3094  022A  3001               	movlw	01h
  3095  022B                     u3155:
  3096  022B  1003               	clrc
  3097  022C  0CD4               	rrf	(___ftmul@f3_as_product+2),f
  3098  022D  0CD3               	rrf	(___ftmul@f3_as_product+1),f
  3099  022E  0CD2               	rrf	(___ftmul@f3_as_product),f
  3100  022F  3EFF               	addlw	-1
  3101  0230  1D03               	skipz
  3102  0231  2A2B               	goto	u3155
  3103                           
  3104                           	line	82
  3105                           	
  3106  0232                     l4936:	
  3107  0232  3001               	movlw	low(01h)
  3108  0233  02D5               	subwf	(___ftmul@cntr),f
  3109  0234  1D03               	btfss	status,2
  3110  0235  2A37               	goto	u3161
  3111  0236  2A38               	goto	u3160
  3112  0237                     u3161:
  3113  0237  2A0D               	goto	l4928
  3114  0238                     u3160:
  3115  0238  2A39               	goto	l4938
  3116                           	
  3117  0239                     l2720:	
  3118                           	line	83
  3119                           	
  3120  0239                     l4938:	
  3121  0239  0852               	movf	(___ftmul@f3_as_product),w
  3122  023A  00F0               	movwf	(?___ftpack)
  3123  023B  0853               	movf	(___ftmul@f3_as_product+1),w
  3124  023C  00F1               	movwf	(?___ftpack+1)
  3125  023D  0854               	movf	(___ftmul@f3_as_product+2),w
  3126  023E  00F2               	movwf	(?___ftpack+2)
  3127  023F  0851               	movf	(___ftmul@exp),w
  3128  0240  00CD               	movwf	(??___ftmul+0)+0
  3129  0241  084D               	movf	(??___ftmul+0)+0,w
  3130  0242  00F3               	movwf	0+(?___ftpack)+03h
  3131  0243  0856               	movf	(___ftmul@sign),w
  3132  0244  00CE               	movwf	(??___ftmul+1)+0
  3133  0245  084E               	movf	(??___ftmul+1)+0,w
  3134  0246  00F4               	movwf	0+(?___ftpack)+04h
  3135  0247  120A  158A  2636   	fcall	___ftpack
              120A  118A         
  3136  024C  0870               	movf	(0+(?___ftpack)),w
  3137  024D  1283               	bcf	status, 5	;RP0=0, select bank0
  3138  024E  1303               	bcf	status, 6	;RP1=0, select bank0
  3139  024F  00C7               	movwf	(?___ftmul)
  3140  0250  0871               	movf	(1+(?___ftpack)),w
  3141  0251  00C8               	movwf	(?___ftmul+1)
  3142  0252  0872               	movf	(2+(?___ftpack)),w
  3143  0253  00C9               	movwf	(?___ftmul+2)
  3144  0254  2A55               	goto	l2713
  3145                           	
  3146  0255                     l4940:	
  3147                           	line	84
  3148                           	
  3149  0255                     l2713:	
  3150  0255  0008               	return
  3151                           	opt stack 0
  3152                           GLOBAL	__end_of___ftmul
  3153  0256                     	__end_of___ftmul:
  3154 ;; =============== function ___ftmul ends ============
  3155                           
  3156                           	signat	___ftmul,8315
  3157                           	global	___ftdiv
  3158                           psect	text429,local,class=CODE,delta=2
  3159                           global __ptext429
  3160  00A0                     __ptext429:
  3161                           
  3162 ;; *************** function ___ftdiv *****************
  3163 ;; Defined at:
  3164 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  f2              3   23[BANK0 ] float 
  3167 ;;  f1              3   26[BANK0 ] float 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  f3              3   34[BANK0 ] float 
  3170 ;;  sign            1   38[BANK0 ] unsigned char 
  3171 ;;  exp             1   37[BANK0 ] unsigned char 
  3172 ;;  cntr            1   33[BANK0 ] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  3   23[BANK0 ] float 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0, pclath, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3182 ;;      Params:         0       6       0       0       0
  3183 ;;      Locals:         0       6       0       0       0
  3184 ;;      Temps:          0       4       0       0       0
  3185 ;;      Totals:         0      16       0       0       0
  3186 ;;Total ram usage:       16 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    1
  3189 ;; This function calls:
  3190 ;;		___ftpack
  3191 ;; This function is called by:
  3192 ;;		_map
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           psect	text429
  3196                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  3197                           	line	50
  3198                           	global	__size_of___ftdiv
  3199  00C8                     	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
  3200                           	
  3201  00A0                     ___ftdiv:	
  3202                           	opt	stack 5
  3203                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3204                           	line	55
  3205                           	
  3206  00A0                     l4850:	
  3207  00A0  1283               	bcf	status, 5	;RP0=0, select bank0
  3208  00A1  1303               	bcf	status, 6	;RP1=0, select bank0
  3209  00A2  083A               	movf	(___ftdiv@f1),w
  3210  00A3  00BD               	movwf	((??___ftdiv+0)+0)
  3211  00A4  083B               	movf	(___ftdiv@f1+1),w
  3212  00A5  00BE               	movwf	((??___ftdiv+0)+0+1)
  3213  00A6  083C               	movf	(___ftdiv@f1+2),w
  3214  00A7  00BF               	movwf	((??___ftdiv+0)+0+2)
  3215  00A8  1003               	clrc
  3216  00A9  0D3E               	rlf	(??___ftdiv+0)+1,w
  3217  00AA  0D3F               	rlf	(??___ftdiv+0)+2,w
  3218  00AB  00C0               	movwf	(??___ftdiv+3)+0
  3219  00AC  0840               	movf	(??___ftdiv+3)+0,w
  3220  00AD  00C5               	movwf	(___ftdiv@exp)
  3221  00AE  08C5               	movf	((___ftdiv@exp)),f
  3222  00AF  1D03               	skipz
  3223  00B0  28B2               	goto	u2951
  3224  00B1  28B3               	goto	u2950
  3225  00B2                     u2951:
  3226  00B2  28BB               	goto	l4856
  3227  00B3                     u2950:
  3228                           	line	56
  3229                           	
  3230  00B3                     l4852:	
  3231  00B3  3000               	movlw	0x0
  3232  00B4  00B7               	movwf	(?___ftdiv)
  3233  00B5  3000               	movlw	0x0
  3234  00B6  00B8               	movwf	(?___ftdiv+1)
  3235  00B7  3000               	movlw	0x0
  3236  00B8  00B9               	movwf	(?___ftdiv+2)
  3237  00B9  2967               	goto	l2703
  3238                           	
  3239  00BA                     l4854:	
  3240  00BA  2967               	goto	l2703
  3241                           	
  3242  00BB                     l2702:	
  3243                           	line	57
  3244                           	
  3245  00BB                     l4856:	
  3246  00BB  0837               	movf	(___ftdiv@f2),w
  3247  00BC  00BD               	movwf	((??___ftdiv+0)+0)
  3248  00BD  0838               	movf	(___ftdiv@f2+1),w
  3249  00BE  00BE               	movwf	((??___ftdiv+0)+0+1)
  3250  00BF  0839               	movf	(___ftdiv@f2+2),w
  3251  00C0  00BF               	movwf	((??___ftdiv+0)+0+2)
  3252  00C1  1003               	clrc
  3253  00C2  0D3E               	rlf	(??___ftdiv+0)+1,w
  3254  00C3  0D3F               	rlf	(??___ftdiv+0)+2,w
  3255  00C4  00C0               	movwf	(??___ftdiv+3)+0
  3256  00C5  0840               	movf	(??___ftdiv+3)+0,w
  3257  00C6  00C6               	movwf	(___ftdiv@sign)
  3258  00C7  08C6               	movf	((___ftdiv@sign)),f
  3259  00C8  1D03               	skipz
  3260  00C9  28CB               	goto	u2961
  3261  00CA  28CC               	goto	u2960
  3262  00CB                     u2961:
  3263  00CB  28D4               	goto	l4862
  3264  00CC                     u2960:
  3265                           	line	58
  3266                           	
  3267  00CC                     l4858:	
  3268  00CC  3000               	movlw	0x0
  3269  00CD  00B7               	movwf	(?___ftdiv)
  3270  00CE  3000               	movlw	0x0
  3271  00CF  00B8               	movwf	(?___ftdiv+1)
  3272  00D0  3000               	movlw	0x0
  3273  00D1  00B9               	movwf	(?___ftdiv+2)
  3274  00D2  2967               	goto	l2703
  3275                           	
  3276  00D3                     l4860:	
  3277  00D3  2967               	goto	l2703
  3278                           	
  3279  00D4                     l2704:	
  3280                           	line	59
  3281                           	
  3282  00D4                     l4862:	
  3283  00D4  3000               	movlw	0
  3284  00D5  00C2               	movwf	(___ftdiv@f3)
  3285  00D6  3000               	movlw	0
  3286  00D7  00C3               	movwf	(___ftdiv@f3+1)
  3287  00D8  3000               	movlw	0
  3288  00D9  00C4               	movwf	(___ftdiv@f3+2)
  3289                           	line	60
  3290                           	
  3291  00DA                     l4864:	
  3292  00DA  3089               	movlw	(089h)
  3293  00DB  0746               	addwf	(___ftdiv@sign),w
  3294  00DC  00BD               	movwf	(??___ftdiv+0)+0
  3295  00DD  083D               	movf	0+(??___ftdiv+0)+0,w
  3296  00DE  02C5               	subwf	(___ftdiv@exp),f
  3297                           	line	61
  3298                           	
  3299  00DF                     l4866:	
  3300  00DF  083A               	movf	(___ftdiv@f1),w
  3301  00E0  00BD               	movwf	((??___ftdiv+0)+0)
  3302  00E1  083B               	movf	(___ftdiv@f1+1),w
  3303  00E2  00BE               	movwf	((??___ftdiv+0)+0+1)
  3304  00E3  083C               	movf	(___ftdiv@f1+2),w
  3305  00E4  00BF               	movwf	((??___ftdiv+0)+0+2)
  3306  00E5  3010               	movlw	010h
  3307  00E6                     u2975:
  3308  00E6  1003               	clrc
  3309  00E7  0CBF               	rrf	(??___ftdiv+0)+2,f
  3310  00E8  0CBE               	rrf	(??___ftdiv+0)+1,f
  3311  00E9  0CBD               	rrf	(??___ftdiv+0)+0,f
  3312  00EA                     u2970:
  3313  00EA  3EFF               	addlw	-1
  3314  00EB  1D03               	skipz
  3315  00EC  28E6               	goto	u2975
  3316  00ED  083D               	movf	0+(??___ftdiv+0)+0,w
  3317  00EE  00C0               	movwf	(??___ftdiv+3)+0
  3318  00EF  0840               	movf	(??___ftdiv+3)+0,w
  3319  00F0  00C6               	movwf	(___ftdiv@sign)
  3320                           	line	62
  3321                           	
  3322  00F1                     l4868:	
  3323  00F1  0837               	movf	(___ftdiv@f2),w
  3324  00F2  00BD               	movwf	((??___ftdiv+0)+0)
  3325  00F3  0838               	movf	(___ftdiv@f2+1),w
  3326  00F4  00BE               	movwf	((??___ftdiv+0)+0+1)
  3327  00F5  0839               	movf	(___ftdiv@f2+2),w
  3328  00F6  00BF               	movwf	((??___ftdiv+0)+0+2)
  3329  00F7  3010               	movlw	010h
  3330  00F8                     u2985:
  3331  00F8  1003               	clrc
  3332  00F9  0CBF               	rrf	(??___ftdiv+0)+2,f
  3333  00FA  0CBE               	rrf	(??___ftdiv+0)+1,f
  3334  00FB  0CBD               	rrf	(??___ftdiv+0)+0,f
  3335  00FC                     u2980:
  3336  00FC  3EFF               	addlw	-1
  3337  00FD  1D03               	skipz
  3338  00FE  28F8               	goto	u2985
  3339  00FF  083D               	movf	0+(??___ftdiv+0)+0,w
  3340  0100  00C0               	movwf	(??___ftdiv+3)+0
  3341  0101  0840               	movf	(??___ftdiv+3)+0,w
  3342  0102  06C6               	xorwf	(___ftdiv@sign),f
  3343                           	line	63
  3344                           	
  3345  0103                     l4870:	
  3346  0103  3080               	movlw	(080h)
  3347  0104  00BD               	movwf	(??___ftdiv+0)+0
  3348  0105  083D               	movf	(??___ftdiv+0)+0,w
  3349  0106  05C6               	andwf	(___ftdiv@sign),f
  3350                           	line	64
  3351                           	
  3352  0107                     l4872:	
  3353  0107  17BB               	bsf	(___ftdiv@f1)+(15/8),(15)&7
  3354                           	line	65
  3355  0108  30FF               	movlw	0FFh
  3356  0109  05BA               	andwf	(___ftdiv@f1),f
  3357  010A  30FF               	movlw	0FFh
  3358  010B  05BB               	andwf	(___ftdiv@f1+1),f
  3359  010C  3000               	movlw	0
  3360  010D  05BC               	andwf	(___ftdiv@f1+2),f
  3361                           	line	66
  3362                           	
  3363  010E                     l4874:	
  3364  010E  17B8               	bsf	(___ftdiv@f2)+(15/8),(15)&7
  3365                           	line	67
  3366  010F  30FF               	movlw	0FFh
  3367  0110  05B7               	andwf	(___ftdiv@f2),f
  3368  0111  30FF               	movlw	0FFh
  3369  0112  05B8               	andwf	(___ftdiv@f2+1),f
  3370  0113  3000               	movlw	0
  3371  0114  05B9               	andwf	(___ftdiv@f2+2),f
  3372                           	line	68
  3373  0115  3018               	movlw	(018h)
  3374  0116  00BD               	movwf	(??___ftdiv+0)+0
  3375  0117  083D               	movf	(??___ftdiv+0)+0,w
  3376  0118  00C1               	movwf	(___ftdiv@cntr)
  3377  0119  291A               	goto	l4876
  3378                           	line	69
  3379                           	
  3380  011A                     l2705:	
  3381                           	line	70
  3382                           	
  3383  011A                     l4876:	
  3384  011A  3001               	movlw	01h
  3385  011B                     u2995:
  3386  011B  1003               	clrc
  3387  011C  0DC2               	rlf	(___ftdiv@f3),f
  3388  011D  0DC3               	rlf	(___ftdiv@f3+1),f
  3389  011E  0DC4               	rlf	(___ftdiv@f3+2),f
  3390  011F  3EFF               	addlw	-1
  3391  0120  1D03               	skipz
  3392  0121  291B               	goto	u2995
  3393                           	line	71
  3394                           	
  3395  0122                     l4878:	
  3396  0122  0839               	movf	(___ftdiv@f2+2),w
  3397  0123  023C               	subwf	(___ftdiv@f1+2),w
  3398  0124  1D03               	skipz
  3399  0125  292C               	goto	u3005
  3400  0126  0838               	movf	(___ftdiv@f2+1),w
  3401  0127  023B               	subwf	(___ftdiv@f1+1),w
  3402  0128  1D03               	skipz
  3403  0129  292C               	goto	u3005
  3404  012A  0837               	movf	(___ftdiv@f2),w
  3405  012B  023A               	subwf	(___ftdiv@f1),w
  3406  012C                     u3005:
  3407  012C  1C03               	skipc
  3408  012D  292F               	goto	u3001
  3409  012E  2930               	goto	u3000
  3410  012F                     u3001:
  3411  012F  293C               	goto	l4884
  3412  0130                     u3000:
  3413                           	line	72
  3414                           	
  3415  0130                     l4880:	
  3416  0130  0837               	movf	(___ftdiv@f2),w
  3417  0131  02BA               	subwf	(___ftdiv@f1),f
  3418  0132  0838               	movf	(___ftdiv@f2+1),w
  3419  0133  1C03               	skipc
  3420  0134  0F38               	incfsz	(___ftdiv@f2+1),w
  3421  0135  02BB               	subwf	(___ftdiv@f1+1),f
  3422  0136  0839               	movf	(___ftdiv@f2+2),w
  3423  0137  1C03               	skipc
  3424  0138  0A39               	incf	(___ftdiv@f2+2),w
  3425  0139  02BC               	subwf	(___ftdiv@f1+2),f
  3426                           	line	73
  3427                           	
  3428  013A                     l4882:	
  3429  013A  1442               	bsf	(___ftdiv@f3)+(0/8),(0)&7
  3430  013B  293C               	goto	l4884
  3431                           	line	74
  3432                           	
  3433  013C                     l2706:	
  3434                           	line	75
  3435                           	
  3436  013C                     l4884:	
  3437  013C  3001               	movlw	01h
  3438  013D                     u3015:
  3439  013D  1003               	clrc
  3440  013E  0DBA               	rlf	(___ftdiv@f1),f
  3441  013F  0DBB               	rlf	(___ftdiv@f1+1),f
  3442  0140  0DBC               	rlf	(___ftdiv@f1+2),f
  3443  0141  3EFF               	addlw	-1
  3444  0142  1D03               	skipz
  3445  0143  293D               	goto	u3015
  3446                           	line	76
  3447                           	
  3448  0144                     l4886:	
  3449  0144  3001               	movlw	low(01h)
  3450  0145  02C1               	subwf	(___ftdiv@cntr),f
  3451  0146  1D03               	btfss	status,2
  3452  0147  2949               	goto	u3021
  3453  0148  294A               	goto	u3020
  3454  0149                     u3021:
  3455  0149  291A               	goto	l4876
  3456  014A                     u3020:
  3457  014A  294B               	goto	l4888
  3458                           	
  3459  014B                     l2707:	
  3460                           	line	77
  3461                           	
  3462  014B                     l4888:	
  3463  014B  0842               	movf	(___ftdiv@f3),w
  3464  014C  00F0               	movwf	(?___ftpack)
  3465  014D  0843               	movf	(___ftdiv@f3+1),w
  3466  014E  00F1               	movwf	(?___ftpack+1)
  3467  014F  0844               	movf	(___ftdiv@f3+2),w
  3468  0150  00F2               	movwf	(?___ftpack+2)
  3469  0151  0845               	movf	(___ftdiv@exp),w
  3470  0152  00BD               	movwf	(??___ftdiv+0)+0
  3471  0153  083D               	movf	(??___ftdiv+0)+0,w
  3472  0154  00F3               	movwf	0+(?___ftpack)+03h
  3473  0155  0846               	movf	(___ftdiv@sign),w
  3474  0156  00BE               	movwf	(??___ftdiv+1)+0
  3475  0157  083E               	movf	(??___ftdiv+1)+0,w
  3476  0158  00F4               	movwf	0+(?___ftpack)+04h
  3477  0159  120A  158A  2636   	fcall	___ftpack
              120A  118A         
  3478  015E  0870               	movf	(0+(?___ftpack)),w
  3479  015F  1283               	bcf	status, 5	;RP0=0, select bank0
  3480  0160  1303               	bcf	status, 6	;RP1=0, select bank0
  3481  0161  00B7               	movwf	(?___ftdiv)
  3482  0162  0871               	movf	(1+(?___ftpack)),w
  3483  0163  00B8               	movwf	(?___ftdiv+1)
  3484  0164  0872               	movf	(2+(?___ftpack)),w
  3485  0165  00B9               	movwf	(?___ftdiv+2)
  3486  0166  2967               	goto	l2703
  3487                           	
  3488  0167                     l4890:	
  3489                           	line	78
  3490                           	
  3491  0167                     l2703:	
  3492  0167  0008               	return
  3493                           	opt stack 0
  3494                           GLOBAL	__end_of___ftdiv
  3495  0168                     	__end_of___ftdiv:
  3496 ;; =============== function ___ftdiv ends ============
  3497                           
  3498                           	signat	___ftdiv,8315
  3499                           	global	___ftadd
  3500                           psect	text430,local,class=CODE,delta=2
  3501                           global __ptext430
  3502  0256                     __ptext430:
  3503                           
  3504 ;; *************** function ___ftadd *****************
  3505 ;; Defined at:
  3506 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  f1              3   10[BANK0 ] float 
  3509 ;;  f2              3   13[BANK0 ] float 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  exp1            1   22[BANK0 ] unsigned char 
  3512 ;;  exp2            1   21[BANK0 ] unsigned char 
  3513 ;;  sign            1   20[BANK0 ] unsigned char 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  3   10[BANK0 ] float 
  3516 ;; Registers used:
  3517 ;;		wreg, status,2, status,0, pclath, cstack
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3523 ;;      Params:         0       6       0       0       0
  3524 ;;      Locals:         0       3       0       0       0
  3525 ;;      Temps:          0       4       0       0       0
  3526 ;;      Totals:         0      13       0       0       0
  3527 ;;Total ram usage:       13 bytes
  3528 ;; Hardware stack levels used:    1
  3529 ;; Hardware stack levels required when called:    1
  3530 ;; This function calls:
  3531 ;;		___ftpack
  3532 ;; This function is called by:
  3533 ;;		_map
  3534 ;;		___ftsub
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           psect	text430
  3538                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  3539                           	line	87
  3540                           	global	__size_of___ftadd
  3541  0146                     	__size_of___ftadd	equ	__end_of___ftadd-___ftadd
  3542                           	
  3543  0256                     ___ftadd:	
  3544                           	opt	stack 5
  3545                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3546                           	line	90
  3547                           	
  3548  0256                     l4780:	
  3549  0256  1283               	bcf	status, 5	;RP0=0, select bank0
  3550  0257  1303               	bcf	status, 6	;RP1=0, select bank0
  3551  0258  082A               	movf	(___ftadd@f1),w
  3552  0259  00B0               	movwf	((??___ftadd+0)+0)
  3553  025A  082B               	movf	(___ftadd@f1+1),w
  3554  025B  00B1               	movwf	((??___ftadd+0)+0+1)
  3555  025C  082C               	movf	(___ftadd@f1+2),w
  3556  025D  00B2               	movwf	((??___ftadd+0)+0+2)
  3557  025E  1003               	clrc
  3558  025F  0D31               	rlf	(??___ftadd+0)+1,w
  3559  0260  0D32               	rlf	(??___ftadd+0)+2,w
  3560  0261  00B3               	movwf	(??___ftadd+3)+0
  3561  0262  0833               	movf	(??___ftadd+3)+0,w
  3562  0263  00B6               	movwf	(___ftadd@exp1)
  3563                           	line	91
  3564  0264  082D               	movf	(___ftadd@f2),w
  3565  0265  00B0               	movwf	((??___ftadd+0)+0)
  3566  0266  082E               	movf	(___ftadd@f2+1),w
  3567  0267  00B1               	movwf	((??___ftadd+0)+0+1)
  3568  0268  082F               	movf	(___ftadd@f2+2),w
  3569  0269  00B2               	movwf	((??___ftadd+0)+0+2)
  3570  026A  1003               	clrc
  3571  026B  0D31               	rlf	(??___ftadd+0)+1,w
  3572  026C  0D32               	rlf	(??___ftadd+0)+2,w
  3573  026D  00B3               	movwf	(??___ftadd+3)+0
  3574  026E  0833               	movf	(??___ftadd+3)+0,w
  3575  026F  00B5               	movwf	(___ftadd@exp2)
  3576                           	line	92
  3577                           	
  3578  0270                     l4782:	
  3579  0270  0836               	movf	(___ftadd@exp1),w
  3580  0271  1D03               	skipz
  3581  0272  2A74               	goto	u2710
  3582  0273  2A85               	goto	l4788
  3583  0274                     u2710:
  3584                           	
  3585  0274                     l4784:	
  3586  0274  0835               	movf	(___ftadd@exp2),w
  3587  0275  0236               	subwf	(___ftadd@exp1),w
  3588  0276  1803               	skipnc
  3589  0277  2A79               	goto	u2721
  3590  0278  2A7A               	goto	u2720
  3591  0279                     u2721:
  3592  0279  2A8D               	goto	l4792
  3593  027A                     u2720:
  3594                           	
  3595  027A                     l4786:	
  3596  027A  0336               	decf	(___ftadd@exp1),w
  3597  027B  3AFF               	xorlw	0ffh
  3598  027C  0735               	addwf	(___ftadd@exp2),w
  3599  027D  00B0               	movwf	(??___ftadd+0)+0
  3600  027E  3019               	movlw	(019h)
  3601  027F  0230               	subwf	0+(??___ftadd+0)+0,w
  3602  0280  1C03               	skipc
  3603  0281  2A83               	goto	u2731
  3604  0282  2A84               	goto	u2730
  3605  0283                     u2731:
  3606  0283  2A8D               	goto	l4792
  3607  0284                     u2730:
  3608  0284  2A85               	goto	l4788
  3609                           	
  3610  0285                     l2660:	
  3611                           	line	93
  3612                           	
  3613  0285                     l4788:	
  3614  0285  082D               	movf	(___ftadd@f2),w
  3615  0286  00AA               	movwf	(?___ftadd)
  3616  0287  082E               	movf	(___ftadd@f2+1),w
  3617  0288  00AB               	movwf	(?___ftadd+1)
  3618  0289  082F               	movf	(___ftadd@f2+2),w
  3619  028A  00AC               	movwf	(?___ftadd+2)
  3620  028B  2B9B               	goto	l2661
  3621                           	
  3622  028C                     l4790:	
  3623  028C  2B9B               	goto	l2661
  3624                           	
  3625  028D                     l2658:	
  3626                           	line	94
  3627                           	
  3628  028D                     l4792:	
  3629  028D  0835               	movf	(___ftadd@exp2),w
  3630  028E  1D03               	skipz
  3631  028F  2A91               	goto	u2740
  3632  0290  2AA1               	goto	l2664
  3633  0291                     u2740:
  3634                           	
  3635  0291                     l4794:	
  3636  0291  0836               	movf	(___ftadd@exp1),w
  3637  0292  0235               	subwf	(___ftadd@exp2),w
  3638  0293  1803               	skipnc
  3639  0294  2A96               	goto	u2751
  3640  0295  2A97               	goto	u2750
  3641  0296                     u2751:
  3642  0296  2AA2               	goto	l4798
  3643  0297                     u2750:
  3644                           	
  3645  0297                     l4796:	
  3646  0297  0335               	decf	(___ftadd@exp2),w
  3647  0298  3AFF               	xorlw	0ffh
  3648  0299  0736               	addwf	(___ftadd@exp1),w
  3649  029A  00B0               	movwf	(??___ftadd+0)+0
  3650  029B  3019               	movlw	(019h)
  3651  029C  0230               	subwf	0+(??___ftadd+0)+0,w
  3652  029D  1C03               	skipc
  3653  029E  2AA0               	goto	u2761
  3654  029F  2AA1               	goto	u2760
  3655  02A0                     u2761:
  3656  02A0  2AA2               	goto	l4798
  3657  02A1                     u2760:
  3658                           	
  3659  02A1                     l2664:	
  3660                           	line	95
  3661  02A1  2B9B               	goto	l2661
  3662                           	
  3663  02A2                     l2662:	
  3664                           	line	96
  3665                           	
  3666  02A2                     l4798:	
  3667  02A2  3006               	movlw	(06h)
  3668  02A3  00B0               	movwf	(??___ftadd+0)+0
  3669  02A4  0830               	movf	(??___ftadd+0)+0,w
  3670  02A5  00B4               	movwf	(___ftadd@sign)
  3671                           	line	97
  3672                           	
  3673  02A6                     l4800:	
  3674  02A6  1FAC               	btfss	(___ftadd@f1+2),(23)&7
  3675  02A7  2AA9               	goto	u2771
  3676  02A8  2AAA               	goto	u2770
  3677  02A9                     u2771:
  3678  02A9  2AAB               	goto	l2665
  3679  02AA                     u2770:
  3680                           	line	98
  3681                           	
  3682  02AA                     l4802:	
  3683  02AA  17B4               	bsf	(___ftadd@sign)+(7/8),(7)&7
  3684                           	
  3685  02AB                     l2665:	
  3686                           	line	99
  3687  02AB  1FAF               	btfss	(___ftadd@f2+2),(23)&7
  3688  02AC  2AAE               	goto	u2781
  3689  02AD  2AAF               	goto	u2780
  3690  02AE                     u2781:
  3691  02AE  2AB0               	goto	l2666
  3692  02AF                     u2780:
  3693                           	line	100
  3694                           	
  3695  02AF                     l4804:	
  3696  02AF  1734               	bsf	(___ftadd@sign)+(6/8),(6)&7
  3697                           	
  3698  02B0                     l2666:	
  3699                           	line	101
  3700  02B0  17AB               	bsf	(___ftadd@f1)+(15/8),(15)&7
  3701                           	line	102
  3702                           	
  3703  02B1                     l4806:	
  3704  02B1  30FF               	movlw	0FFh
  3705  02B2  05AA               	andwf	(___ftadd@f1),f
  3706  02B3  30FF               	movlw	0FFh
  3707  02B4  05AB               	andwf	(___ftadd@f1+1),f
  3708  02B5  3000               	movlw	0
  3709  02B6  05AC               	andwf	(___ftadd@f1+2),f
  3710                           	line	103
  3711                           	
  3712  02B7                     l4808:	
  3713  02B7  17AE               	bsf	(___ftadd@f2)+(15/8),(15)&7
  3714                           	line	104
  3715  02B8  30FF               	movlw	0FFh
  3716  02B9  05AD               	andwf	(___ftadd@f2),f
  3717  02BA  30FF               	movlw	0FFh
  3718  02BB  05AE               	andwf	(___ftadd@f2+1),f
  3719  02BC  3000               	movlw	0
  3720  02BD  05AF               	andwf	(___ftadd@f2+2),f
  3721                           	line	106
  3722  02BE  0835               	movf	(___ftadd@exp2),w
  3723  02BF  0236               	subwf	(___ftadd@exp1),w
  3724  02C0  1803               	skipnc
  3725  02C1  2AC3               	goto	u2791
  3726  02C2  2AC4               	goto	u2790
  3727  02C3                     u2791:
  3728  02C3  2AF5               	goto	l4820
  3729  02C4                     u2790:
  3730  02C4  2AC5               	goto	l4810
  3731                           	line	109
  3732                           	
  3733  02C5                     l2668:	
  3734                           	line	110
  3735                           	
  3736  02C5                     l4810:	
  3737  02C5  3001               	movlw	01h
  3738  02C6                     u2805:
  3739  02C6  1003               	clrc
  3740  02C7  0DAD               	rlf	(___ftadd@f2),f
  3741  02C8  0DAE               	rlf	(___ftadd@f2+1),f
  3742  02C9  0DAF               	rlf	(___ftadd@f2+2),f
  3743  02CA  3EFF               	addlw	-1
  3744  02CB  1D03               	skipz
  3745  02CC  2AC6               	goto	u2805
  3746                           	line	111
  3747  02CD  3001               	movlw	low(01h)
  3748  02CE  02B5               	subwf	(___ftadd@exp2),f
  3749                           	line	112
  3750                           	
  3751  02CF                     l4812:	
  3752  02CF  0835               	movf	(___ftadd@exp2),w
  3753  02D0  0636               	xorwf	(___ftadd@exp1),w
  3754  02D1  1903               	skipnz
  3755  02D2  2AD4               	goto	u2811
  3756  02D3  2AD5               	goto	u2810
  3757  02D4                     u2811:
  3758  02D4  2AED               	goto	l4818
  3759  02D5                     u2810:
  3760                           	
  3761  02D5                     l4814:	
  3762  02D5  3001               	movlw	low(01h)
  3763  02D6  02B4               	subwf	(___ftadd@sign),f
  3764  02D7  0834               	movf	((___ftadd@sign)),w
  3765  02D8  3907               	andlw	07h
  3766  02D9  1D03               	btfss	status,2
  3767  02DA  2ADC               	goto	u2821
  3768  02DB  2ADD               	goto	u2820
  3769  02DC                     u2821:
  3770  02DC  2AC5               	goto	l4810
  3771  02DD                     u2820:
  3772  02DD  2AED               	goto	l4818
  3773                           	
  3774  02DE                     l2670:	
  3775  02DE  2AED               	goto	l4818
  3776                           	
  3777  02DF                     l2671:	
  3778                           	line	113
  3779  02DF  2AED               	goto	l4818
  3780                           	
  3781  02E0                     l2673:	
  3782                           	line	114
  3783                           	
  3784  02E0                     l4816:	
  3785  02E0  3001               	movlw	01h
  3786  02E1                     u2835:
  3787  02E1  1003               	clrc
  3788  02E2  0CAC               	rrf	(___ftadd@f1+2),f
  3789  02E3  0CAB               	rrf	(___ftadd@f1+1),f
  3790  02E4  0CAA               	rrf	(___ftadd@f1),f
  3791  02E5  3EFF               	addlw	-1
  3792  02E6  1D03               	skipz
  3793  02E7  2AE1               	goto	u2835
  3794                           
  3795                           	line	115
  3796  02E8  3001               	movlw	(01h)
  3797  02E9  00B0               	movwf	(??___ftadd+0)+0
  3798  02EA  0830               	movf	(??___ftadd+0)+0,w
  3799  02EB  07B6               	addwf	(___ftadd@exp1),f
  3800  02EC  2AED               	goto	l4818
  3801                           	line	116
  3802                           	
  3803  02ED                     l2672:	
  3804                           	line	113
  3805                           	
  3806  02ED                     l4818:	
  3807  02ED  0836               	movf	(___ftadd@exp1),w
  3808  02EE  0635               	xorwf	(___ftadd@exp2),w
  3809  02EF  1D03               	skipz
  3810  02F0  2AF2               	goto	u2841
  3811  02F1  2AF3               	goto	u2840
  3812  02F2                     u2841:
  3813  02F2  2AE0               	goto	l4816
  3814  02F3                     u2840:
  3815  02F3  2B2C               	goto	l2675
  3816                           	
  3817  02F4                     l2674:	
  3818                           	line	117
  3819  02F4  2B2C               	goto	l2675
  3820                           	
  3821  02F5                     l2667:	
  3822                           	
  3823  02F5                     l4820:	
  3824  02F5  0836               	movf	(___ftadd@exp1),w
  3825  02F6  0235               	subwf	(___ftadd@exp2),w
  3826  02F7  1803               	skipnc
  3827  02F8  2AFA               	goto	u2851
  3828  02F9  2AFB               	goto	u2850
  3829  02FA                     u2851:
  3830  02FA  2B2C               	goto	l2675
  3831  02FB                     u2850:
  3832  02FB  2AFC               	goto	l4822
  3833                           	line	120
  3834                           	
  3835  02FC                     l2677:	
  3836                           	line	121
  3837                           	
  3838  02FC                     l4822:	
  3839  02FC  3001               	movlw	01h
  3840  02FD                     u2865:
  3841  02FD  1003               	clrc
  3842  02FE  0DAA               	rlf	(___ftadd@f1),f
  3843  02FF  0DAB               	rlf	(___ftadd@f1+1),f
  3844  0300  0DAC               	rlf	(___ftadd@f1+2),f
  3845  0301  3EFF               	addlw	-1
  3846  0302  1D03               	skipz
  3847  0303  2AFD               	goto	u2865
  3848                           	line	122
  3849  0304  3001               	movlw	low(01h)
  3850  0305  02B6               	subwf	(___ftadd@exp1),f
  3851                           	line	123
  3852                           	
  3853  0306                     l4824:	
  3854  0306  0835               	movf	(___ftadd@exp2),w
  3855  0307  0636               	xorwf	(___ftadd@exp1),w
  3856  0308  1903               	skipnz
  3857  0309  2B0B               	goto	u2871
  3858  030A  2B0C               	goto	u2870
  3859  030B                     u2871:
  3860  030B  2B24               	goto	l4830
  3861  030C                     u2870:
  3862                           	
  3863  030C                     l4826:	
  3864  030C  3001               	movlw	low(01h)
  3865  030D  02B4               	subwf	(___ftadd@sign),f
  3866  030E  0834               	movf	((___ftadd@sign)),w
  3867  030F  3907               	andlw	07h
  3868  0310  1D03               	btfss	status,2
  3869  0311  2B13               	goto	u2881
  3870  0312  2B14               	goto	u2880
  3871  0313                     u2881:
  3872  0313  2AFC               	goto	l4822
  3873  0314                     u2880:
  3874  0314  2B24               	goto	l4830
  3875                           	
  3876  0315                     l2679:	
  3877  0315  2B24               	goto	l4830
  3878                           	
  3879  0316                     l2680:	
  3880                           	line	124
  3881  0316  2B24               	goto	l4830
  3882                           	
  3883  0317                     l2682:	
  3884                           	line	125
  3885                           	
  3886  0317                     l4828:	
  3887  0317  3001               	movlw	01h
  3888  0318                     u2895:
  3889  0318  1003               	clrc
  3890  0319  0CAF               	rrf	(___ftadd@f2+2),f
  3891  031A  0CAE               	rrf	(___ftadd@f2+1),f
  3892  031B  0CAD               	rrf	(___ftadd@f2),f
  3893  031C  3EFF               	addlw	-1
  3894  031D  1D03               	skipz
  3895  031E  2B18               	goto	u2895
  3896                           
  3897                           	line	126
  3898  031F  3001               	movlw	(01h)
  3899  0320  00B0               	movwf	(??___ftadd+0)+0
  3900  0321  0830               	movf	(??___ftadd+0)+0,w
  3901  0322  07B5               	addwf	(___ftadd@exp2),f
  3902  0323  2B24               	goto	l4830
  3903                           	line	127
  3904                           	
  3905  0324                     l2681:	
  3906                           	line	124
  3907                           	
  3908  0324                     l4830:	
  3909  0324  0836               	movf	(___ftadd@exp1),w
  3910  0325  0635               	xorwf	(___ftadd@exp2),w
  3911  0326  1D03               	skipz
  3912  0327  2B29               	goto	u2901
  3913  0328  2B2A               	goto	u2900
  3914  0329                     u2901:
  3915  0329  2B17               	goto	l4828
  3916  032A                     u2900:
  3917  032A  2B2C               	goto	l2675
  3918                           	
  3919  032B                     l2683:	
  3920  032B  2B2C               	goto	l2675
  3921                           	line	128
  3922                           	
  3923  032C                     l2676:	
  3924                           	line	129
  3925                           	
  3926  032C                     l2675:	
  3927  032C  1FB4               	btfss	(___ftadd@sign),(7)&7
  3928  032D  2B2F               	goto	u2911
  3929  032E  2B30               	goto	u2910
  3930  032F                     u2911:
  3931  032F  2B41               	goto	l4834
  3932  0330                     u2910:
  3933                           	line	131
  3934                           	
  3935  0330                     l4832:	
  3936  0330  30FF               	movlw	0FFh
  3937  0331  06AA               	xorwf	(___ftadd@f1),f
  3938  0332  30FF               	movlw	0FFh
  3939  0333  06AB               	xorwf	(___ftadd@f1+1),f
  3940  0334  30FF               	movlw	0FFh
  3941  0335  06AC               	xorwf	(___ftadd@f1+2),f
  3942                           	line	132
  3943  0336  3001               	movlw	01h
  3944  0337  07AA               	addwf	(___ftadd@f1),f
  3945  0338  3000               	movlw	0
  3946  0339  1803               	skipnc
  3947  033A  3001               movlw 1
  3948  033B  07AB               	addwf	(___ftadd@f1+1),f
  3949  033C  3000               	movlw	0
  3950  033D  1803               	skipnc
  3951  033E  3001               movlw 1
  3952  033F  07AC               	addwf	(___ftadd@f1+2),f
  3953  0340  2B41               	goto	l4834
  3954                           	line	133
  3955                           	
  3956  0341                     l2684:	
  3957                           	line	134
  3958                           	
  3959  0341                     l4834:	
  3960  0341  1F34               	btfss	(___ftadd@sign),(6)&7
  3961  0342  2B44               	goto	u2921
  3962  0343  2B45               	goto	u2920
  3963  0344                     u2921:
  3964  0344  2B56               	goto	l4838
  3965  0345                     u2920:
  3966                           	line	136
  3967                           	
  3968  0345                     l4836:	
  3969  0345  30FF               	movlw	0FFh
  3970  0346  06AD               	xorwf	(___ftadd@f2),f
  3971  0347  30FF               	movlw	0FFh
  3972  0348  06AE               	xorwf	(___ftadd@f2+1),f
  3973  0349  30FF               	movlw	0FFh
  3974  034A  06AF               	xorwf	(___ftadd@f2+2),f
  3975                           	line	137
  3976  034B  3001               	movlw	01h
  3977  034C  07AD               	addwf	(___ftadd@f2),f
  3978  034D  3000               	movlw	0
  3979  034E  1803               	skipnc
  3980  034F  3001               movlw 1
  3981  0350  07AE               	addwf	(___ftadd@f2+1),f
  3982  0351  3000               	movlw	0
  3983  0352  1803               	skipnc
  3984  0353  3001               movlw 1
  3985  0354  07AF               	addwf	(___ftadd@f2+2),f
  3986  0355  2B56               	goto	l4838
  3987                           	line	138
  3988                           	
  3989  0356                     l2685:	
  3990                           	line	139
  3991                           	
  3992  0356                     l4838:	
  3993  0356  01B4               	clrf	(___ftadd@sign)
  3994                           	line	140
  3995  0357  082A               	movf	(___ftadd@f1),w
  3996  0358  07AD               	addwf	(___ftadd@f2),f
  3997  0359  082B               	movf	(___ftadd@f1+1),w
  3998  035A  1103               	clrz
  3999  035B  1803               	skipnc
  4000  035C  0A2B               	incf	(___ftadd@f1+1),w
  4001  035D  1903               	skipnz
  4002  035E  2B60               	goto	u2931
  4003  035F  07AE               	addwf	(___ftadd@f2+1),f
  4004  0360                     u2931:
  4005  0360  082C               	movf	(___ftadd@f1+2),w
  4006  0361  1103               	clrz
  4007  0362  1803               	skipnc
  4008  0363  0A2C               	incf	(___ftadd@f1+2),w
  4009  0364  1903               	skipnz
  4010  0365  2B67               	goto	u2932
  4011  0366  07AF               	addwf	(___ftadd@f2+2),f
  4012  0367                     u2932:
  4013                           
  4014                           	line	141
  4015                           	
  4016  0367                     l4840:	
  4017  0367  1FAF               	btfss	(___ftadd@f2+2),(23)&7
  4018  0368  2B6A               	goto	u2941
  4019  0369  2B6B               	goto	u2940
  4020  036A                     u2941:
  4021  036A  2B7F               	goto	l4846
  4022  036B                     u2940:
  4023                           	line	142
  4024                           	
  4025  036B                     l4842:	
  4026  036B  30FF               	movlw	0FFh
  4027  036C  06AD               	xorwf	(___ftadd@f2),f
  4028  036D  30FF               	movlw	0FFh
  4029  036E  06AE               	xorwf	(___ftadd@f2+1),f
  4030  036F  30FF               	movlw	0FFh
  4031  0370  06AF               	xorwf	(___ftadd@f2+2),f
  4032                           	line	143
  4033  0371  3001               	movlw	01h
  4034  0372  07AD               	addwf	(___ftadd@f2),f
  4035  0373  3000               	movlw	0
  4036  0374  1803               	skipnc
  4037  0375  3001               movlw 1
  4038  0376  07AE               	addwf	(___ftadd@f2+1),f
  4039  0377  3000               	movlw	0
  4040  0378  1803               	skipnc
  4041  0379  3001               movlw 1
  4042  037A  07AF               	addwf	(___ftadd@f2+2),f
  4043                           	line	144
  4044                           	
  4045  037B                     l4844:	
  4046  037B  01B4               	clrf	(___ftadd@sign)
  4047  037C  1403               	bsf	status,0
  4048  037D  0DB4               	rlf	(___ftadd@sign),f
  4049  037E  2B7F               	goto	l4846
  4050                           	line	145
  4051                           	
  4052  037F                     l2686:	
  4053                           	line	146
  4054                           	
  4055  037F                     l4846:	
  4056  037F  082D               	movf	(___ftadd@f2),w
  4057  0380  00F0               	movwf	(?___ftpack)
  4058  0381  082E               	movf	(___ftadd@f2+1),w
  4059  0382  00F1               	movwf	(?___ftpack+1)
  4060  0383  082F               	movf	(___ftadd@f2+2),w
  4061  0384  00F2               	movwf	(?___ftpack+2)
  4062  0385  0836               	movf	(___ftadd@exp1),w
  4063  0386  00B0               	movwf	(??___ftadd+0)+0
  4064  0387  0830               	movf	(??___ftadd+0)+0,w
  4065  0388  00F3               	movwf	0+(?___ftpack)+03h
  4066  0389  0834               	movf	(___ftadd@sign),w
  4067  038A  00B1               	movwf	(??___ftadd+1)+0
  4068  038B  0831               	movf	(??___ftadd+1)+0,w
  4069  038C  00F4               	movwf	0+(?___ftpack)+04h
  4070  038D  120A  158A  2636   	fcall	___ftpack
              120A  118A         
  4071  0392  0870               	movf	(0+(?___ftpack)),w
  4072  0393  1283               	bcf	status, 5	;RP0=0, select bank0
  4073  0394  1303               	bcf	status, 6	;RP1=0, select bank0
  4074  0395  00AA               	movwf	(?___ftadd)
  4075  0396  0871               	movf	(1+(?___ftpack)),w
  4076  0397  00AB               	movwf	(?___ftadd+1)
  4077  0398  0872               	movf	(2+(?___ftpack)),w
  4078  0399  00AC               	movwf	(?___ftadd+2)
  4079  039A  2B9B               	goto	l2661
  4080                           	
  4081  039B                     l4848:	
  4082                           	line	148
  4083                           	
  4084  039B                     l2661:	
  4085  039B  0008               	return
  4086                           	opt stack 0
  4087                           GLOBAL	__end_of___ftadd
  4088  039C                     	__end_of___ftadd:
  4089 ;; =============== function ___ftadd ends ============
  4090                           
  4091                           	signat	___ftadd,8315
  4092                           	global	_ToggleEpinOfLCD
  4093                           psect	text431,local,class=CODE,delta=2
  4094                           global __ptext431
  4095  0CFA                     __ptext431:
  4096                           
  4097 ;; *************** function _ToggleEpinOfLCD *****************
  4098 ;; Defined at:
  4099 ;;		line 5 in file "C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\LCD.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		wreg
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4113 ;;      Params:         0       0       0       0       0
  4114 ;;      Locals:         0       0       0       0       0
  4115 ;;      Temps:          2       0       0       0       0
  4116 ;;      Totals:         2       0       0       0       0
  4117 ;;Total ram usage:        2 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_WriteCommandToLCD
  4123 ;;		_WriteDataToLCD
  4124 ;;		_InitLCD
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           psect	text431
  4128                           	file	"C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\LCD.c"
  4129                           	line	5
  4130                           	global	__size_of_ToggleEpinOfLCD
  4131  0019                     	__size_of_ToggleEpinOfLCD	equ	__end_of_ToggleEpinOfLCD-_ToggleEpinOfLCD
  4132                           	
  4133  0CFA                     _ToggleEpinOfLCD:	
  4134                           	opt	stack 6
  4135                           ; Regs used in _ToggleEpinOfLCD: [wreg]
  4136                           	line	6
  4137                           	
  4138  0CFA                     l4774:	
  4139                           ;LCD.c: 6: RB0 = 1;
  4140  0CFA  1283               	bcf	status, 5	;RP0=0, select bank0
  4141  0CFB  1303               	bcf	status, 6	;RP1=0, select bank0
  4142  0CFC  1406               	bsf	(48/8),(48)&7
  4143                           	line	7
  4144                           	
  4145  0CFD                     l4776:	
  4146                           ;LCD.c: 7: _delay((unsigned long)((500)*(20000000/4000000.0)));
  4147                           	opt asmopt_off
  4148  0CFD  3004               movlw	4
  4149  0CFE  00F1               movwf	((??_ToggleEpinOfLCD+0)+0+1),f
  4150  0CFF  303D               	movlw	61
  4151  0D00  00F0               movwf	((??_ToggleEpinOfLCD+0)+0),f
  4152  0D01                     u3267:
  4153  0D01  0BF0               	decfsz	((??_ToggleEpinOfLCD+0)+0),f
  4154  0D02  2D01               	goto	u3267
  4155  0D03  0BF1               	decfsz	((??_ToggleEpinOfLCD+0)+0+1),f
  4156  0D04  2D01               	goto	u3267
  4157  0D05  2D06               	nop2
  4158                           opt asmopt_on
  4159                           
  4160                           	line	8
  4161                           	
  4162  0D06                     l4778:	
  4163                           ;LCD.c: 8: RB0 = 0;
  4164  0D06  1283               	bcf	status, 5	;RP0=0, select bank0
  4165  0D07  1303               	bcf	status, 6	;RP1=0, select bank0
  4166  0D08  1006               	bcf	(48/8),(48)&7
  4167                           	line	9
  4168                           ;LCD.c: 9: _delay((unsigned long)((500)*(20000000/4000000.0)));
  4169                           	opt asmopt_off
  4170  0D09  3004               movlw	4
  4171  0D0A  00F1               movwf	((??_ToggleEpinOfLCD+0)+0+1),f
  4172  0D0B  303D               	movlw	61
  4173  0D0C  00F0               movwf	((??_ToggleEpinOfLCD+0)+0),f
  4174  0D0D                     u3277:
  4175  0D0D  0BF0               	decfsz	((??_ToggleEpinOfLCD+0)+0),f
  4176  0D0E  2D0D               	goto	u3277
  4177  0D0F  0BF1               	decfsz	((??_ToggleEpinOfLCD+0)+0+1),f
  4178  0D10  2D0D               	goto	u3277
  4179  0D11  2D12               	nop2
  4180                           opt asmopt_on
  4181                           
  4182                           	line	10
  4183                           	
  4184  0D12                     l1953:	
  4185  0D12  0008               	return
  4186                           	opt stack 0
  4187                           GLOBAL	__end_of_ToggleEpinOfLCD
  4188  0D13                     	__end_of_ToggleEpinOfLCD:
  4189 ;; =============== function _ToggleEpinOfLCD ends ============
  4190                           
  4191                           	signat	_ToggleEpinOfLCD,88
  4192                           	global	_GetADCValue
  4193                           psect	text432,local,class=CODE,delta=2
  4194                           global __ptext432
  4195  0DB0                     __ptext432:
  4196                           
  4197 ;; *************** function _GetADCValue *****************
  4198 ;; Defined at:
  4199 ;;		line 30 in file "C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\ADC.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  Channel         1    wreg     unsigned char 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  Channel         1    4[COMMON] unsigned char 
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  2    0[COMMON] unsigned int 
  4206 ;; Registers used:
  4207 ;;		wreg, status,2, status,0, btemp+1
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4213 ;;      Params:         2       0       0       0       0
  4214 ;;      Locals:         1       0       0       0       0
  4215 ;;      Temps:          2       0       0       0       0
  4216 ;;      Totals:         5       0       0       0       0
  4217 ;;Total ram usage:        5 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_main
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           psect	text432
  4226                           	file	"C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\ADC.c"
  4227                           	line	30
  4228                           	global	__size_of_GetADCValue
  4229  0038                     	__size_of_GetADCValue	equ	__end_of_GetADCValue-_GetADCValue
  4230                           	
  4231  0DB0                     _GetADCValue:	
  4232                           	opt	stack 7
  4233                           ; Regs used in _GetADCValue: [wreg+status,2+status,0+btemp+1]
  4234                           ;GetADCValue@Channel stored from wreg
  4235  0DB0  00F4               	movwf	(GetADCValue@Channel)
  4236                           	line	31
  4237                           	
  4238  0DB1                     l4764:	
  4239                           ;ADC.c: 31: ADCON0 &= 0xc7;
  4240  0DB1  30C7               	movlw	(0C7h)
  4241  0DB2  00F2               	movwf	(??_GetADCValue+0)+0
  4242  0DB3  0872               	movf	(??_GetADCValue+0)+0,w
  4243  0DB4  1283               	bcf	status, 5	;RP0=0, select bank0
  4244  0DB5  1303               	bcf	status, 6	;RP1=0, select bank0
  4245  0DB6  059F               	andwf	(31),f	;volatile
  4246                           	line	33
  4247                           ;ADC.c: 33: ADCON0 |= (Channel<<3);
  4248  0DB7  0874               	movf	(GetADCValue@Channel),w
  4249  0DB8  00F2               	movwf	(??_GetADCValue+0)+0
  4250  0DB9  3002               	movlw	(03h)-1
  4251  0DBA                     u2695:
  4252  0DBA  1003               	clrc
  4253  0DBB  0DF2               	rlf	(??_GetADCValue+0)+0,f
  4254  0DBC  3EFF               	addlw	-1
  4255  0DBD  1D03               	skipz
  4256  0DBE  2DBA               	goto	u2695
  4257  0DBF  1003               	clrc
  4258  0DC0  0D72               	rlf	(??_GetADCValue+0)+0,w
  4259  0DC1  00F3               	movwf	(??_GetADCValue+1)+0
  4260  0DC2  0873               	movf	(??_GetADCValue+1)+0,w
  4261  0DC3  049F               	iorwf	(31),f	;volatile
  4262                           	line	35
  4263                           	
  4264  0DC4                     l4766:	
  4265                           ;ADC.c: 35: _delay((unsigned long)((10)*(20000000/4000.0)));
  4266                           	opt asmopt_off
  4267  0DC4  3041               movlw	65
  4268  0DC5  00F3               movwf	((??_GetADCValue+0)+0+1),f
  4269  0DC6  30EE               	movlw	238
  4270  0DC7  00F2               movwf	((??_GetADCValue+0)+0),f
  4271  0DC8                     u3287:
  4272  0DC8  0BF2               	decfsz	((??_GetADCValue+0)+0),f
  4273  0DC9  2DC8               	goto	u3287
  4274  0DCA  0BF3               	decfsz	((??_GetADCValue+0)+0+1),f
  4275  0DCB  2DC8               	goto	u3287
  4276  0DCC  0064               	clrwdt
  4277                           opt asmopt_on
  4278                           
  4279                           	line	37
  4280                           	
  4281  0DCD                     l4768:	
  4282                           ;ADC.c: 37: GO_nDONE = 1;
  4283  0DCD  1283               	bcf	status, 5	;RP0=0, select bank0
  4284  0DCE  1303               	bcf	status, 6	;RP1=0, select bank0
  4285  0DCF  151F               	bsf	(250/8),(250)&7
  4286                           	line	39
  4287                           ;ADC.c: 39: while(GO_nDONE);
  4288  0DD0  2DD1               	goto	l1307
  4289                           	
  4290  0DD1                     l1308:	
  4291                           	
  4292  0DD1                     l1307:	
  4293  0DD1  191F               	btfsc	(250/8),(250)&7
  4294  0DD2  2DD4               	goto	u2701
  4295  0DD3  2DD5               	goto	u2700
  4296  0DD4                     u2701:
  4297  0DD4  2DD1               	goto	l1307
  4298  0DD5                     u2700:
  4299  0DD5  2DD6               	goto	l4770
  4300                           	
  4301  0DD6                     l1309:	
  4302                           	line	41
  4303                           	
  4304  0DD6                     l4770:	
  4305                           ;ADC.c: 41: return ((ADRESH<<8)+ADRESL);
  4306  0DD6  081E               	movf	(30),w	;volatile
  4307  0DD7  00F2               	movwf	(??_GetADCValue+0)+0
  4308  0DD8  01F3               	clrf	(??_GetADCValue+0)+0+1
  4309  0DD9  0872               	movf	(??_GetADCValue+0)+0,w
  4310  0DDA  00F3               	movwf	(??_GetADCValue+0)+1
  4311  0DDB  01F2               	clrf	(??_GetADCValue+0)+0
  4312  0DDC  1683               	bsf	status, 5	;RP0=1, select bank1
  4313  0DDD  1303               	bcf	status, 6	;RP1=0, select bank1
  4314  0DDE  081E               	movf	(158)^080h,w	;volatile
  4315  0DDF  0772               	addwf	0+(??_GetADCValue+0)+0,w
  4316  0DE0  00F0               	movwf	(?_GetADCValue)
  4317  0DE1  3000               	movlw	0
  4318  0DE2  1803               	skipnc
  4319  0DE3  3001               	movlw	1
  4320  0DE4  0773               	addwf	1+(??_GetADCValue+0)+0,w
  4321  0DE5  00F1               	movwf	1+(?_GetADCValue)
  4322  0DE6  2DE7               	goto	l1310
  4323                           	
  4324  0DE7                     l4772:	
  4325                           	line	42
  4326                           	
  4327  0DE7                     l1310:	
  4328  0DE7  0008               	return
  4329                           	opt stack 0
  4330                           GLOBAL	__end_of_GetADCValue
  4331  0DE8                     	__end_of_GetADCValue:
  4332 ;; =============== function _GetADCValue ends ============
  4333                           
  4334                           	signat	_GetADCValue,4218
  4335                           	global	___ftneg
  4336                           psect	text433,local,class=CODE,delta=2
  4337                           global __ptext433
  4338  0CDE                     __ptext433:
  4339                           
  4340 ;; *************** function ___ftneg *****************
  4341 ;; Defined at:
  4342 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  f1              3    0[COMMON] float 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  3    0[COMMON] float 
  4349 ;; Registers used:
  4350 ;;		wreg
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4356 ;;      Params:         3       0       0       0       0
  4357 ;;      Locals:         0       0       0       0       0
  4358 ;;      Temps:          0       0       0       0       0
  4359 ;;      Totals:         3       0       0       0       0
  4360 ;;Total ram usage:        3 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_map
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           psect	text433
  4369                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  4370                           	line	16
  4371                           	global	__size_of___ftneg
  4372  000C                     	__size_of___ftneg	equ	__end_of___ftneg-___ftneg
  4373                           	
  4374  0CDE                     ___ftneg:	
  4375                           	opt	stack 6
  4376                           ; Regs used in ___ftneg: [wreg]
  4377                           	line	17
  4378                           	
  4379  0CDE                     l4714:	
  4380  0CDE  0872               	movf	(___ftneg@f1+2),w
  4381  0CDF  0471               	iorwf	(___ftneg@f1+1),w
  4382  0CE0  0470               	iorwf	(___ftneg@f1),w
  4383  0CE1  1903               	skipnz
  4384  0CE2  2CE4               	goto	u2621
  4385  0CE3  2CE5               	goto	u2620
  4386  0CE4                     u2621:
  4387  0CE4  2CE8               	goto	l4718
  4388  0CE5                     u2620:
  4389                           	line	18
  4390                           	
  4391  0CE5                     l4716:	
  4392  0CE5  3080               	movlw	080h
  4393  0CE6  06F2               	xorwf	(___ftneg@f1+2),f
  4394  0CE7  2CE8               	goto	l4718
  4395                           	
  4396  0CE8                     l2777:	
  4397                           	line	19
  4398                           	
  4399  0CE8                     l4718:	
  4400  0CE8  2CE9               	goto	l2778
  4401                           	
  4402  0CE9                     l4720:	
  4403                           	line	20
  4404                           	
  4405  0CE9                     l2778:	
  4406  0CE9  0008               	return
  4407                           	opt stack 0
  4408                           GLOBAL	__end_of___ftneg
  4409  0CEA                     	__end_of___ftneg:
  4410 ;; =============== function ___ftneg ends ============
  4411                           
  4412                           	signat	___ftneg,4219
  4413                           	global	___fttol
  4414                           psect	text434,local,class=CODE,delta=2
  4415                           global __ptext434
  4416  0EB1                     __ptext434:
  4417                           
  4418 ;; *************** function ___fttol *****************
  4419 ;; Defined at:
  4420 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  f1              3    8[COMMON] float 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  lval            4    5[BANK0 ] unsigned long 
  4425 ;;  exp1            1    9[BANK0 ] unsigned char 
  4426 ;;  sign1           1    4[BANK0 ] unsigned char 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  4    8[COMMON] long 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4436 ;;      Params:         4       0       0       0       0
  4437 ;;      Locals:         0       6       0       0       0
  4438 ;;      Temps:          0       4       0       0       0
  4439 ;;      Totals:         4      10       0       0       0
  4440 ;;Total ram usage:       14 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_main
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           psect	text434
  4449                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  4450                           	line	45
  4451                           	global	__size_of___fttol
  4452  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  4453                           	
  4454  0EB1                     ___fttol:	
  4455                           	opt	stack 7
  4456                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4457                           	line	49
  4458                           	
  4459  0EB1                     l4650:	
  4460  0EB1  0878               	movf	(___fttol@f1),w
  4461  0EB2  1283               	bcf	status, 5	;RP0=0, select bank0
  4462  0EB3  1303               	bcf	status, 6	;RP1=0, select bank0
  4463  0EB4  00A0               	movwf	((??___fttol+0)+0)
  4464  0EB5  0879               	movf	(___fttol@f1+1),w
  4465  0EB6  00A1               	movwf	((??___fttol+0)+0+1)
  4466  0EB7  087A               	movf	(___fttol@f1+2),w
  4467  0EB8  00A2               	movwf	((??___fttol+0)+0+2)
  4468  0EB9  1003               	clrc
  4469  0EBA  0D21               	rlf	(??___fttol+0)+1,w
  4470  0EBB  0D22               	rlf	(??___fttol+0)+2,w
  4471  0EBC  00A3               	movwf	(??___fttol+3)+0
  4472  0EBD  0823               	movf	(??___fttol+3)+0,w
  4473  0EBE  00A9               	movwf	(___fttol@exp1)
  4474  0EBF  08A9               	movf	((___fttol@exp1)),f
  4475  0EC0  1D03               	skipz
  4476  0EC1  2EC3               	goto	u2501
  4477  0EC2  2EC4               	goto	u2500
  4478  0EC3                     u2501:
  4479  0EC3  2ECE               	goto	l4656
  4480  0EC4                     u2500:
  4481                           	line	50
  4482                           	
  4483  0EC4                     l4652:	
  4484  0EC4  3000               	movlw	0
  4485  0EC5  00FB               	movwf	(?___fttol+3)
  4486  0EC6  3000               	movlw	0
  4487  0EC7  00FA               	movwf	(?___fttol+2)
  4488  0EC8  3000               	movlw	0
  4489  0EC9  00F9               	movwf	(?___fttol+1)
  4490  0ECA  3000               	movlw	0
  4491  0ECB  00F8               	movwf	(?___fttol)
  4492                           
  4493  0ECC  2F56               	goto	l2724
  4494                           	
  4495  0ECD                     l4654:	
  4496  0ECD  2F56               	goto	l2724
  4497                           	
  4498  0ECE                     l2723:	
  4499                           	line	51
  4500                           	
  4501  0ECE                     l4656:	
  4502  0ECE  0878               	movf	(___fttol@f1),w
  4503  0ECF  00A0               	movwf	((??___fttol+0)+0)
  4504  0ED0  0879               	movf	(___fttol@f1+1),w
  4505  0ED1  00A1               	movwf	((??___fttol+0)+0+1)
  4506  0ED2  087A               	movf	(___fttol@f1+2),w
  4507  0ED3  00A2               	movwf	((??___fttol+0)+0+2)
  4508  0ED4  3017               	movlw	017h
  4509  0ED5                     u2515:
  4510  0ED5  1003               	clrc
  4511  0ED6  0CA2               	rrf	(??___fttol+0)+2,f
  4512  0ED7  0CA1               	rrf	(??___fttol+0)+1,f
  4513  0ED8  0CA0               	rrf	(??___fttol+0)+0,f
  4514  0ED9                     u2510:
  4515  0ED9  3EFF               	addlw	-1
  4516  0EDA  1D03               	skipz
  4517  0EDB  2ED5               	goto	u2515
  4518  0EDC  0820               	movf	0+(??___fttol+0)+0,w
  4519  0EDD  00A3               	movwf	(??___fttol+3)+0
  4520  0EDE  0823               	movf	(??___fttol+3)+0,w
  4521  0EDF  00A4               	movwf	(___fttol@sign1)
  4522                           	line	52
  4523                           	
  4524  0EE0                     l4658:	
  4525  0EE0  17F9               	bsf	(___fttol@f1)+(15/8),(15)&7
  4526                           	line	53
  4527                           	
  4528  0EE1                     l4660:	
  4529  0EE1  30FF               	movlw	0FFh
  4530  0EE2  05F8               	andwf	(___fttol@f1),f
  4531  0EE3  30FF               	movlw	0FFh
  4532  0EE4  05F9               	andwf	(___fttol@f1+1),f
  4533  0EE5  3000               	movlw	0
  4534  0EE6  05FA               	andwf	(___fttol@f1+2),f
  4535                           	line	54
  4536                           	
  4537  0EE7                     l4662:	
  4538  0EE7  0878               	movf	(___fttol@f1),w
  4539  0EE8  00A5               	movwf	(___fttol@lval)
  4540  0EE9  0879               	movf	(___fttol@f1+1),w
  4541  0EEA  00A6               	movwf	((___fttol@lval))+1
  4542  0EEB  087A               	movf	(___fttol@f1+2),w
  4543  0EEC  00A7               	movwf	((___fttol@lval))+2
  4544  0EED  01A8               	clrf	((___fttol@lval))+3
  4545                           	line	55
  4546                           	
  4547  0EEE                     l4664:	
  4548  0EEE  308E               	movlw	low(08Eh)
  4549  0EEF  02A9               	subwf	(___fttol@exp1),f
  4550                           	line	56
  4551                           	
  4552  0EF0                     l4666:	
  4553  0EF0  1FA9               	btfss	(___fttol@exp1),7
  4554  0EF1  2EF3               	goto	u2521
  4555  0EF2  2EF4               	goto	u2520
  4556  0EF3                     u2521:
  4557  0EF3  2F19               	goto	l4676
  4558  0EF4                     u2520:
  4559                           	line	57
  4560                           	
  4561  0EF4                     l4668:	
  4562  0EF4  0829               	movf	(___fttol@exp1),w
  4563  0EF5  3A80               	xorlw	80h
  4564  0EF6  3E8F               	addlw	-((-15)^80h)
  4565  0EF7  1803               	skipnc
  4566  0EF8  2EFA               	goto	u2531
  4567  0EF9  2EFB               	goto	u2530
  4568  0EFA                     u2531:
  4569  0EFA  2F06               	goto	l4674
  4570  0EFB                     u2530:
  4571                           	line	58
  4572                           	
  4573  0EFB                     l4670:	
  4574  0EFB  3000               	movlw	0
  4575  0EFC  00FB               	movwf	(?___fttol+3)
  4576  0EFD  3000               	movlw	0
  4577  0EFE  00FA               	movwf	(?___fttol+2)
  4578  0EFF  3000               	movlw	0
  4579  0F00  00F9               	movwf	(?___fttol+1)
  4580  0F01  3000               	movlw	0
  4581  0F02  00F8               	movwf	(?___fttol)
  4582                           
  4583  0F03  2F56               	goto	l2724
  4584                           	
  4585  0F04                     l4672:	
  4586  0F04  2F56               	goto	l2724
  4587                           	
  4588  0F05                     l2726:	
  4589  0F05  2F06               	goto	l4674
  4590                           	line	59
  4591                           	
  4592  0F06                     l2727:	
  4593                           	line	60
  4594                           	
  4595  0F06                     l4674:	
  4596  0F06  3001               	movlw	01h
  4597  0F07                     u2545:
  4598  0F07  1003               	clrc
  4599  0F08  0CA8               	rrf	(___fttol@lval+3),f
  4600  0F09  0CA7               	rrf	(___fttol@lval+2),f
  4601  0F0A  0CA6               	rrf	(___fttol@lval+1),f
  4602  0F0B  0CA5               	rrf	(___fttol@lval),f
  4603  0F0C  3EFF               	addlw	-1
  4604  0F0D  1D03               	skipz
  4605  0F0E  2F07               	goto	u2545
  4606                           
  4607                           	line	61
  4608  0F0F  3001               	movlw	(01h)
  4609  0F10  00A0               	movwf	(??___fttol+0)+0
  4610  0F11  0820               	movf	(??___fttol+0)+0,w
  4611  0F12  07A9               	addwf	(___fttol@exp1),f
  4612  0F13  1D03               	btfss	status,2
  4613  0F14  2F16               	goto	u2551
  4614  0F15  2F17               	goto	u2550
  4615  0F16                     u2551:
  4616  0F16  2F06               	goto	l4674
  4617  0F17                     u2550:
  4618  0F17  2F3D               	goto	l4686
  4619                           	
  4620  0F18                     l2728:	
  4621                           	line	62
  4622  0F18  2F3D               	goto	l4686
  4623                           	
  4624  0F19                     l2725:	
  4625                           	line	63
  4626                           	
  4627  0F19                     l4676:	
  4628  0F19  3018               	movlw	(018h)
  4629  0F1A  0229               	subwf	(___fttol@exp1),w
  4630  0F1B  1C03               	skipc
  4631  0F1C  2F1E               	goto	u2561
  4632  0F1D  2F1F               	goto	u2560
  4633  0F1E                     u2561:
  4634  0F1E  2F36               	goto	l4684
  4635  0F1F                     u2560:
  4636                           	line	64
  4637                           	
  4638  0F1F                     l4678:	
  4639  0F1F  3000               	movlw	0
  4640  0F20  00FB               	movwf	(?___fttol+3)
  4641  0F21  3000               	movlw	0
  4642  0F22  00FA               	movwf	(?___fttol+2)
  4643  0F23  3000               	movlw	0
  4644  0F24  00F9               	movwf	(?___fttol+1)
  4645  0F25  3000               	movlw	0
  4646  0F26  00F8               	movwf	(?___fttol)
  4647                           
  4648  0F27  2F56               	goto	l2724
  4649                           	
  4650  0F28                     l4680:	
  4651  0F28  2F56               	goto	l2724
  4652                           	
  4653  0F29                     l2730:	
  4654                           	line	65
  4655  0F29  2F36               	goto	l4684
  4656                           	
  4657  0F2A                     l2732:	
  4658                           	line	66
  4659                           	
  4660  0F2A                     l4682:	
  4661  0F2A  3001               	movlw	01h
  4662  0F2B  00A0               	movwf	(??___fttol+0)+0
  4663  0F2C                     u2575:
  4664  0F2C  1003               	clrc
  4665  0F2D  0DA5               	rlf	(___fttol@lval),f
  4666  0F2E  0DA6               	rlf	(___fttol@lval+1),f
  4667  0F2F  0DA7               	rlf	(___fttol@lval+2),f
  4668  0F30  0DA8               	rlf	(___fttol@lval+3),f
  4669  0F31  0BA0               	decfsz	(??___fttol+0)+0
  4670  0F32  2F2C               	goto	u2575
  4671                           	line	67
  4672  0F33  3001               	movlw	low(01h)
  4673  0F34  02A9               	subwf	(___fttol@exp1),f
  4674  0F35  2F36               	goto	l4684
  4675                           	line	68
  4676                           	
  4677  0F36                     l2731:	
  4678                           	line	65
  4679                           	
  4680  0F36                     l4684:	
  4681  0F36  08A9               	movf	(___fttol@exp1),f
  4682  0F37  1D03               	skipz
  4683  0F38  2F3A               	goto	u2581
  4684  0F39  2F3B               	goto	u2580
  4685  0F3A                     u2581:
  4686  0F3A  2F2A               	goto	l4682
  4687  0F3B                     u2580:
  4688  0F3B  2F3D               	goto	l4686
  4689                           	
  4690  0F3C                     l2733:	
  4691  0F3C  2F3D               	goto	l4686
  4692                           	line	69
  4693                           	
  4694  0F3D                     l2729:	
  4695                           	line	70
  4696                           	
  4697  0F3D                     l4686:	
  4698  0F3D  0824               	movf	(___fttol@sign1),w
  4699  0F3E  1D03               	skipz
  4700  0F3F  2F41               	goto	u2590
  4701  0F40  2F4D               	goto	l4690
  4702  0F41                     u2590:
  4703                           	line	71
  4704                           	
  4705  0F41                     l4688:	
  4706  0F41  09A5               	comf	(___fttol@lval),f
  4707  0F42  09A6               	comf	(___fttol@lval+1),f
  4708  0F43  09A7               	comf	(___fttol@lval+2),f
  4709  0F44  09A8               	comf	(___fttol@lval+3),f
  4710  0F45  0AA5               	incf	(___fttol@lval),f
  4711  0F46  1903               	skipnz
  4712  0F47  0AA6               	incf	(___fttol@lval+1),f
  4713  0F48  1903               	skipnz
  4714  0F49  0AA7               	incf	(___fttol@lval+2),f
  4715  0F4A  1903               	skipnz
  4716  0F4B  0AA8               	incf	(___fttol@lval+3),f
  4717  0F4C  2F4D               	goto	l4690
  4718                           	
  4719  0F4D                     l2734:	
  4720                           	line	72
  4721                           	
  4722  0F4D                     l4690:	
  4723  0F4D  0828               	movf	(___fttol@lval+3),w
  4724  0F4E  00FB               	movwf	(?___fttol+3)
  4725  0F4F  0827               	movf	(___fttol@lval+2),w
  4726  0F50  00FA               	movwf	(?___fttol+2)
  4727  0F51  0826               	movf	(___fttol@lval+1),w
  4728  0F52  00F9               	movwf	(?___fttol+1)
  4729  0F53  0825               	movf	(___fttol@lval),w
  4730  0F54  00F8               	movwf	(?___fttol)
  4731                           
  4732  0F55  2F56               	goto	l2724
  4733                           	
  4734  0F56                     l4692:	
  4735                           	line	73
  4736                           	
  4737  0F56                     l2724:	
  4738  0F56  0008               	return
  4739                           	opt stack 0
  4740                           GLOBAL	__end_of___fttol
  4741  0F57                     	__end_of___fttol:
  4742 ;; =============== function ___fttol ends ============
  4743                           
  4744                           	signat	___fttol,4220
  4745                           	global	___ftpack
  4746                           psect	text435,local,class=CODE,delta=2
  4747                           global __ptext435
  4748  0E36                     __ptext435:
  4749                           
  4750 ;; *************** function ___ftpack *****************
  4751 ;; Defined at:
  4752 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  arg             3    0[COMMON] unsigned um
  4755 ;;  exp             1    3[COMMON] unsigned char 
  4756 ;;  sign            1    4[COMMON] unsigned char 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;		None
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  3    0[COMMON] float 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2, status,0
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4768 ;;      Params:         5       0       0       0       0
  4769 ;;      Locals:         0       0       0       0       0
  4770 ;;      Temps:          3       0       0       0       0
  4771 ;;      Totals:         8       0       0       0       0
  4772 ;;Total ram usage:        8 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		___ftadd
  4778 ;;		___ftdiv
  4779 ;;		___ftmul
  4780 ;;		___lwtoft
  4781 ;;		___lbtoft
  4782 ;;		___abtoft
  4783 ;;		___awtoft
  4784 ;;		___altoft
  4785 ;;		___lltoft
  4786 ;;		___attoft
  4787 ;;		___lttoft
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           psect	text435
  4791                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  4792                           	line	63
  4793                           	global	__size_of___ftpack
  4794  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  4795                           	
  4796  0E36                     ___ftpack:	
  4797                           	opt	stack 5
  4798                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4799                           	line	64
  4800                           	
  4801  0E36                     l4614:	
  4802  0E36  0873               	movf	(___ftpack@exp),w
  4803  0E37  1D03               	skipz
  4804  0E38  2E3A               	goto	u2390
  4805  0E39  2E42               	goto	l4618
  4806  0E3A                     u2390:
  4807                           	
  4808  0E3A                     l4616:	
  4809  0E3A  0872               	movf	(___ftpack@arg+2),w
  4810  0E3B  0471               	iorwf	(___ftpack@arg+1),w
  4811  0E3C  0470               	iorwf	(___ftpack@arg),w
  4812  0E3D  1D03               	skipz
  4813  0E3E  2E40               	goto	u2401
  4814  0E3F  2E41               	goto	u2400
  4815  0E40                     u2401:
  4816  0E40  2E58               	goto	l4624
  4817  0E41                     u2400:
  4818  0E41  2E42               	goto	l4618
  4819                           	
  4820  0E42                     l2948:	
  4821                           	line	65
  4822                           	
  4823  0E42                     l4618:	
  4824  0E42  3000               	movlw	0x0
  4825  0E43  00F0               	movwf	(?___ftpack)
  4826  0E44  3000               	movlw	0x0
  4827  0E45  00F1               	movwf	(?___ftpack+1)
  4828  0E46  3000               	movlw	0x0
  4829  0E47  00F2               	movwf	(?___ftpack+2)
  4830  0E48  2EB0               	goto	l2949
  4831                           	
  4832  0E49                     l4620:	
  4833  0E49  2EB0               	goto	l2949
  4834                           	
  4835  0E4A                     l2946:	
  4836                           	line	66
  4837  0E4A  2E58               	goto	l4624
  4838                           	
  4839  0E4B                     l2951:	
  4840                           	line	67
  4841                           	
  4842  0E4B                     l4622:	
  4843  0E4B  3001               	movlw	(01h)
  4844  0E4C  00F5               	movwf	(??___ftpack+0)+0
  4845  0E4D  0875               	movf	(??___ftpack+0)+0,w
  4846  0E4E  07F3               	addwf	(___ftpack@exp),f
  4847                           	line	68
  4848  0E4F  3001               	movlw	01h
  4849  0E50                     u2415:
  4850  0E50  1003               	clrc
  4851  0E51  0CF2               	rrf	(___ftpack@arg+2),f
  4852  0E52  0CF1               	rrf	(___ftpack@arg+1),f
  4853  0E53  0CF0               	rrf	(___ftpack@arg),f
  4854  0E54  3EFF               	addlw	-1
  4855  0E55  1D03               	skipz
  4856  0E56  2E50               	goto	u2415
  4857                           
  4858  0E57  2E58               	goto	l4624
  4859                           	line	69
  4860                           	
  4861  0E58                     l2950:	
  4862                           	line	66
  4863                           	
  4864  0E58                     l4624:	
  4865  0E58  30FE               	movlw	low highword(0FE0000h)
  4866  0E59  0572               	andwf	(___ftpack@arg+2),w
  4867  0E5A  1D03               	btfss	status,2
  4868  0E5B  2E5D               	goto	u2421
  4869  0E5C  2E5E               	goto	u2420
  4870  0E5D                     u2421:
  4871  0E5D  2E4B               	goto	l4622
  4872  0E5E                     u2420:
  4873  0E5E  2E76               	goto	l2953
  4874                           	
  4875  0E5F                     l2952:	
  4876                           	line	70
  4877  0E5F  2E76               	goto	l2953
  4878                           	
  4879  0E60                     l2954:	
  4880                           	line	71
  4881                           	
  4882  0E60                     l4626:	
  4883  0E60  3001               	movlw	(01h)
  4884  0E61  00F5               	movwf	(??___ftpack+0)+0
  4885  0E62  0875               	movf	(??___ftpack+0)+0,w
  4886  0E63  07F3               	addwf	(___ftpack@exp),f
  4887                           	line	72
  4888                           	
  4889  0E64                     l4628:	
  4890  0E64  3001               	movlw	01h
  4891  0E65  07F0               	addwf	(___ftpack@arg),f
  4892  0E66  3000               	movlw	0
  4893  0E67  1803               	skipnc
  4894  0E68  3001               movlw 1
  4895  0E69  07F1               	addwf	(___ftpack@arg+1),f
  4896  0E6A  3000               	movlw	0
  4897  0E6B  1803               	skipnc
  4898  0E6C  3001               movlw 1
  4899  0E6D  07F2               	addwf	(___ftpack@arg+2),f
  4900                           	line	73
  4901                           	
  4902  0E6E                     l4630:	
  4903  0E6E  3001               	movlw	01h
  4904  0E6F                     u2435:
  4905  0E6F  1003               	clrc
  4906  0E70  0CF2               	rrf	(___ftpack@arg+2),f
  4907  0E71  0CF1               	rrf	(___ftpack@arg+1),f
  4908  0E72  0CF0               	rrf	(___ftpack@arg),f
  4909  0E73  3EFF               	addlw	-1
  4910  0E74  1D03               	skipz
  4911  0E75  2E6F               	goto	u2435
  4912                           
  4913                           	line	74
  4914                           	
  4915  0E76                     l2953:	
  4916                           	line	70
  4917  0E76  30FF               	movlw	low highword(0FF0000h)
  4918  0E77  0572               	andwf	(___ftpack@arg+2),w
  4919  0E78  1D03               	btfss	status,2
  4920  0E79  2E7B               	goto	u2441
  4921  0E7A  2E7C               	goto	u2440
  4922  0E7B                     u2441:
  4923  0E7B  2E60               	goto	l4626
  4924  0E7C                     u2440:
  4925  0E7C  2E89               	goto	l4634
  4926                           	
  4927  0E7D                     l2955:	
  4928                           	line	75
  4929  0E7D  2E89               	goto	l4634
  4930                           	
  4931  0E7E                     l2957:	
  4932                           	line	76
  4933                           	
  4934  0E7E                     l4632:	
  4935  0E7E  3001               	movlw	low(01h)
  4936  0E7F  02F3               	subwf	(___ftpack@exp),f
  4937                           	line	77
  4938  0E80  3001               	movlw	01h
  4939  0E81                     u2455:
  4940  0E81  1003               	clrc
  4941  0E82  0DF0               	rlf	(___ftpack@arg),f
  4942  0E83  0DF1               	rlf	(___ftpack@arg+1),f
  4943  0E84  0DF2               	rlf	(___ftpack@arg+2),f
  4944  0E85  3EFF               	addlw	-1
  4945  0E86  1D03               	skipz
  4946  0E87  2E81               	goto	u2455
  4947  0E88  2E89               	goto	l4634
  4948                           	line	78
  4949                           	
  4950  0E89                     l2956:	
  4951                           	line	75
  4952                           	
  4953  0E89                     l4634:	
  4954  0E89  1FF1               	btfss	(___ftpack@arg+1),(15)&7
  4955  0E8A  2E8C               	goto	u2461
  4956  0E8B  2E8D               	goto	u2460
  4957  0E8C                     u2461:
  4958  0E8C  2E7E               	goto	l4632
  4959  0E8D                     u2460:
  4960                           	
  4961  0E8D                     l2958:	
  4962                           	line	79
  4963  0E8D  1873               	btfsc	(___ftpack@exp),(0)&7
  4964  0E8E  2E90               	goto	u2471
  4965  0E8F  2E91               	goto	u2470
  4966  0E90                     u2471:
  4967  0E90  2E97               	goto	l2959
  4968  0E91                     u2470:
  4969                           	line	80
  4970                           	
  4971  0E91                     l4636:	
  4972  0E91  30FF               	movlw	0FFh
  4973  0E92  05F0               	andwf	(___ftpack@arg),f
  4974  0E93  307F               	movlw	07Fh
  4975  0E94  05F1               	andwf	(___ftpack@arg+1),f
  4976  0E95  30FF               	movlw	0FFh
  4977  0E96  05F2               	andwf	(___ftpack@arg+2),f
  4978                           	
  4979  0E97                     l2959:	
  4980                           	line	81
  4981  0E97  1003               	clrc
  4982  0E98  0CF3               	rrf	(___ftpack@exp),f
  4983                           
  4984                           	line	82
  4985                           	
  4986  0E99                     l4638:	
  4987  0E99  0873               	movf	(___ftpack@exp),w
  4988  0E9A  00F5               	movwf	((??___ftpack+0)+0)
  4989  0E9B  01F6               	clrf	((??___ftpack+0)+0+1)
  4990  0E9C  01F7               	clrf	((??___ftpack+0)+0+2)
  4991  0E9D  3010               	movlw	010h
  4992  0E9E                     u2485:
  4993  0E9E  1003               	clrc
  4994  0E9F  0DF5               	rlf	(??___ftpack+0)+0,f
  4995  0EA0  0DF6               	rlf	(??___ftpack+0)+1,f
  4996  0EA1  0DF7               	rlf	(??___ftpack+0)+2,f
  4997  0EA2                     u2480:
  4998  0EA2  3EFF               	addlw	-1
  4999  0EA3  1D03               	skipz
  5000  0EA4  2E9E               	goto	u2485
  5001  0EA5  0875               	movf	0+(??___ftpack+0)+0,w
  5002  0EA6  04F0               	iorwf	(___ftpack@arg),f
  5003  0EA7  0876               	movf	1+(??___ftpack+0)+0,w
  5004  0EA8  04F1               	iorwf	(___ftpack@arg+1),f
  5005  0EA9  0877               	movf	2+(??___ftpack+0)+0,w
  5006  0EAA  04F2               	iorwf	(___ftpack@arg+2),f
  5007                           	line	83
  5008                           	
  5009  0EAB                     l4640:	
  5010  0EAB  0874               	movf	(___ftpack@sign),w
  5011  0EAC  1D03               	skipz
  5012  0EAD  2EAF               	goto	u2490
  5013  0EAE  2EB0               	goto	l2960
  5014  0EAF                     u2490:
  5015                           	line	84
  5016                           	
  5017  0EAF                     l4642:	
  5018  0EAF  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  5019                           	
  5020  0EB0                     l2960:	
  5021                           	line	85
  5022                           	line	86
  5023                           	
  5024  0EB0                     l2949:	
  5025  0EB0  0008               	return
  5026                           	opt stack 0
  5027                           GLOBAL	__end_of___ftpack
  5028  0EB1                     	__end_of___ftpack:
  5029 ;; =============== function ___ftpack ends ============
  5030                           
  5031                           	signat	___ftpack,12411
  5032                           	global	___lwdiv
  5033                           psect	text436,local,class=CODE,delta=2
  5034                           global __ptext436
  5035  0DE8                     __ptext436:
  5036                           
  5037 ;; *************** function ___lwdiv *****************
  5038 ;; Defined at:
  5039 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  divisor         2    6[COMMON] unsigned int 
  5042 ;;  dividend        2    8[COMMON] unsigned int 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;  quotient        2   11[COMMON] unsigned int 
  5045 ;;  counter         1   13[COMMON] unsigned char 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  2    6[COMMON] unsigned int 
  5048 ;; Registers used:
  5049 ;;		wreg, status,2, status,0
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5055 ;;      Params:         4       0       0       0       0
  5056 ;;      Locals:         3       0       0       0       0
  5057 ;;      Temps:          1       0       0       0       0
  5058 ;;      Totals:         8       0       0       0       0
  5059 ;;Total ram usage:        8 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_main
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           psect	text436
  5068                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5069                           	line	5
  5070                           	global	__size_of___lwdiv
  5071  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  5072                           	
  5073  0DE8                     ___lwdiv:	
  5074                           	opt	stack 7
  5075                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5076                           	line	9
  5077                           	
  5078  0DE8                     l4588:	
  5079  0DE8  01FB               	clrf	(___lwdiv@quotient)
  5080  0DE9  01FC               	clrf	(___lwdiv@quotient+1)
  5081                           	line	10
  5082                           	
  5083  0DEA                     l4590:	
  5084  0DEA  0877               	movf	(___lwdiv@divisor+1),w
  5085  0DEB  0476               	iorwf	(___lwdiv@divisor),w
  5086  0DEC  1903               	skipnz
  5087  0DED  2DEF               	goto	u2321
  5088  0DEE  2DF0               	goto	u2320
  5089  0DEF                     u2321:
  5090  0DEF  2E2E               	goto	l4610
  5091  0DF0                     u2320:
  5092                           	line	11
  5093                           	
  5094  0DF0                     l4592:	
  5095  0DF0  01FD               	clrf	(___lwdiv@counter)
  5096  0DF1  1403               	bsf	status,0
  5097  0DF2  0DFD               	rlf	(___lwdiv@counter),f
  5098                           	line	12
  5099  0DF3  2E00               	goto	l4598
  5100                           	
  5101  0DF4                     l2622:	
  5102                           	line	13
  5103                           	
  5104  0DF4                     l4594:	
  5105  0DF4  3001               	movlw	01h
  5106                           	
  5107  0DF5                     u2335:
  5108  0DF5  1003               	clrc
  5109  0DF6  0DF6               	rlf	(___lwdiv@divisor),f
  5110  0DF7  0DF7               	rlf	(___lwdiv@divisor+1),f
  5111  0DF8  3EFF               	addlw	-1
  5112  0DF9  1D03               	skipz
  5113  0DFA  2DF5               	goto	u2335
  5114                           	line	14
  5115                           	
  5116  0DFB                     l4596:	
  5117  0DFB  3001               	movlw	(01h)
  5118  0DFC  00FA               	movwf	(??___lwdiv+0)+0
  5119  0DFD  087A               	movf	(??___lwdiv+0)+0,w
  5120  0DFE  07FD               	addwf	(___lwdiv@counter),f
  5121  0DFF  2E00               	goto	l4598
  5122                           	line	15
  5123                           	
  5124  0E00                     l2621:	
  5125                           	line	12
  5126                           	
  5127  0E00                     l4598:	
  5128  0E00  1FF7               	btfss	(___lwdiv@divisor+1),(15)&7
  5129  0E01  2E03               	goto	u2341
  5130  0E02  2E04               	goto	u2340
  5131  0E03                     u2341:
  5132  0E03  2DF4               	goto	l4594
  5133  0E04                     u2340:
  5134  0E04  2E06               	goto	l4600
  5135                           	
  5136  0E05                     l2623:	
  5137  0E05  2E06               	goto	l4600
  5138                           	line	16
  5139                           	
  5140  0E06                     l2624:	
  5141                           	line	17
  5142                           	
  5143  0E06                     l4600:	
  5144  0E06  3001               	movlw	01h
  5145                           	
  5146  0E07                     u2355:
  5147  0E07  1003               	clrc
  5148  0E08  0DFB               	rlf	(___lwdiv@quotient),f
  5149  0E09  0DFC               	rlf	(___lwdiv@quotient+1),f
  5150  0E0A  3EFF               	addlw	-1
  5151  0E0B  1D03               	skipz
  5152  0E0C  2E07               	goto	u2355
  5153                           	line	18
  5154  0E0D  0877               	movf	(___lwdiv@divisor+1),w
  5155  0E0E  0279               	subwf	(___lwdiv@dividend+1),w
  5156  0E0F  1D03               	skipz
  5157  0E10  2E13               	goto	u2365
  5158  0E11  0876               	movf	(___lwdiv@divisor),w
  5159  0E12  0278               	subwf	(___lwdiv@dividend),w
  5160  0E13                     u2365:
  5161  0E13  1C03               	skipc
  5162  0E14  2E16               	goto	u2361
  5163  0E15  2E17               	goto	u2360
  5164  0E16                     u2361:
  5165  0E16  2E1F               	goto	l4606
  5166  0E17                     u2360:
  5167                           	line	19
  5168                           	
  5169  0E17                     l4602:	
  5170  0E17  0876               	movf	(___lwdiv@divisor),w
  5171  0E18  02F8               	subwf	(___lwdiv@dividend),f
  5172  0E19  0877               	movf	(___lwdiv@divisor+1),w
  5173  0E1A  1C03               	skipc
  5174  0E1B  03F9               	decf	(___lwdiv@dividend+1),f
  5175  0E1C  02F9               	subwf	(___lwdiv@dividend+1),f
  5176                           	line	20
  5177                           	
  5178  0E1D                     l4604:	
  5179  0E1D  147B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  5180  0E1E  2E1F               	goto	l4606
  5181                           	line	21
  5182                           	
  5183  0E1F                     l2625:	
  5184                           	line	22
  5185                           	
  5186  0E1F                     l4606:	
  5187  0E1F  3001               	movlw	01h
  5188                           	
  5189  0E20                     u2375:
  5190  0E20  1003               	clrc
  5191  0E21  0CF7               	rrf	(___lwdiv@divisor+1),f
  5192  0E22  0CF6               	rrf	(___lwdiv@divisor),f
  5193  0E23  3EFF               	addlw	-1
  5194  0E24  1D03               	skipz
  5195  0E25  2E20               	goto	u2375
  5196                           	line	23
  5197                           	
  5198  0E26                     l4608:	
  5199  0E26  3001               	movlw	low(01h)
  5200  0E27  02FD               	subwf	(___lwdiv@counter),f
  5201  0E28  1D03               	btfss	status,2
  5202  0E29  2E2B               	goto	u2381
  5203  0E2A  2E2C               	goto	u2380
  5204  0E2B                     u2381:
  5205  0E2B  2E06               	goto	l4600
  5206  0E2C                     u2380:
  5207  0E2C  2E2E               	goto	l4610
  5208                           	
  5209  0E2D                     l2626:	
  5210  0E2D  2E2E               	goto	l4610
  5211                           	line	24
  5212                           	
  5213  0E2E                     l2620:	
  5214                           	line	25
  5215                           	
  5216  0E2E                     l4610:	
  5217  0E2E  087C               	movf	(___lwdiv@quotient+1),w
  5218  0E2F  01F7               	clrf	(?___lwdiv+1)
  5219  0E30  07F7               	addwf	(?___lwdiv+1)
  5220  0E31  087B               	movf	(___lwdiv@quotient),w
  5221  0E32  01F6               	clrf	(?___lwdiv)
  5222  0E33  07F6               	addwf	(?___lwdiv)
  5223                           
  5224  0E34  2E35               	goto	l2627
  5225                           	
  5226  0E35                     l4612:	
  5227                           	line	26
  5228                           	
  5229  0E35                     l2627:	
  5230  0E35  0008               	return
  5231                           	opt stack 0
  5232                           GLOBAL	__end_of___lwdiv
  5233  0E36                     	__end_of___lwdiv:
  5234 ;; =============== function ___lwdiv ends ============
  5235                           
  5236                           	signat	___lwdiv,8314
  5237                           	global	___wmul
  5238                           psect	text437,local,class=CODE,delta=2
  5239                           global __ptext437
  5240  0D2E                     __ptext437:
  5241                           
  5242 ;; *************** function ___wmul *****************
  5243 ;; Defined at:
  5244 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  multiplier      2    0[COMMON] unsigned int 
  5247 ;;  multiplicand    2    2[COMMON] unsigned int 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  product         2    4[COMMON] unsigned int 
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  2    0[COMMON] unsigned int 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5259 ;;      Params:         4       0       0       0       0
  5260 ;;      Locals:         2       0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0
  5262 ;;      Totals:         6       0       0       0       0
  5263 ;;Total ram usage:        6 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_main
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           psect	text437
  5272                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  5273                           	line	3
  5274                           	global	__size_of___wmul
  5275  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  5276                           	
  5277  0D2E                     ___wmul:	
  5278                           	opt	stack 7
  5279                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5280                           	line	4
  5281                           	
  5282  0D2E                     l4576:	
  5283  0D2E  01F4               	clrf	(___wmul@product)
  5284  0D2F  01F5               	clrf	(___wmul@product+1)
  5285  0D30  2D31               	goto	l4578
  5286                           	line	6
  5287                           	
  5288  0D31                     l2614:	
  5289                           	line	7
  5290                           	
  5291  0D31                     l4578:	
  5292  0D31  1C70               	btfss	(___wmul@multiplier),(0)&7
  5293  0D32  2D34               	goto	u2281
  5294  0D33  2D35               	goto	u2280
  5295  0D34                     u2281:
  5296  0D34  2D3B               	goto	l2615
  5297  0D35                     u2280:
  5298                           	line	8
  5299                           	
  5300  0D35                     l4580:	
  5301  0D35  0872               	movf	(___wmul@multiplicand),w
  5302  0D36  07F4               	addwf	(___wmul@product),f
  5303  0D37  1803               	skipnc
  5304  0D38  0AF5               	incf	(___wmul@product+1),f
  5305  0D39  0873               	movf	(___wmul@multiplicand+1),w
  5306  0D3A  07F5               	addwf	(___wmul@product+1),f
  5307                           	
  5308  0D3B                     l2615:	
  5309                           	line	9
  5310  0D3B  3001               	movlw	01h
  5311                           	
  5312  0D3C                     u2295:
  5313  0D3C  1003               	clrc
  5314  0D3D  0DF2               	rlf	(___wmul@multiplicand),f
  5315  0D3E  0DF3               	rlf	(___wmul@multiplicand+1),f
  5316  0D3F  3EFF               	addlw	-1
  5317  0D40  1D03               	skipz
  5318  0D41  2D3C               	goto	u2295
  5319                           	line	10
  5320                           	
  5321  0D42                     l4582:	
  5322  0D42  3001               	movlw	01h
  5323                           	
  5324  0D43                     u2305:
  5325  0D43  1003               	clrc
  5326  0D44  0CF1               	rrf	(___wmul@multiplier+1),f
  5327  0D45  0CF0               	rrf	(___wmul@multiplier),f
  5328  0D46  3EFF               	addlw	-1
  5329  0D47  1D03               	skipz
  5330  0D48  2D43               	goto	u2305
  5331                           	line	11
  5332  0D49  0871               	movf	((___wmul@multiplier+1)),w
  5333  0D4A  0470               	iorwf	((___wmul@multiplier)),w
  5334  0D4B  1D03               	skipz
  5335  0D4C  2D4E               	goto	u2311
  5336  0D4D  2D4F               	goto	u2310
  5337  0D4E                     u2311:
  5338  0D4E  2D31               	goto	l4578
  5339  0D4F                     u2310:
  5340  0D4F  2D50               	goto	l4584
  5341                           	
  5342  0D50                     l2616:	
  5343                           	line	12
  5344                           	
  5345  0D50                     l4584:	
  5346  0D50  0875               	movf	(___wmul@product+1),w
  5347  0D51  01F1               	clrf	(?___wmul+1)
  5348  0D52  07F1               	addwf	(?___wmul+1)
  5349  0D53  0874               	movf	(___wmul@product),w
  5350  0D54  01F0               	clrf	(?___wmul)
  5351  0D55  07F0               	addwf	(?___wmul)
  5352                           
  5353  0D56  2D57               	goto	l2617
  5354                           	
  5355  0D57                     l4586:	
  5356                           	line	13
  5357                           	
  5358  0D57                     l2617:	
  5359  0D57  0008               	return
  5360                           	opt stack 0
  5361                           GLOBAL	__end_of___wmul
  5362  0D58                     	__end_of___wmul:
  5363 ;; =============== function ___wmul ends ============
  5364                           
  5365                           	signat	___wmul,8314
  5366                           	global	_InitADC
  5367                           psect	text438,local,class=CODE,delta=2
  5368                           global __ptext438
  5369  0003                     __ptext438:
  5370                           
  5371 ;; *************** function _InitADC *****************
  5372 ;; Defined at:
  5373 ;;		line 11 in file "C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\ADC.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;		None
  5378 ;; Return value:  Size  Location     Type
  5379 ;;		None               void
  5380 ;; Registers used:
  5381 ;;		wreg
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5387 ;;      Params:         0       0       0       0       0
  5388 ;;      Locals:         0       0       0       0       0
  5389 ;;      Temps:          0       0       0       0       0
  5390 ;;      Totals:         0       0       0       0       0
  5391 ;;Total ram usage:        0 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; This function calls:
  5394 ;;		Nothing
  5395 ;; This function is called by:
  5396 ;;		_main
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           psect	text438
  5400                           	file	"C:\Users\port\Downloads\PIC16F877 ADC Code\PIC16F877 ADC Code\Code\ADC.c"
  5401                           	line	11
  5402                           	global	__size_of_InitADC
  5403  000D                     	__size_of_InitADC	equ	__end_of_InitADC-_InitADC
  5404                           	
  5405  0003                     _InitADC:	
  5406                           	opt	stack 7
  5407                           ; Regs used in _InitADC: [wreg]
  5408                           	line	12
  5409                           	
  5410  0003                     l4566:	
  5411                           ;ADC.c: 12: ADCON1 = 0x80;
  5412  0003  3080               	movlw	(080h)
  5413  0004  1683               	bsf	status, 5	;RP0=1, select bank1
  5414  0005  1303               	bcf	status, 6	;RP1=0, select bank1
  5415  0006  009F               	movwf	(159)^080h	;volatile
  5416                           	line	13
  5417                           ;ADC.c: 13: TRISA = 0x2f;
  5418  0007  302F               	movlw	(02Fh)
  5419  0008  0085               	movwf	(133)^080h	;volatile
  5420                           	line	14
  5421                           ;ADC.c: 14: TRISE = 0x07;
  5422  0009  3007               	movlw	(07h)
  5423  000A  0089               	movwf	(137)^080h	;volatile
  5424                           	line	15
  5425                           ;ADC.c: 15: ADCON0 = 0x81;
  5426  000B  3081               	movlw	(081h)
  5427  000C  1283               	bcf	status, 5	;RP0=0, select bank0
  5428  000D  1303               	bcf	status, 6	;RP1=0, select bank0
  5429  000E  009F               	movwf	(31)	;volatile
  5430                           	line	16
  5431                           	
  5432  000F                     l1304:	
  5433  000F  0008               	return
  5434                           	opt stack 0
  5435                           GLOBAL	__end_of_InitADC
  5436  0010                     	__end_of_InitADC:
  5437 ;; =============== function _InitADC ends ============
  5438                           
  5439                           	signat	_InitADC,88
  5440                           psect	text439,local,class=CODE,delta=2
  5441                           global __ptext439
  5442  0000                     __ptext439:
  5443                           	global	btemp
  5444  007E                     	btemp set 07Eh
  5445                           
  5446                           	DABS	1,126,2	;btemp
  5447                           	global	wtemp0
  5448  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri May 01 21:48:45 2020

                        _RD 0C60                          _WR 0C61         ___wmul@multiplicand 0072  
              ___ftadd@exp1 0036                ___ftadd@exp2 0035                ___ftadd@sign 0034  
                       l661 0FFF                         l655 03BB                         l656 07FC  
                       l657 07FD                         l658 07FD                         _GIE 005F  
                       _RB0 0030                         _RB1 0031                         _RB4 0034  
                       _RB5 0035                         _RB6 0036                         _RB7 0037  
                       _map 0F57                ___ftdiv@cntr 0041                ___ftdiv@sign 0046  
                      l1310 0DE7                        l1304 000F                        l1307 0DD1  
                      l1308 0DD1                        l1309 0DD6                        l5000 0078  
                      l5010 0093                        l5002 0079                        l2620 0E2E  
                      l5012 0099                        l5004 007E                        l5020 03B0  
                      l2621 0E00                        l2614 0D31                        l2622 0DF4  
                      l2702 00BB                        l5006 0087                        l5014 0CEA  
                      l5030 0426                        l5022 03B5                        l2615 0D3B  
                      l2623 0E05                        l2703 0167                        l2616 0D50  
                      l2624 0E06                        l2704 00D4                        l2720 0239  
                      l2712 0183                        l5008 008D                        l5016 0CF0  
                      l5040 052F                        l5032 0475                        l5024 03BB  
                      l2617 0D57                        l2625 0E1F                        l2705 011A  
                      l2713 0255                        l2626 0E2D                        l2730 0F29  
                      l2706 013C                        l2714 019C                        l5050 05F7  
                      l5042 053D                        l5034 0483                        l5026 03C9  
                      l5018 039C                        l2627 0E35                        l2731 0F36  
                      l2723 0ECE                        l2707 014B                        l2715 01DC  
                      l2732 0F2A                        l2724 0F56                        l2660 0285  
                      l2716 01F1                        l5060 06F2                        l5052 0646  
                      l5044 058C                        l5036 04D2                        l5028 0418  
                      l2733 0F3C                        l2725 0F19                        l2661 039B  
                      l2717 0208                        l2734 0F4D                        l2726 0F05  
                      l2670 02DE                        l2662 02A2                        l2718 020D  
                      l5070 07D1                        l5062 0723                        l5054 0654  
                      l5046 059A                        l5038 04E0                        l2727 0F06  
                      l2671 02DF                        l2719 0222                        l4600 0E06  
                      l2728 0F18                        l2680 0316                        l2672 02ED  
                      l2664 02A1                        l5072 07DA                        l5064 076F  
                      l5056 06A3                        l5048 05E9                        l2729 0F3D  
                      l1953 0D12                        l2681 0324                        l2673 02E0  
                      l2665 02AB                        l4602 0E17                        l4610 0E2E  
                      l2682 0317                        l2674 02F4                        l2666 02B0  
                      l2658 028D                        l1962 009F                        l5074 07E3  
                      l5066 07C3                        l5058 06DB                        l2683 032B  
                      l2667 02F5                        l2675 032C                        l1971 0CF9  
                      l4612 0E35                        l4604 0E1D                        l4620 0E49  
                      l2684 0341                        l2676 032C                        l2668 02C5  
                      l1956 0DAF                        l5076 07EC                        l5068 07C8  
                      l2685 0356                        l2677 02FC                        l2837 0D2D  
                      l4606 0E1F                        l4630 0E6E                        l2950 0E58  
                      l4622 0E4B                        l4614 0E36                        l2686 037F  
                      ?_map 0057                        l2951 0E4B                        l2679 0315  
                      l1959 0D83                        l4608 0E26                        l2960 0EB0  
                      l4640 0EAB                        l4632 0E7E                        l2952 0E5F  
                      l4624 0E58                        l4616 0E3A                        l4720 0CE9  
                      l4800 02A6                        l2953 0E76                        l2777 0CE8  
                      l4642 0EAF                        l4634 0E89                        l4626 0E60  
                      l2954 0E60                        l2946 0E4A                        l4618 0E42  
                      l4650 0EB1                        l2778 0CE9                        l4714 0CDE  
                      l4810 02C5                        l4802 02AA                        l2955 0E7D  
                      l4580 0D35                        l4636 0E91                        l2956 0E89  
                      l4628 0E64                        l2948 0E42                        l4660 0EE1  
                      l4652 0EC4                        l4716 0CE5                        l4812 02CF  
                      l4820 02F5                        l4804 02AF                        l4900 0194  
                      l2957 0E7E                        l2949 0EB0                        l4566 0003  
                      l4582 0D42                        l4590 0DEA                        l4638 0E99  
                      l2958 0E8D                        l4670 0EFB                        l4662 0EE7  
                      l4654 0ECD                        l4718 0CE8                        l4830 0324  
                      l4822 02FC                        l4814 02D5                        l4806 02B1  
                      l4910 01CB                        l4902 019B                        l2959 0E97  
                      l4584 0D50                        l4576 0D2E                        l4592 0DF0  
                      l4680 0F28                        l4672 0F04                        l4664 0EEE  
                      l4656 0ECE                        l4840 0367                        l4832 0330  
                      l4824 0306                        l4816 02E0                        l4808 02B7  
                      l4920 01F1                        l4912 01D1                        l4904 019C  
                      l4586 0D57                        l4578 0D31                        l4594 0DF4  
                      l4690 0F4D                        l4682 0F2A                        l4674 0F06  
                      l4666 0EF0                        l4658 0EE0                        l4770 0DD6  
                      l4842 036B                        l4834 0341                        l4826 030C  
                      l4818 02ED                        l4850 00A0                        l4930 0211  
                      l4922 01F9                        l4914 01D7                        l4906 01C9  
                      l4596 0DFB                        l4588 0DE8                        l4692 0F56  
                      l4684 0F36                        l4668 0EF4                        l4676 0F19  
                      l4772 0DE7                        l4764 0DB1                        l4844 037B  
                      l4836 0345                        l4828 0317                        l4780 0256  
                      l4860 00D3                        l4852 00B3                        l4940 0255  
                      l4932 0222                        l4924 0201                        l4916 01DC  
                      l4908 01CA                        l4598 0E00                        l4678 0F1F  
                      l4686 0F3D                        l4766 0DC4                        l4774 0CFA  
                      l4846 037F                        l4838 0356                        l4790 028C  
                      l4782 0270                        l4870 0103                        l4862 00D4  
                      l4854 00BA                        l4934 022A                        l4926 0208  
                      l4918 01E0                        l4942 0D13                        l4950 0D59  
                      l4688 0F41                        l4768 0DCD                        l4776 0CFD  
                      l4848 039B                        l4792 028D                        l4784 0274  
                      l4880 0130                        l4872 0107                        l4864 00DA  
                      l4856 00BB                        l4936 0232                        l4928 020D  
                      l4944 0D2D                        l4960 0D7E                        l4952 0D5C  
                      l4778 0D06                        l4794 0291                        l4786 027A  
                      l4890 0167                        l4882 013A                        l4874 010E  
                      l4866 00DF                        l4858 00CC                        l4938 0239  
                      l4946 0F57                        l4954 0D65                        l4970 0D9C  
                      l4962 0D85                        l4796 0297                        l4788 0285  
                      l4884 013C                        l4876 011A                        l4868 00F1  
                      l4892 0168                        l4948 0FFF                        l4956 0D6A  
                      l4972 0DAA                        l4964 0D88                        l4980 0033  
                      l4798 02A2                        l4886 0144                        l4878 0122  
                      l4894 017B                        l4958 0D70                        l4966 0D91  
                      l4990 0053                        l4982 0037                        l4974 0010  
                      l4888 014B                        l4896 0182                        l4968 0D96  
                      l4992 005A                        l4984 003C                        l4976 0020  
                      l4898 0183                        l4994 0060                        l4986 0044  
                      l4978 002D                        l4996 0064                        l4988 004A  
                      l4998 0072                        u3000 0130                        u3001 012F  
                      u3020 014A                        u3021 0149                        u3005 012C  
                      u2310 0D4F                        u3110 0207                        u3030 017B  
                      u2311 0D4E                        u3015 013D                        u3111 0206  
                      u3031 017A                        u2320 0DF0                        u2400 0E41  
                      u3120 0211                        u3040 0194                        u2305 0D43  
                      u2321 0DEF                        u2401 0E40                        u3121 0210  
                      u3105 01FA                        u3041 0193                        u3050 01AC  
                      u3131 021A                        u2340 0E04                        u2420 0E5E  
                      u2500 0EC4                        u3132 0221                        u3060 01BE  
                      u2341 0E03                        u2421 0E5D                        u2501 0EC3  
                      u2510 0ED9                        u3070 01E0                        u2335 0DF5  
                      u2415 0E50                        u3071 01DF                        u3055 01A8  
                      u3207 0CF4                        u2280 0D35                        u2360 0E17  
                      u2440 0E7C                        u2520 0EF4                        u3160 0238  
                      u2281 0D34                        u2361 0E16                        u2441 0E7B  
                      u2521 0EF3                        u3161 0237                        u3145 0223  
                      u3081 01E9                        u3065 01BA                        u3217 0026  
                      u2530 0EFB                        u3082 01F0                        u2355 0E07  
                      u2435 0E6F                        u2531 0EFA                        u2515 0ED5  
                      u3155 022B                        u3227 0040                        u2380 0E2C  
                      u2460 0E8D                        u2620 0CE5                        u2700 0DD5  
                      u2381 0E2B                        u2365 0E13                        u2461 0E8C  
                      u2621 0CE4                        u2701 0DD4                        u3237 0055  
                      u2470 0E91                        u2390 0E3A                        u2550 0F17  
                      u2710 0274                        u2295 0D3C                        u2375 0E20  
                      u2471 0E90                        u2455 0E81                        u2551 0F16  
                      u3095 01F2                        u3175 0D73                        u3247 006D  
                      u2480 0EA2                        u2560 0F1F                        u2720 027A  
                      u2561 0F1E                        u2545 0F07                        u2721 0279  
                      u3185 0D9F                        u3257 0082                        u2490 0EAF  
                      u2810 02D5                        u2730 0284                        u3267 0D01  
                      u2811 02D4                        u2731 0283                        u2580 0F3B  
                      u2900 032A                        u2820 02DD                        u2740 0291  
                      u2485 0E9E                        u2581 0F3A                        u3277 0D0D  
                      u2901 0329                        u2821 02DC                        u2805 02C6  
                      u3197 07F4                        u2590 0F41                        u2910 0330  
                      u2750 0297                        u2575 0F2C                        u3287 0DC8  
                      u2911 032F                        u2751 0296                        u2920 0345  
                      u2840 02F3                        u2760 02A1                        u2921 0344  
                      u2841 02F2                        u2761 02A0                        u2850 02FB  
                      u2770 02AA                        u2931 0360                        u2851 02FA  
                      u2835 02E1                        u2771 02A9                        u2940 036B  
                      u2932 0367                        u2780 02AF                        u2941 036A  
                      u2781 02AE                        u2870 030C                        u2790 02C4  
                      u2950 00B3                        u2695 0DBA                        u2871 030B  
                      u2791 02C3                        u2951 00B2                        u2880 0314  
                      u2960 00CC                        u2881 0313                        u2865 02FD  
                      u2961 00CB                        u2970 00EA                        u2980 00FC  
                      u2895 0318                        u2975 00E6                        u2985 00F8  
                      u2995 011B                        _WREN 0C62                        _main 039C  
              ___ftpack@arg 0070                ___ftpack@exp 0073                        btemp 007E  
               _GetADCValue 0DB0                        start 0000                ___ftmul@cntr 0055  
              ___ftmul@sign 0056             __end_of_InitADC 0010             __end_of_InitLCD 00A0  
              ___fttol@exp1 0029                       ??_map 007D                ___fttol@lval 0025  
                     ?_main 0070                       _EEADR 010D             __end_of___ftadd 039C  
                     _CARRY 0018             __end_of___ftdiv 0168             __end_of___ftneg 0CEA  
           __end_of___ftmul 0256             __end_of___fttol 0F57             __end_of___lwdiv 0E36  
                     _PORTB 0006                       _TRISA 0085                       _TRISE 0089  
             ___ftpack@sign 0074                       status 0003     __size_of_WriteDataToLCD 002C  
                     wtemp0 007E             _ToggleEpinOfLCD 0CFA                __end_of_main 0800  
                    ??_main 00A0               ___fttol@sign1 0024            ??_ClearLCDScreen 0075  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D            __end_of___ftpack 0EB1            __end_of___lwtoft 0D2E  
                    _TRISB0 0430                      _TRISB1 0431                      _TRISB4 0434  
                    _TRISB5 0435                      _TRISB6 0436                      _TRISB7 0437  
                 ??_InitADC 0070                   ??_InitLCD 0075                      ___wmul 0D2E  
                 ??___ftadd 0030                   ??___ftdiv 003D                   ??___ftneg 0073  
                 ??___ftmul 004D                   ??___fttol 0020                   ??___lwdiv 007A  
     ___ftmul@f3_as_product 0052     __end_of_ToggleEpinOfLCD 0D13                  ___ftadd@f1 002A  
                ___ftadd@f2 002D                  ___ftdiv@f1 003A                  ___ftdiv@f2 0037  
                ___ftdiv@f3 0042                  ___ftneg@f1 0070                  ___ftmul@f1 0047  
                ___ftmul@f2 004A                  ___fttol@f1 0078              __pcstackCOMMON 0070  
                ___lwtoft@c 002A    WriteCommandToLCD@Command 0074              _WriteDataToLCD 0D58  
              ?_GetADCValue 0070                  __pmaintext 039C       WriteDataToLCD@LCDChar 0074  
                   ?___wmul 0070                   ?___ftpack 0070                   ?___lwtoft 002A  
    __end_of_WriteDataToLCD 0D84            ?_ToggleEpinOfLCD 0070                     _InitADC 0003  
                   _InitLCD 0010                     ___ftadd 0256                     ___ftdiv 00A0  
                   ___ftneg 0CDE             __size_of___wmul 002A                     ___ftmul 0168  
                   ___fttol 0EB1                     ___lwdiv 0DE8                  ??___ftpack 0075  
                ??___lwtoft 007C                __size_of_map 00A9        end_of_initialization 0CDA  
           ?_WriteDataToLCD 0070                  main@digit1 00C2                  main@digit2 00C0  
                main@digit3 00AE                  main@digit4 00AC                 ___ftdiv@exp 0045  
               ___ftmul@exp 0051        __size_of_GetADCValue 0038              __end_of___wmul 0D58  
        GetADCValue@Channel 0074         start_initialization 0CDA                 __end_of_map 1000  
   __size_of_ClearLCDScreen 0010                    ??___wmul 0074           __size_of___ftpack 007B  
         __size_of___lwtoft 001B               __pcstackBANK0 0020               __pcstackBANK1 00A0  
                  ?_InitADC 0070                    ?_InitLCD 0070            ___lwdiv@dividend 0078  
                  ?___ftadd 002A                   __ptext421 0000                   __ptext430 0256  
                 __ptext422 0CEA                   __ptext431 0CFA                   __ptext423 0010  
                 __ptext432 0DB0                   __ptext424 0D84                   __ptext433 0CDE  
                 __ptext425 0D58                   __ptext434 0EB1                   __ptext426 0F57  
                 __ptext435 0E36                   __ptext427 0D13                   __ptext436 0DE8  
                 __ptext428 0168                   __ptext437 0D2E                   __ptext429 00A0  
                 __ptext438 0003                   __ptext439 0000                    ?___ftdiv 0037  
                  ?___ftneg 0070                    ?___ftmul 0047                    ?___fttol 0078  
                  ?___lwdiv 0076            ??_WriteDataToLCD 0072            ___lwdiv@quotient 007B  
            ___wmul@product 0074    __size_of_ToggleEpinOfLCD 0019                    _GO_nDONE 00FA  
         ___wmul@multiplier 0070              main@ADC_value1 00B0              main@ADC_value2 00B2  
            main@ADC_value3 00B4              main@ADC_value4 00B6              main@ADC_value5 00B8  
            main@ADC_value6 00BA              main@ADC_value7 00BC              main@ADC_value8 00BE  
            _ClearLCDScreen 0CEA           _WriteCommandToLCD 0D84          ?_WriteCommandToLCD 0070  
          __size_of_InitADC 000D            __size_of_InitLCD 0090         ??_WriteCommandToLCD 0072  
          __size_of___ftadd 0146            __size_of___ftdiv 00C8            __size_of___ftneg 000C  
          __size_of___ftmul 00EE            __size_of___fttol 00A6            __size_of___lwdiv 004E  
                  ___ftpack 0E36                    _map$3459 0066                    ___lwtoft 0D13  
           ___lwdiv@divisor 0076      __end_of_ClearLCDScreen 0CFA             ___lwdiv@counter 007D  
 __end_of_WriteCommandToLCD 0DB0               __size_of_main 0464               ??_GetADCValue 0072  
                  map@x_max 005D                    map@value 0057                    map@x_min 005A  
                  map@y_max 0063                    map@y_min 0060           ??_ToggleEpinOfLCD 0070  
             main@ADC_value 00C4             ?_ClearLCDScreen 0070         __end_of_GetADCValue 0DE8  
__size_of_WriteCommandToLCD 002C  
